#<AdxTL>@(#)0.0.0.0 $Revision$
#**
#* Documentation de la procédure RECUP_AXE2_EPI
#* <table>
#* <tr><td><b>Société</b></td><td><b><u><font color="#046380">MICROFIRST</font></u></b></td>
#* <tr><td><b>Auteur</b></td><td>JBS</td>
#* <tr><td><b>Date de création</b></td><td>06 Novembre 2014</td>
#* <tr><td><b>Nom de la requête</b></td><td>WSTEPALIA</td>
#* <tr><td><b>Nom de la publication</b></td><td>RCP_AXE_EPI</td>
#* <tr><td valign="top"><b>Description de la procédure</b></td><td>
#* Récupère le code de l'axe analytique n°2 pour l'interface EPALIS
#* </td></table>
#* @public
#* @param RESULT (<font color="#7F0055"><b>Char</b></font>) Variable résultat du sous-programme
#* @since <font color="green">Version 5</font>
#*!
Subprog RECUP_AXE2_EPI(RESULT)
  Variable Char RESULT
  RESULT = GZAXEEPI
End

#**
#* Documentation de la procédure SET_ACT_EPI
#* <table>
#* <tr><td><b>Société</b></td><td><b><u><font color="#046380">MICROFIRST</font></u></b></td>
#* <tr><td><b>Auteur</b></td><td>JBS</td>
#* <tr><td><b>Date de création</b></td><td>18 mars 2015</td>
#* <tr><td><b>Nom de la requête</b></td><td>SET_ACTEPI</td>
#* <tr><td><b>Nom de la publication</b></td><td>WSEPALIA</td>
#* <tr><td valign="top"><b>Description de la procédure</b></td><td>
#* Cette procédure permet d'alimenter la table ZTEMPEPI afin de générer ensuite une liste d'action EPALIS
#* </td></table>
#* @public
#* @param WCOMPTEUR (<font color="#7F0055"><b>Char</b></font>) Compteur unique
#* @param WFCY (<font color="#7F0055"><b>Char</b></font>) Code du site
#* @param WBPCORD (<font color="#7F0055"><b>Char</b></font>) Code du client
#* @param WUSER (<font color="#7F0055"><b>Char</b></font>) Explication_du_parametre3
#* @param WITMREF (<font color="#7F0055"><b>Char</b></font>) Code de l'article
#* @param WQTY (<font color="#7F0055"><b>Decimal</b></font>) Quantité
#* @param WACT (<font color="#7F0055"><b>Integer</b></font>) Action 1:Réparation, 2:Relocalisation, 3:Transformation
#* @param WDATACT (<font color="#7F0055"><b>Date</b></font>) Date de l'action
#* @param WREFERENCE (<font color="#7F0055"><b>Référence</b></font>) Référence donnée par le client
#* @param WBPAADD (<font color="#7F0055"><b>Adresse</b></font>) Code adresse du client facturé
#* @param WBPCORDF (<font color="#7F0055"><b>Adresse</b></font>) Code du client facturé
#* @param WFCYF (<font color="#7F0055"><b>Adresse</b></font>) Code du site epalia départ livraison
#* @param WFCYF (<font color="#7F0055"><b>Adresse</b></font>) Code du site epalia départ livraison
#* @param WFCYREC (<font color="#7F0055"><b>Char</b></font>) Code du site epalia de réception
#* @param WCHAUFFEUR (<font color="#7F0055"><b>Char</b></font>) Chauffeur
#* @param WPAYS (<font color="#7F0055"><b>Char</b></font>) Pays collecteur
#* @param WTRANSCHG (<font color="#7F0055"><b>Char</b></font>) Transformation chargeur (oui/non)
#* @param WQTEKCUTIL (<font color="#7F0055"><b>Decimal</b></font>) Quantité KC utilisé
#* @param WQTEHS (<font color="#7F0055"><b>Decimal</b></font>) Quantité HS
#* @param WAPPRO (<font color="#7F0055"><b>Char</b></font>) Appro
#* @param RESULT (<font color="#7F0055"><b>Integer</b></font>) Variable résultat du sous-programme
#* @since <font color="green">Version version</font>
#*!
Subprog SET_ACT_EPI(WCOMPTEUR,WFCY,WBPCORD,WUSER,WITMREF,WQTY,WACT,WDATACT,WREFERENCE,WBPAADD,WBPCORDF,WFCYF,WFCYREC,WCHAUFFEUR,WTRANSCHG,WPAYS,WQTEKCUTIL,WQTEHS,WAPPRO,WTYPPAL,WCODCLT
&,WITMREFDEST,WNUMLIG,RESULT)
  Value Char WCOMPTEUR
  Value Char WFCY
  Value Char WBPCORD
  Value Char WUSER
  Value Char WITMREF
  Value Decimal WQTY
  Value Integer WACT
  Value Date WDATACT
  Value Char WREFERENCE
  Value Char WBPAADD
  Value Char WBPCORDF
  Value Char WFCYF
  Value Char WFCYREC
  Value Char WCHAUFFEUR
  Value Integer WTRANSCHG
  Value Char WPAYS
  Value Decimal WQTEKCUTIL
  Value Decimal WQTEHS
  Value Char WAPPRO
  Value Integer WTYPPAL
  Value Char WCODCLT
  Value Char WITMREFDEST
  Value Integer WNUMLIG
  Variable Integer RESULT
  # Ouverture des tables
  If clalev([F:ZTE])=0 : Local File ZTEMPEPI   [F:ZTE]: Endif
  #---------MODIFICATION JBS du 26/10/2017-----------
  #Avant de créer l'enregistrement, nous allons regarder s'il existe déjà une ligne dans
  #la table ZTEMPEPI avec le même compteur
  #Si oui et que le champ ZACTNUM est différent de vide, on va récupérer ce n° d'action
  #pour le mettre sur l'action à créer sinon, on va créer un nouveau numéro d'action
  Local Char WAZCTNUM(30) : WAZCTNUM = ""
  Read[F:ZTE]ZTE1=WCOMPTEUR
  If(fstat=0)Then
    If([F:ZTE]ZACTNUM<>"")Then
      WAZCTNUM = [F:ZTE]ZACTNUM
    Else
      WAZCTNUM = func SPEZ2AE.SPE_GET_COMPT_ACT
    Endif
  Else
    WAZCTNUM = func SPEZ2AE.SPE_GET_COMPT_ACT
  Endif
  #--------------------------------------------------
  Raz [F:ZTE]
  [F:ZTE]ZCOMPTEUR = WCOMPTEUR
  [F:ZTE]ZFCY = WFCY
  [F:ZTE]ZBPCORD = WBPCORD
  [F:ZTE]ZUSER = WUSER
  [F:ZTE]ZITMREF = WITMREF
  [F:ZTE]ZQTY = WQTY
  [F:ZTE]ZACT = WACT
  [F:ZTE]ZDATACT = WDATACT
  [F:ZTE]ZREFERENCE = WREFERENCE
  [F:ZTE]ZBPAADD = WBPAADD
  [F:ZTE]ZBPCORDF = WBPCORDF
  [F:ZTE]ZFCYF = WFCYF
  [F:ZTE]ZFCYREC = WFCYREC
  [F:ZTE]ZCHAUFFEUR = WCHAUFFEUR
  [F:ZTE]ZTRANSCHG = WTRANSCHG
  [F:ZTE]ZQTEKCUTIL = WQTEKCUTIL
  [F:ZTE]ZQTEHS = WQTEHS
  [F:ZTE]ZAPPRO = WAPPRO
  #---------MODIFICATION JBS du 26/10/2017-----------
  [F:ZTE]ZACTNUM = WAZCTNUM
  #--------------------------------------------------
  #---------MODIFICATION JBS du 27/02/2018-----------
  [F:ZTE]ZTYPPAL = WTYPPAL
  #--------------------------------------------------
  [F:ZTE]ZCODCLT = WCODCLT
  If(WPAYS="")Then
    WPAYS = "FR"
  Endif
  [F:ZTE]ZPAYS = WPAYS
  #ZACTOK = 2 -> L'action est effectuée
  #ZACTOK = 3 -> L'action de relocalisation différée
  #ZACTOK = 1 -> L'action non exécutée (Problème de stock si case "Gest act att" ou problème lors de l'exécution de l'action)
  If(WACT=5)Then
    #Dans le cas où l'action est un entrée diverse, on initialise ZACTOK à 2
    [F:ZTE]ZACTOK = 2
  Else
#    If(WDATACT>date$)Then
    If(WACT=2)Then
      [F:ZTE]ZACTOK = 3
    Else
      [F:ZTE]ZACTOK = 1
    Endif
  Endif
  [F:ZTE]ZEXEACT=date$
  [F:ZTE]ZEXEACTH=time$
  [F:ZTE]ZNUMLIG=WNUMLIG
  [F:ZTE]ZITMREFDEST=WITMREFDEST
  [F:ZTE]ZDATEFFET=func Z2WSEPALISB.SPE_GET_DATEFFET(WDATACT, 1)
  Write [F:ZTE]
  If(fstat=0)Then
    RESULT = 1
  Else
    RESULT = 0
  Endif
End

#**
#* Documentation de la fonction GET_ZPSNUM
#* <table>
#* <tr><td><b>Société</b></td><td><b><u><font color="#046380">MICROFIRST</font></u></b></td>
#* <tr><td><b>Auteur</b></td><td>JBS</td>
#* <tr><td><b>Date de création</b></td><td>18 mars 2015</td>
#* <tr><td valign="top"><b>Description de la fonction</b></td><td>
#* Permet de rechercher la précommande EPALIS en fonction du site et du client
#* </td></table>
#* @public
#* @param WFCY (<font color="#7F0055"><b>Char</b></font>) Code du site
#* @param WBPCNUM (<font color="#7F0055"><b>Char</b></font>) Code client
#* @return
#*Variable de retour : RESULT (<font color="#7F0055"><b>Char</b></font>)
#* <br>Explication        : N° de la précommande
#* @since <font color="green">Version 6.5</font>
#*!
Funprog GET_ZPSNUM(WFCY,WBPCNUM)
  Value Char WFCY
  Value Char WBPCNUM
  Local Char RESULT(30)
  # Ouverture des tables
  If clalev([F:ZPS])=0 : Local File ZPSORDER   [F:ZPS]: Endif
  Read [F:ZPS]ZPS1=WFCY;WBPCNUM;2
  If(fstat=0)Then
    RESULT = [F:ZPS]ZPSNUM
  Endif
End RESULT

#**
#* Documentation de la procédure EXEC_ACT_EPI
#* <table>
#* <tr><td><b>Société</b></td><td><b><u><font color="#046380">MICROFIRST</font></u></b></td>
#* <tr><td><b>Auteur</b></td><td>JBS</td>
#* <tr><td><b>Date de création</b></td><td>18 mars 2015</td>
#* <tr><td><b>Nom de la requête</b></td><td>EXE_ACTEPI</td>
#* <tr><td><b>Nom de la publication</b></td><td>WSEPALIA</td>
#* <tr><td valign="top"><b>Description de la procédure</b></td><td>
#* Exécute une action EPALIS en fonction d'un Compteur. Cette fonction récupère une liste d'action dans la table temporaire ZTEMPEPI
#* </td></table>
#* @public
#* @param WCOMPTEUR (<font color="#7F0055"><b>Char</b></font>) Compteur
#* @param RESULT (<font color="#7F0055"><b>Integer</b></font>) Variable résultat du sous-programme
#* @since <font color="green">Version 6.5</font>
#*!
#-------------------------------------------------------------------------------------------------------------------------------------------------
#TODO--------------------------------------------------- PROCEDURE D'EXECUTION D'UNE ACTION ------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------------------------------------------
Subprog EXEC_ACT_EPI(WCOMPTEUR,RESULT)
  Value Char WCOMPTEUR
  Variable Integer RESULT

  #Nous allons déclarer plusieurs tableaux qui contiendront
  #les élements à écrire dans un fichier texte pour l'importation des BLs et/ou des BRs
  Local Integer WTYPIMP(0..399)          # Tableau des type d'import : 1 -> Livraison, 2 -> Réception
  Local Char WTIERS(60)(0..399)          # Tableau des clients facturés si WTYPIMP=1 et des fournisseurs si WTYPIMP=2
  Local Char WITMREF(60)(0..399)         # Tableau des articles de prestation : Valable si WTYPIMP = 1
  Local Integer WTYPPAL(0..399)          # Tableau des type de palettes : Valable si WTYPIMP = 2
  Local Char WARTTRI(60)(0..399)         # Tableau des article de tris : Valable si WTYPIMP = 2
  Local Decimal WQTY(0..399)             # Tableau des quantités
  Local Decimal WTABPRIX(0..399)         # Tableau des prix
  Local Char WCHARGEUR(60)(0..399)       # Tableau des Chargeurs

  Local Integer WCRESDH : WCRESDH = 1    # Variable indiquant s'il y a au moins un BLs à créer : 1-> Non, 2 -> Oui
  Local Integer WCREPTH : WCREPTH = 1    # Variable indiquant s'il y a au moins un BRs à créer : 1-> Non, 2 -> Oui
  Local Integer WNEXTLIG : WNEXTLIG = 0  # Indice de la prochaine ligne à écrire dans le tableau

  Local Decimal WPRIX
  Local Integer WSTAT
  Local Char WSEQ(15)
  Local Integer WTRPINTENT # Permet de stocker si le transport à l'entrée est un transport interne
  Local Integer WTRPINTSOR # Permet de stocker si le transport à la sortie est un transport interne
  Local Char WZACTNUM(30)
  Local Date WDATEFFET
  Local Date WDATACT
  Local Char WSITE(30)
  Local Char WVCRNUM(30)
  Local Char WCODCHARG(30)
  Local Integer WZACT
  Local Char WCHARGACT(30)
  Local Char WCODCLTACT(30)
  #<---------------Modification JBS du 21/02/2017 pour prendre en compte le paramétrage client chargeur ------
  Local Char WCODCLTCOLL(30)(0..399)# Tableau des clients chargeurs collecté
  #---------------------------------------------------------------------------------------------------------->
  #Pour l'instant, on ne sauvegarde pas le prix. Le prix sera récupéré au moment d'écrire le fichier texte
  Local Integer WINDTAB : WINDTAB = 0
  # Ouverture des tables
  If clalev([F:ZTE])=0  : Local File ZTEMPEPI     [F:ZTE]  : Endif
  If clalev([F:ZTE2])=0 : Local File ZTEMPEPI     [F:ZTE2] : Endif
  If clalev([F:ZAEP])=0 : Local File ZACTEPI      [F:ZAEP] : Endif
  If clalev([F:ZSE])=0  : Local File ZPSEPALIS    [F:ZSE]  : Endif
  If clalev([F:ZPD])=0  : Local File ZPSORDERD    [F:ZPD]  : Endif
  If clalev([F:SDH])=0  : Local File SDELIVERY    [F:SDH]  : Endif
  If clalev([F:SDD])=0  : Local File SDELIVERYD   [F:SDD]  : Endif
  If clalev([F:BPC])=0  : Local File BPCUSTOMER   [F:BPC]  : Endif
  If clalev([F:BPR])=0  : Local File BPARTNER     [F:BPR]  : Endif
  If clalev([F:BPD])=0  : Local File BPDLVCUST    [F:BPD]  : Endif
  If clalev([F:TCU])=0  : Local File TABCUR       [F:TCU]  : Endif
  If clalev([F:FCY])=0  : Local File FACILITY     [F:FCY]  : Endif
  If clalev([F:ITM])=0  : Local File ITMMASTER    [F:ITM]  : Endif
  If clalev([F:ZZS])=0  : Local File ZZSTOCK      [F:ZZS]  : Endif
  If clalev([F:ZZSA])=0 : Local File ZZSTOCKARCH  [F:ZZSA] : Endif
  If clalev([F:ZZHL])=0 : Local File ZZHISTOLIGNE [F:ZZHL] : Endif
  If clalev([F:ZZHF])=0 : Local File ZZHISTOFAC   [F:ZZHF] : Endif
  If clalev([F:ZCE])=0  : Local File ZCHEPI       [F:ZCE]  : Endif
  If clalev([F:ZCMC])=0 : Local File ZCOLMULTICHG [F:ZCMC] : Endif
  If clalev([F:ZDPO])=0 : Local File ZDEPOT       [F:ZDPO] : Endif
  If clalev([F:PTH])=0  : Local File PRECEIPT     [F:PTH]  : Endif
  If clalev([F:PTD])=0  : Local File PRECEIPTD    [F:PTD]  : Endif
  If clalev([F:ZAI])=0  : Local File ZADREPI      [F:ZAI]  : Endif
  If clalev([F:ZZAT])=0 : Local File ZZATRIER     [F:ZZAT] : Endif
  If clalev([F:ZZS2])=0 : Local File ZZSTOCK      [F:ZZS2] : Endif
  #On crée une transaction pour permettre l'annulation totale de l'action
  Trbegin [F:ZZS],[F:ZZS2],[F:ZZSA],[F:ZZHL],[F:ZZHF],[F:SDH],[F:SDD],[F:PTH],[F:PTD],[F:ZZAT]
  #On va declarer une variable erreur
  Local Integer WERRTRAIT : WERRTRAIT = 0
  Local Char WINFO(250)
  #Ouverture du fichier Trace
  Local Char TIT(30) :[L]TIT ="Action commande EPALIS"
  Local Integer WFICTRA : WFICTRA = !GSERVEUR and 1 #mettre 0 pour ne pas créer de fichier trace sinon mettre 1
  If WFICTRA : Call OUVRE_TRACE(TIT) From LECFIC : Endif

  For [F:ZTE]ZTE1 Where [F:ZTE]ZCOMPTEUR=WCOMPTEUR
    WZACTNUM   = [F:ZTE]ZACTNUM
    WDATACT    = [F:ZTE]ZDATACT
    WSITE      = [F:ZTE]ZFCY
    WVCRNUM    = [F:ZTE]VCRNUM
    WCODCHARG  = [F:ZTE]ZBPCORD
    WZACT      = [F:ZTE]ZACT
    WCODCLTACT = [F:ZTE]ZCODCLT
    #-----------------------------------------------------
    #Pour chaque enregistrement résultat, nous allons exécuter l'action
    If([F:ZTE]ZACT=11)Then
      #-------------------------------------------------------------------------------------------------------------------------------------------
      #TODO---------------------------------------------------------TRI---------------------------------------------------------------------------
      #-------------------------------------------------------------------------------------------------------------------------------------------
      If WFICTRA : Call ECR_TRACE("Exécution d'une ligne d'action : Tri de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN : Endif
      #-----------------ETAPE N°1--------------------
      #Description : On va alimenter la table des stocks
      Local Integer WNBPALTRAIT : WNBPALTRAIT = 0
      #On récupère l'informaation pour savoir si c'est un transport interne
      Local Char WFILTRESUPP(100) : WFILTRESUPP = "1=1"
      Local Char WCODCLT(30) : WCODCLT = ""
      Local Integer WPARAMSPE : WPARAMSPE = 0
      Local Char WTIERSCF(30)
      WTRPINTENT = 1
      Read[F:ZCE]ZCE0=[F:ZTE]ZBPCORD;[F:ZTE]ZCHAUFFEUR
      If(fstat=0)Then
        WTRPINTENT = [F:ZCE]ZTRPINT
      Endif
      If clalev([F:ZT2])=0 : Local File ZARTTRICC [F:ZT2] : Endif
      For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZTE]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZTE]ZCODCLT
        WPARAMSPE = 1
        Break
      Next
      If clalev([F:ZATV])<>0 : Close File [F:ZATV] : Endif
      If(WPARAMSPE=0)Then
        If clalev([F:ZATV])=0 : Local File ZARTTRIV   [F:ZATV] : Endif
        Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;"";[F:ZTE]ZITMREF
     Else
        If clalev([F:ZATV])=0 : Local File ZARTTRICCV [F:ZATV] : Endif
        WCODCLT = [F:ZTE]ZCODCLT
        WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
        Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT;[F:ZTE]ZITMREF
      Endif
      #<----------------------------------------------------------------------------------------------------------
      # Dans une action de tri, il faut que l'on regarde si on mouvemente les stocks ou pas.
      # Dans le cas ou le chargeur et le client chargeur ont leur axe métier à HP alors il ne faut pas mouvementer
      # les stocks donc faire comme si on ne gérait rien en stock.
      # On va donc commencer par alimenter une variable pour savoir si on est dans ce cas là
      Local Integer WALIMSTO : WALIMSTO = 1 # 1 : on alimente les stocks, 0 : on n'alimente pas les stocks
      If([F:ZTE]ZCODCLT<>"")Then
        #Dans ce cas, on va récupérer l'axe metier du chargeur et du client chargeur
        Read[F:BPC]BPC0=[F:ZTE]ZBPCORD
        If(fstat=0)Then
          Read[F:ZAI]ZAI0=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT
          If(fstat=0)Then
            #If([F:BPC]ZAXEMETEPI="HP" and [F:ZAI]ZAXEMETEPI="HP")Then
            If([F:BPC]ZMODGESTEPI=3 and [F:ZAI]ZMODGESTEPI=3)Then
              #On est dans le cas où on ne gère pas de stock
              WALIMSTO = 0
            Endif
          Endif
        Endif
      Endif
      #---------------------------------------------------------------------------------------------------------->
      # On commence par récupérer les informations de l'article de tri dans le paramétrage du chargeur ou du client chargeur
      If(fstat=0)Then
        #Soit on alimente directement le stock, soit on alimente le stock depuis le stock des palettes à trier
        If(WALIMSTO=1 and [F:ZTE]VCRNUM="")Then
          WNBPALTRAIT = 0
          #On prend dans le stock de palettes à trier du chargeur et du site jusqu'à arriver à la qté souhaitée
          For[F:ZZAT]ZZAT0 Where [F:ZZAT]ZBPCORD=[F:ZTE]ZBPCORD and [F:ZZAT]ZFCY=[F:ZTE]ZFCY
            Raz[F:ZZS]
            [F:ZZS]ZACTG      = 11
            If([F:ZATV]ZCODCHARGSTO<>"")Then
              [F:ZZS]ZBPCORD  = [F:ZATV]ZCODCHARGSTO
            Else
              [F:ZZS]ZBPCORD  = [F:ZZAT]ZBPCORD
            Endif
            [F:ZZS]ZBPCORDF   = [F:ZZAT]ZBPCORD
            [F:ZZS]ZCHAUFFEUR = [F:ZZAT]ZCHAUFFEUR
            [F:ZZS]ZCODCLT    = [F:ZZAT]ZCODCLT
            [F:ZZS]ZDATTRI    = [F:ZZAT]ZDATTRI
            [F:ZZS]ZDATVAL    = [F:ZZAT]ZDATVAL
            [F:ZZS]ZFCY       = [F:ZZAT]ZFCY
            [F:ZZS]ZGESTHS    = [F:ZATV]ZGESTHS
            [F:ZZS]ZGESTKC    = [F:ZATV]ZGESTKC
            [F:ZZS]ZGESTOK    = [F:ZATV]ZGESTOK
            [F:ZZS]ZITMREF    = [F:ZTE]ZITMREF
            [F:ZZS]ZORIGIN    = [F:ZTE]ZACTNUM
            [F:ZZS]ZPAYSISO   = "FR"
            [F:ZZS]ZQTY       = [F:ZZAT]ZQTY
            [F:ZZS]ZSEQ       = [F:ZZAT]ZSEQ
            [F:ZZS]ZTRPINT    = [F:ZZAT]ZTRPINT
            [F:ZZS]ZTYPAL     = [F:ZTE]ZTYPPAL
            [F:ZZS]ZDEPNUM    = [F:ZZAT]ZDEPNUM
            Write[F:ZZS]
            If(fstat<>0)Then
              WERRTRAIT = 1
              INFO = "[11.1] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZSTOCK"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Break
            Else
              #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
              #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
              #Les champs de la table sont les suivants :
              Raz[F:ZZHL]
              [F:ZZHL]          = [F:ZZS]
              #[F:ZZHL]ZACTNUM   = [F:ZZAT]ZACTNUM
              [F:ZZHL]ZACTNUM   = [F:ZZS]ZORIGIN
              [F:ZZHL]ZDATACT   = date$
              [F:ZZHL]ZHEUACT   = time$
              Write[F:ZZHL]
              If(fstat<>0)Then
                WERRTRAIT = 1
                INFO = "[11.2] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
                If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                Break
              Else
                #On va maintenant supprimer l'enregistrement de la table ZZATRIER
                Delete [F:ZZAT] Where [F:ZZAT]ZSEQ=[F:ZZS]ZSEQ
                If(fstat<>0)Then
                  WERRTRAIT = 1
                  INFO = "[11.3] - ERREUR Suppression"
                  If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                Endif
              Endif
            Endif
            WNBPALTRAIT += [F:ZZAT]ZQTY
            If(WNBPALTRAIT>=[F:ZTE]ZQTY)Then
              Break
            Endif
          Next
        Else
          #On est dans le cas d'un tri issu d'une EPX ou d'un tri HP
          For WNBPALTRAIT=1 To [F:ZTE]ZQTY
            Raz[F:ZZS]
            Call NUMERO("ZZSTO","",date$,"",WSEQ,WSTAT) From SUBANM
            If WSTAT=0
              [F:ZZS]ZACTG      = 11
              If([F:ZATV]ZCODCHARGSTO<>"")Then
                [F:ZZS]ZBPCORD  = [F:ZATV]ZCODCHARGSTO
              Else
                [F:ZZS]ZBPCORD  = [F:ZTE]ZBPCORD
              Endif
              [F:ZZS]ZBPCORDF   = [F:ZTE]ZBPCORD
              [F:ZZS]ZCHAUFFEUR = [F:ZTE]ZCHAUFFEUR
              [F:ZZS]ZCODCLT    = [F:ZTE]ZCODCLT
              [F:ZZS]ZDATTRI    = [F:ZTE]ZDATACT
              [F:ZZS]ZDATVAL    = date$
              [F:ZZS]ZFCY       = [F:ZTE]ZFCY
              [F:ZZS]ZGESTHS    = [F:ZATV]ZGESTHS
              [F:ZZS]ZGESTKC    = [F:ZATV]ZGESTKC
              [F:ZZS]ZGESTOK    = [F:ZATV]ZGESTOK
              [F:ZZS]ZITMREF    = [F:ZTE]ZITMREF
              [F:ZZS]ZORIGIN    = [F:ZTE]ZACTNUM
              [F:ZZS]ZPAYSISO   = "FR"
              [F:ZZS]ZQTY       = 1
              [F:ZZS]ZSEQ       = WSEQ
              [F:ZZS]ZTRPINT    = WTRPINTENT
              [F:ZZS]ZTYPAL     = [F:ZTE]ZTYPPAL
              [F:ZZS]ZDEPNUM    = [F:ZTE]ZDEPNUM
              Write[F:ZZS]
              If(fstat<>0)Then
                WERRTRAIT = 1
                INFO = "[11.4] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZSTOCK"
                If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                Break
              Else
                #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
                #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
                #Les champs de la table sont les suivants :
                Raz[F:ZZHL]
                [F:ZZHL]          = [F:ZZS]
                [F:ZZHL]ZACTNUM   = [F:ZTE]VCRNUM
                [F:ZZHL]ZDATACT   = date$
                [F:ZZHL]ZHEUACT   = time$
                Write[F:ZZHL]
                If(fstat<>0)Then
                  WERRTRAIT = 1
                  INFO = "[11.5] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
                  If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                  Break
                Endif
              Endif
            Else
              WERRTRAIT = 1
              INFO = "[11.6] - Des erreurs se sont produites lors de la rcupération du compteur pour la table ZZSTOCK"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Break
            Endif
          Next WNBPALTRAIT
        Endif
      Else
        WERRTRAIT = 1
        INFO = "[11.7] - Impossible de récupérer les informations de l'article de tri du chargeur"
        If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
      Endif
      #-----------------ETAPE N°2--------------------
      #Description : On va regarder s'il y a des choses à facturer suite à ce tri
      Local Integer WNB : WNB=0
      For[F:ZZS]ZZAT0 Where [F:ZZS]ZACTG=[F:ZTE]ZACT and [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF and [F:ZZS]ZTYPAL=[F:ZTE]ZTYPPAL
        WPARAMSPE = 0
        #Pour chaque palette que l'on va traiter, on va récupérer les informations au niveau de la palette
        For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZZS]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZZS]ZCODCLT
          WPARAMSPE = 1
          Break
        Next
        If clalev([F:ZIE])<>0  : Close File [F:ZIE]  : Endif
        WCODCLT = ""
        WFILTRESUPP = "1=1"
        If(WPARAMSPE=0)Then
          If clalev([F:ZIE])=0  : Local File ZEPALIS    [F:ZIE]  : Endif
        Else
          If clalev([F:ZIE])=0  : Local File ZEPALIS3   [F:ZIE]  : Endif
          WCODCLT = [F:ZZS]ZCODCLT
          WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
        Endif
        WTRPINTENT = [F:ZZS]ZTRPINT
        WNB += 1
        Local Integer WPRESTAFACT : WPRESTAFACT = 0
        For [F:ZIE]ZIE0 Where [F:ZIE]CODE_CHARGEU=[F:ZZS]ZBPCORD and [F:ZIE]ART_TRI=[F:ZZS]ZITMREF and [F:ZIE]ZACTDEC="10001" and evalue(WFILTRESUPP)
          #On va regarder si l'article de prestation est à prendre en compte
          WARTPRESTOK = 0
          #On va regarder dans la table ZSPETRI (ZSTRI) s'il y a des spécificités sur les articles de prestation dont l'action déclenchaante est Tri
          If clalev([F:ZSTRI])=0 : Local File ZSPETRI [ZSTRI] : Endif
          #Première chose, on regarde s'il y a des spécificités
          Filter[F:ZSTRI] Where [F:ZSTRI]ZARNUM=[F:ZIE]ZARNUM and [F:ZSTRI]ZCODCHARG=[F:ZIE]CODE_CHARGEU and [F:ZSTRI]ZCODCLTCHARG=WCODCLT
          Local Integer WNBENRSPE : WNBENRSPE = 0
          WNBENRSPE = rowcount([F:ZSTRI])
          Filter[F:ZSTRI]
          #La table ZSPETRI [ZSTRI] à les champs suivants :
          # ZCLTFOU : Client / Fournisseur
          # ZCODCHARG : Code chargeur
          # ZCODCLTCHARG : Code client chargeur
          # ZPAYS : Pays
          # ZSITE : Site coll.
          # ZQTYMAX : Qté max
          # ZQTYMIN : Qté min
          # ZTYPPAL : Qualité emballage
          # ZARTVEN : Code article de vente
          # ZARTACH : Code article achat
          Local Char WPARAM1(30)
          Local Char WPARAM2(30)
          Local Char WPARAM3(30)
          Local Char WPARAM4(30)
          Local Char WPARAM5(30)
          Local Integer WPARAM6
          Local Char WARTVEN(30)
          Local Char WARTACH(30)
          WPARAM1 = [F:ZIE]ZARNUM
          WPARAM2 = [F:ZIE]CODE_CHARGEU
          WPARAM3 = WCODCLT
          If(WNBENRSPE>0)Then
            #--------------------CAS N°1--------------------
            #On commence par regarder si on est dans le cas P1, S1 et Q1
            WPARAM4 = [F:ZTE]ZPAYS : WPARAM5 = [F:ZTE]ZFCY : WPARAM6 = ([F:ZTE]ZTYPPAL+1)
            Gosub SPE_TRAIT_TRI From Z2WSEPALISC
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°2--------------------
              #On regarder si on est dans le cas ALL, S1 et Q1
              WPARAM4 = "ALL" : WPARAM5 = [F:ZTE]ZFCY : WPARAM6 = ([F:ZTE]ZTYPPAL+1)
              Gosub SPE_TRAIT_TRI From Z2WSEPALISC
            Endif
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°3--------------------
              #On regarder si on est dans le cas P1, ALL et Q1
              WPARAM4 = [F:ZTE]ZPAYS : WPARAM5 = "ALL" : WPARAM6 = ([F:ZTE]ZTYPPAL+1)
              Gosub SPE_TRAIT_TRI From Z2WSEPALISC
            Endif
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°4--------------------
              #On regarder si on est dans le cas ALL, ALL et Q1
              WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = ([F:ZTE]ZTYPPAL+1)
              Gosub SPE_TRAIT_TRI From Z2WSEPALISC
            Endif
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°5--------------------
              #On regarder si on est dans le cas P1, S1 et ALL
              WPARAM4 = [F:ZTE]ZPAYS : WPARAM5 = [F:ZTE]ZFCY : WPARAM6 = 1
              Gosub SPE_TRAIT_TRI From Z2WSEPALISC
            Endif
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°6--------------------
              #On regarder si on est dans le cas ALL, S1 et ALL
              WPARAM4 = "ALL" : WPARAM5 = [F:ZTE]ZFCY : WPARAM6 = 1
              Gosub SPE_TRAIT_TRI From Z2WSEPALISC
            Endif
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°7--------------------
              #On regarder si on est dans le cas P1, ALL et ALL
              WPARAM4 = [F:ZTE]ZPAYS : WPARAM5 = "ALL" : WPARAM6 = 1
              Gosub SPE_TRAIT_TRI From Z2WSEPALISC
            Endif
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°8--------------------
              #On regarder si on est dans le cas ALL, ALL et ALL
              WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = 1
              Gosub SPE_TRAIT_TRI From Z2WSEPALISC
            Endif
          Else
            #Il n'y a pas d'enregistrement spécifique donc l"article de prestation sur lequel on se trouve est valable
            WARTPRESTOK = 1
            WTIERSCF = [F:ZIE]CODE_PAYEUR
            WPRIX = [F:ZIE]PRIX
          Endif
          If clalev([F:ZSTRI])<>0 : Close File [F:ZSTRI] : Endif
          If(WARTPRESTOK=1)Then
            #Pour le moment l'article de prestation est à prendre en compte, il faut maintenant que l'on regarde s'il n'est pas soumis
            #à un type de transporteur
            If not([F:ZIE]ZTYPTRSP=0 or [F:ZIE]ZTYPTRSP=1 or ([F:ZIE]ZTYPTRSP=2 and WTRPINTENT=2) or ([F:ZIE]ZTYPTRSP=3 and WTRPINTENT<>2))Then
              WARTPRESTOK = 0
            Endif
          Endif
          If(WARTPRESTOK=1)Then
            WCHARGACT = ""
            If([F:ZIE]ZTYPFLUX=2)Then
              WCHARGACT = [F:ZTE]ZBPCORD
            Endif
            Gosub SPE_ALIM_TAB_ACHVEN_FROM_ZZSTOCK From Z2WSEPALISC
          Endif
        Next
      Next
      #-----------------ETAPE N°3--------------------
      #Description : On va regarder s'il n'y a pas des palettes que l'on doit archiver.
      #Dans notre cas, on va regarder si les palettes que l'on a modifiée sont toujours gérée en stock
      For [F:ZZS]ZZAT0 Where [F:ZZS]ZACTG=[F:ZTE]ZACT and [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF
        #Seules les lignes suivantes nous interesse :
        # Les lignes dont le type st OK et dont la gestion des OK sont à faux
        If([F:ZZS]ZTYPAL=1 and ([F:ZZS]ZGESTOK<>2 or WALIMSTO=0))Then
          #On est sur une ligne qu'il faut archiver
          Raz[F:ZZSA]
          [F:ZZSA] = [F:ZZS]
          Write[F:ZZSA]
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[11.8] - Impossible d'archiver la ligne de stock(OK) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          Endif
        Endif
        # Les lignes dont le type st KC et dont la gestion des KC sont à faux
        If([F:ZZS]ZTYPAL=2 and ([F:ZZS]ZGESTKC<>2 or WALIMSTO=0))Then
          #On est sur une ligne qu'il faut archiver
          Raz[F:ZZSA]
          [F:ZZSA] = [F:ZZS]
          Write[F:ZZSA]
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[11.9] - Impossible d'archiver la ligne de stock(KC) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          Endif
        Endif
        # Les lignes dont le type st HS et dont la gestion des HS sont à faux
        If([F:ZZS]ZTYPAL=3 and ([F:ZZS]ZGESTHS<>2 or WALIMSTO=0))Then
          #On est sur une ligne qu'il faut archiver
          Raz[F:ZZSA]
          [F:ZZSA] = [F:ZZS]
          Write[F:ZZSA]
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[11.10] - Impossible d'archiver la ligne de stock(HS) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          Endif
        Endif
      Next
      If(WALIMSTO=1)Then
        #On est dans le cas où on gère le stock
        #On va maintenant supprimer toutes les lignes de stock modifié par l'action de collecte si les OK ne sont plus gérées
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZTYPAL=1 and [F:ZZS]ZGESTOK<>2
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[11.11] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
        #On va maintenant supprimer toutes les lignes de stock modifié par l'action de collecte si les KC ne sont plus gérées
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZTYPAL=2 and [F:ZZS]ZGESTKC<>2
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[11.12] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
        #On va maintenant supprimer toutes les lignes de stock modifié par l'action de collecte si les HS ne sont plus gérées
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZTYPAL=3 and [F:ZZS]ZGESTHS<>2
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[11.13] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
      Else
        #On est dans le cas où on ne gère pas le stock (cas du HP)
        #On va maintenant supprimer toutes les lignes de stock
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[11.14] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
      Endif
      #----------------------------------------------
    Elsif([F:ZTE]ZACT=12)Then
      #-------------------------------------------------------------------------------------------------------------------------------------------
      #TODO------------------------------------------------------RECEPTION------------------------------------------------------------------------
      #-------------------------------------------------------------------------------------------------------------------------------------------
      If WFICTRA : Call ECR_TRACE("Exécution d'une ligne d'action : Réceptions de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN : Endif
      #-----------------ETAPE N°1--------------------
      #Description : On va alimenter la table des stocks
      Local Integer WNBPALTRAIT : WNBPALTRAIT = 0
      #On récupère l'information pour savoir si c'est un transport interne
      Local Char WFILTRESUPP(100) : WFILTRESUPP = "1=1"
      Local Char WCODCLT(30) : WCODCLT = ""
      Local Integer WPARAMSPE : WPARAMSPE = 0
      Local Integer WNBPALTRAIT
      Local Char WTIERSCF(30)
      Local Char WZPALATRIER(30)
      WTRPINTENT = 1
      Read[F:ZCE]ZCE0=[F:ZTE]ZBPCORD;[F:ZTE]ZCHAUFFEUR
      If(fstat=0)Then
        WTRPINTENT = [F:ZCE]ZTRPINT
      Endif
      If clalev([F:ZT2])=0 : Local File ZARTTRICC [F:ZT2] : Endif
      For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZTE]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZTE]ZCODCLT
        WPARAMSPE = 1
        Break
      Next
      If clalev([F:ZARE])=0   : Local File ZARTRECEP   [F:ZARE] : Endif
      If(WPARAMSPE=1)Then
        WCODCLT = [F:ZTE]ZCODCLT
        WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
      Endif
      # On commence par récupérer les informations de l'article de tri représentant l'article de réception dans le paramétrage du chargeur ou du client chargeur
      Read[F:ZARE]ZARE0=[F:ZTE]ZBPCORD;[F:ZTE]ZITMREF
      If(fstat=0)Then
        For WNBPALTRAIT=1 To [F:ZTE]ZQTY
          Call NUMERO("ZZSTO","",date$,"",WSEQ,WSTAT) From SUBANM
          If(WSTAT=0)Then
            Raz [F:ZZAT]
            [F:ZZAT]ZSEQ       = WSEQ
            [F:ZZAT]ZBPCORD    = [F:ZTE]ZBPCORD
            [F:ZZAT]ZCHAUFFEUR = [F:ZTE]ZCHAUFFEUR
            [F:ZZAT]ZCODCLT    = [F:ZTE]ZCODCLT
            [F:ZZAT]ZDATTRI    = [0/0/0]
            [F:ZZAT]ZDATVAL    = [F:ZTE]ZDATACT
            [F:ZZAT]ZDEPCL     = [F:ZTE]ZDEPNUM
            [F:ZZAT]ZEPMNUM    = [F:ZTE]VCRNUM
            [F:ZZAT]ZFCY       = [F:ZTE]ZFCY
            [F:ZZAT]ZITMREF    = [F:ZTE]ZITMREF
            If([F:ZARE]ZPALATRIER<>"")Then
              [F:ZZAT]ZITMREF  = [F:ZARE]ZPALATRIER
            Endif
            WZPALATRIER        = [F:ZZAT]ZITMREF
            [F:ZZAT]ZQTY       = 1
            [F:ZZAT]ZTRPINT    = 1
            [F:ZZAT]ZACTNUM    = [F:ZTE]ZACTNUM
            [F:ZZAT]ZBPCORDF   = [F:ZTE]ZBPCORD
            [F:ZZAT]ZPAYSISO   = [F:ZTE]ZPAYS
            Read[F:ZCE]ZCE0=[F:ZTE]ZBPCORD;[F:ZTE]ZCHAUFFEUR
            If(fstat=0)Then
              [F:ZZAT]ZTRPINT  = [F:ZCE]ZTRPINT
            Endif
            [F:ZZAT]ZDEPNUM    = [F:ZTE]ZDEPNUM
            Write[F:ZZAT]
            If(fstat<>0)Then
              WERRTRAIT = 1
              INFO = "[12.1] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZATRIER"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Break
            Else
              #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZATRIER
              #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
              #Les champs de la table sont les suivants :
              Raz[F:ZZHL]
              [F:ZZHL]          = [F:ZZAT]
              [F:ZZHL]ZACTNUM   = [F:ZTE]VCRNUM
              [F:ZZHL]ZDATACT   = date$
              [F:ZZHL]ZHEUACT   = time$
              [F:ZZHL]ZACTG     = [F:ZTE]ZACT
              Write[F:ZZHL]
              If(fstat<>0)Then
                WERRTRAIT = 1
                INFO = "[12.2] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
                If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                Break
              Endif
            Endif
          Else
            WERRTRAIT = 1
            INFO = "[12.3] - Des erreurs se sont produites lors de la rcupération du compteur pour la table ZZATRIER"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
            Break
          Endif
        Next WNBPALTRAIT
      Else
        WERRTRAIT = 1
        INFO = "[12.4] - Impossible de récupérer les informations de l'article de réception du chargeur"
        If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
      Endif
      #-----------------ETAPE N°2--------------------
      #Description : On va regarder s'il y a des choses à facturer suite à ce tri
      Local Integer WNB : WNB=0
      For[F:ZZAT]ZZAT0 Where [F:ZZAT]ZEPMNUM=[F:ZTE]VCRNUM and [F:ZZAT]ZBPCORD=[F:ZTE]ZBPCORD and [F:ZZAT]ZCODCLT=[F:ZTE]ZCODCLT and [F:ZZAT]ZITMREF=WZPALATRIER
        WPARAMSPE = 0
        #Pour chaque palette que l'on va traiter, on va récupérer les informations au niveau de la palette
        For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZZAT]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZZAT]ZCODCLT
          WPARAMSPE = 1
          Break
        Next
        If clalev([F:ZIE])<>0  : Close File [F:ZIE]  : Endif
        WCODCLT = ""
        WFILTRESUPP = "1=1"
        If(WPARAMSPE=0)Then
          If clalev([F:ZIE])=0  : Local File ZEPALIS    [F:ZIE]  : Endif
        Else
          If clalev([F:ZIE])=0  : Local File ZEPALIS3   [F:ZIE]  : Endif
          WCODCLT = [F:ZZAT]ZCODCLT
          WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
        Endif
        WTRPINTENT = [F:ZZAT]ZTRPINT
        WNB += 1
        Local Integer WPRESTAFACT : WPRESTAFACT = 0
        Local Integer WTRIUSINE : WTRIUSINE = 1
        If([F:ZTE]ZTRIUSINE=2)Then
          WTRIUSINE = 2
        Endif
        For [F:ZIE]ZIE0 Where [F:ZIE]CODE_CHARGEU=[F:ZZAT]ZBPCORD and [F:ZIE]ART_TRI=[F:ZTE]ZITMREF and [F:ZIE]ZACTDEC="10005" and evalue(WFILTRESUPP)
          #On va regarder si l'article de prestation est à prendre en compte
          WARTPRESTOK = 0
          #On va regarder dans la table ZSPEREC (ZSREC) s'il y a des spécificités sur les articles de prestation dont l'action déclenchaante est Réception
          If clalev([F:ZSREC])=0 : Local File ZSPEREC [ZSREC] : Endif
          #Première chose, on regarde s'il y a des spécificités
          Filter[F:ZSREC] Where [F:ZSREC]ZARNUM=[F:ZIE]ZARNUM and [F:ZSREC]ZCODCHARG=[F:ZIE]CODE_CHARGEU and [F:ZSREC]ZCODCLTCHARG=WCODCLT
          Local Integer WNBENRSPE : WNBENRSPE = 0
          WNBENRSPE = rowcount([F:ZSREC])
          Filter[F:ZSREC]
          Local Char WPARAM1(30)
          Local Char WPARAM2(30)
          Local Char WPARAM3(30)
          Local Char WPARAM4(30)
          Local Char WPARAM5(30)
          Local Integer WPARAM6
          Local Char WARTVEN(30)
          Local Char WARTACH(30)
          WPARAM1 = [F:ZIE]ZARNUM
          WPARAM2 = [F:ZIE]CODE_CHARGEU
          WPARAM3 = WCODCLT
          If(WNBENRSPE>0)Then
            #--------------------CAS N°1--------------------
            #On commence par regarder si on est dans le cas P1, S1
            WPARAM4 = [F:ZTE]ZPAYS : WPARAM5 = [F:ZTE]ZFCY
            Gosub SPE_TRAIT_REC From Z2WSEPALISC
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°2--------------------
              #On regarder si on est dans le cas ALL, S1
              WPARAM4 = "ALL" : WPARAM5 = [F:ZTE]ZFCY
              Gosub SPE_TRAIT_REC From Z2WSEPALISC
            Endif
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°3--------------------
              #On regarder si on est dans le cas P1, ALL
              WPARAM4 = [F:ZTE]ZPAYS : WPARAM5 = "ALL"
              Gosub SPE_TRAIT_REC From Z2WSEPALISC
            Endif
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°4--------------------
              #On regarder si on est dans le cas ALL, ALL
              WPARAM4 = "ALL" : WPARAM5 = "ALL"
              Gosub SPE_TRAIT_REC From Z2WSEPALISC
            Endif
          Else
#<-----MODIF JBS DU 28/01/2020-----
#            #Si C'est un tri usine, s'il n'y a pas de spécificité, l'article de prestation n'est pas valable
#            If(WTRIUSINE=2)Then
#              WARTPRESTOK = 0
#            Else
              #Il n'y a pas d'enregistrement spécifique donc l"article de prestation sur lequel on se trouve est valable
              WARTPRESTOK = 1
              WTIERSCF = [F:ZIE]CODE_PAYEUR
              WPRIX = [F:ZIE]PRIX
#            Endif
#--------------------------------->
          Endif
          If clalev([F:ZSREC])<>0 : Close File [F:ZSREC] : Endif
          #<-----MODIF JBS DU 28/01/2020-----
          #Dans le cas où c'est un tri usine et que le client chargeur n'est pas un client (une usine par exemple) alors on ne fait rien
          If([F:ZTE]ZTRIUSINE=2)Then
            Read[F:ZAI]ZAI0=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT
            If(fstat=0)Then
              If([F:ZAI]ZTYPCLCHA>1)Then
                WARTPRESTOK = 0
              Endif
            Endif
          Endif
          #--------------------------------->
          If(WARTPRESTOK=1)Then
            #Pour le moment l'article de prestation est à prendre en compte, il faut maintenant que l'on regarde s'il n'est pas soumis
            #à un type de transporteur
            If not([F:ZIE]ZTYPTRSP=0 or [F:ZIE]ZTYPTRSP=1 or ([F:ZIE]ZTYPTRSP=2 and WTRPINTENT=2) or ([F:ZIE]ZTYPTRSP=3 and WTRPINTENT<>2) or [F:ZIE]ZTYPTRSP<>4 or [F:ZIE]ZTYPTRSP<>5)Then
              WARTPRESTOK = 0
            Endif
          Endif
          If(WARTPRESTOK=1)Then
            WCHARGACT = ""
            If([F:ZIE]ZTYPFLUX=2)Then
              WCHARGACT = [F:ZTE]ZBPCORD
            Endif
            #Attention, dans le cas d'un tri usine, on facture le tiers situé dans le champ ZCLTTRIU de la fiche de l'usne s'il n'est pas vide
            If([F:ZTE]ZTRIUSINE=2)Then
              If([F:ZTE]VCRTYP="ZCMC" and [F:ZTE]VCRNUM<>"")Then
                Read[F:ZCMC]ZCMC=[F:ZTE]VCRNUM
                If(fstat=0)Then
                   Read[F:ZAI]ZAI0=[F:ZCMC]ZCHGUSINE;[F:ZCMC]ZCODUSINE
                   If(fstat=0)Then
                    If([F:ZAI]ZCLTTRIU<>"")Then
                      WTIERSCF =[F:ZAI]ZCLTTRIU
                      WCHARGACT = [F:ZCMC]ZCHGUSINE
                    Endif
                   Endif
                Endif
              Endif
            Endif
            Gosub SPE_ALIM_TAB_ACHVEN_FROM_ZZATRIER From Z2WSEPALISC
          Endif
        Next
      Next
      #-----------------ETAPE N°3--------------------
      #Si c'est un tri usine ou un tri a faire, on va archiver systématiquement les palettes que l'on vient de mettre dans la table ZZATRIER
      If([F:ZTE]ZTRIUSINE=2 or [F:ZTE]TRIAFAIRE=2)Then
        For[F:ZZAT]ZZAT0 Where [F:ZZAT]ZEPMNUM=[F:ZTE]VCRNUM and [F:ZZAT]ZBPCORD=[F:ZZAT]ZBPCORD and [F:ZZAT]ZCODCLT=[F:ZTE]ZCODCLT and [F:ZZAT]ZITMREF=WZPALATRIER
          #On va archiver chaque palette
          Raz[F:ZZSA]
          [F:ZZSA]ZSEQ       = [F:ZZAT]ZSEQ
          [F:ZZSA]ZORIGIN    = [F:ZTE]ZACTNUM
          [F:ZZSA]ZCMCNUM    = [F:ZZAT]ZEPMNUM
          [F:ZZSA]ZBPCORDF   = [F:ZZAT]ZBPCORD
          [F:ZZSA]ZBPCORD    = [F:ZZAT]ZBPCORD
          [F:ZZSA]ZFCY       = [F:ZZAT]ZFCY
          [F:ZZSA]ZCODCLT    = [F:ZZAT]ZCODCLT
          [F:ZZSA]ZITMREF    = [F:ZZAT]ZITMREF
          [F:ZZSA]ZTYPAL     = 0
          [F:ZZSA]ZQTY       = [F:ZZAT]ZQTY
          [F:ZZSA]ZCHAUFFEUR = [F:ZZAT]ZCHAUFFEUR
          [F:ZZSA]ZTRPINT    = [F:ZZAT]ZTRPINT
          [F:ZZSA]ZDATTRI    = [F:ZZAT]ZDATTRI
          [F:ZZSA]ZDATVAL    = [F:ZZAT]ZDATVAL
          [F:ZZSA]ZGESTOK    = 1
          [F:ZZSA]ZGESTKC    = 1
          [F:ZZSA]ZGESTHS    = 1
          [F:ZZSA]ZACTG      = [F:ZTE]ZACT
          [F:ZZSA]ZPAYSISO   = [F:ZTE]ZPAYS
          [F:ZZSA]ZDEPNUM    = [F:ZZAT]ZDEPNUM
          Write[F:ZZSA]
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[12.5] - Impossible d'archiver la ligne de stock de palette à trier : " + [F:ZZAT]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          Endif
        Next
        #On va maintenant supprimer les lignes de la table ZZATRIER
#        Delete [F:ZZAT] Where [F:ZZAT]ZEPMNUM=[F:ZTE]VCRNUM and [F:ZZAT]ZBPCORD=[F:ZTE]ZBPCORD and [F:ZZAT]ZCODCLT=[F:ZTE]ZCODCLT and [F:ZZAT]ZITMREF=WZPALATRIER
        Local Integer WERRDEL : WERRDEL = 0
        For [F:ZZAT]ZZAT0 Where [F:ZZAT]ZEPMNUM=[F:ZTE]VCRNUM and [F:ZZAT]ZBPCORD=[F:ZTE]ZBPCORD and [F:ZZAT]ZCODCLT=[F:ZTE]ZCODCLT and [F:ZZAT]ZITMREF=WZPALATRIER
          Delete [F:ZZAT]
          If(fstat<>0)Then
            WERRDEL = 1
          Endif
        Next
        If(WERRDEL<>0)Then
          WERRTRAIT = 1
          INFO = "[12.6] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
      Endif
      #-----------------ETAPE N°4--------------------
      #On va maintenant regarder si la palette à trier est gérée en stock.
      If clalev([F:ZIE2])=0 : Local File ZEPALIS [ZIE2] : Endif
      Local Integer WERRDEL : WERRDEL = 0
      For[F:ZIE2]ZIE3 Where [F:ZIE2]CODE_CHARGEU=[F:ZTE]ZBPCORD and [F:ZIE2]ART_PRETRI=[F:ZTE]ZITMREF
        If([F:ZIE2]ZGESTSTOCK<>2)Then
#          Delete [F:ZZAT] Where [F:ZZAT]ZEPMNUM=[F:ZTE]VCRNUM and [F:ZZAT]ZBPCORD=[F:ZTE]ZBPCORD and [F:ZZAT]ZCODCLT=[F:ZTE]ZCODCLT and [F:ZZAT]ZITMREF=WZPALATRIER
          For [F:ZZAT]ZZAT0 Where [F:ZZAT]ZEPMNUM=[F:ZTE]VCRNUM and [F:ZZAT]ZBPCORD=[F:ZTE]ZBPCORD and [F:ZZAT]ZCODCLT=[F:ZTE]ZCODCLT and [F:ZZAT]ZITMREF=WZPALATRIER
            Delete [F:ZZAT]
            If(fstat<>0)Then
              WERRDEL = 1
            Endif
          Next
          If(WERRDEL<>0)Then
            WERRTRAIT = 1
            INFO = "[12.7] - ERREUR Suppression"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          Else
            Break
          Endif
        Endif
      Next
      #----------------------------------------------
    Elsif([F:ZTE]ZACT=1)Then
      #-------------------------------------------------------------------------------------------------------------------------------------------
      #TODO------------------------------------------------------REPARATION-----------------------------------------------------------------------
      #-------------------------------------------------------------------------------------------------------------------------------------------
      If WFICTRA : Call ECR_TRACE("Exécution d'une ligne d'action : Réparation de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN : Endif
      Local Integer WNBPALTRAIT : WNBPALTRAIT = 0
      Local Char WFILTRESUPP(100) : WFILTRESUPP = "1=1"
      Local Char WCODCLT(30) : WCODCLT = ""
      Local Integer WPARAMSPE : WPARAMSPE = 0
      Local Char WTIERSCF(30)
      If clalev([F:ZT2])=0 : Local File ZARTTRICC [F:ZT2] : Endif
      For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZTE]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZTE]ZCODCLT
        WPARAMSPE = 1
        Break
      Next
      If clalev([F:ZATV])<>0 : Close File [F:ZATV] : Endif
      If(WPARAMSPE=0)Then
        If clalev([F:ZATV])=0 : Local File ZARTTRIV   [F:ZATV] : Endif
        Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;"";[F:ZTE]ZITMREF
      Else
        If clalev([F:ZATV])=0 : Local File ZARTTRICCV [F:ZATV] : Endif
        WCODCLT = [F:ZTE]ZCODCLT
        WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
        Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT;[F:ZTE]ZITMREF
      Endif
      #<----------------------------------------------------------------------------------------------------------
      # Dans une action de réparation, il faut que l'on regarde si on mouvemente les stocks ou pas.
      # Dans le cas ou le chargeur et le client chargeur ont leur axe métier à HP alors il ne faut pas mouvementer
      # les stocks donc faire comme si on ne gérait rien en stock.
      # On va donc commencer par alimenter une variable pour savoir si on est dans ce cas là
      Local Integer WALIMSTO : WALIMSTO = 1 # 1 : on alimente les stocks, 0 : on n'alimente pas les stocks
      If([F:ZTE]ZCODCLT<>"")Then
        #Dans ce cas, on va récupérer l'axe metier du chargeur et du client chargeur
        Read[F:BPC]BPC0=[F:ZTE]ZBPCORD
        If(fstat=0)Then
          Read[F:ZAI]ZAI0=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT
          If(fstat=0)Then
            #If([F:BPC]ZAXEMETEPI="HP" and [F:ZAI]ZAXEMETEPI="HP")Then
            If([F:BPC]ZMODGESTEPI=3 and [F:ZAI]ZMODGESTEPI=3)Then
              #On est dans le cas où on ne gère pas de stock
              WALIMSTO = 0
            Endif
          Endif
        Endif
      Endif
      #Il y a un autre cas ou je dois mettre WALIMSTO à 0
      #C'est dans le cas ou je ne gère pas la palette en stock
      If(WALIMSTO<>0)Then
        If([F:ZATV]ZGESTKC<>2)Then
          WALIMSTO = 0
        Endif
      Endif
      #---------------------------------------------------------------------------------------------------------->
      # On commence par récupérer les informations de l'article de réparation dans le paramétrage du chargeur ou du client chargeur
      #Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT;[F:ZTE]ZITMREF
      If(fstat=0)Then
        Local Char WZSAVZACTNUM(30)
        #Soit on tiens compte du stock cas ST soit on ne tiens pas compte du stock (HP)
        If(WALIMSTO=1)Then
          #On est dans le cas où il y a une gestion de stock, on va donc s'appuyer sur le stock réel
          #Description : Récupérer les n palettes les plus anciennes à réparer
          WNUMLIG = 0
          For[F:ZZS]ZZAT0 Where [F:ZZS]ZBPCORD=[F:ZTE]ZBPCORD and [F:ZZS]ZFCY=[F:ZTE]ZFCY and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF and [F:ZZS]ZTYPAL=2
            [F:ZZS]ZACTG      = [F:ZTE]ZACT
            [F:ZZS]ZDATVAL    = date$
            WZSAVZACTNUM      = [F:ZZS]ZORIGIN
            [F:ZZS]ZORIGIN    = [F:ZTE]ZACTNUM
            [F:ZZS]ZTYPAL     = 1
            Rewrite[F:ZZS]
            If(fstat<>0)Then
              WERRTRAIT = 1
              INFO = "[1.1] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZSTOCK"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Break
            Else
              #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
              #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
              #Les champs de la table sont les suivants :
              Raz[F:ZZHL]
              [F:ZZHL]          = [F:ZZS]
              #[F:ZZHL]ZACTNUM   = WZSAVZACTNUM
              [F:ZZHL]ZACTNUM   = [F:ZTE]ZACTNUM
              [F:ZZHL]ZTYPAL    = 2
              [F:ZZHL]ZDATACT   = date$
              [F:ZZHL]ZHEUACT   = time$
              Write[F:ZZHL]
              If(fstat<>0)Then
                WERRTRAIT = 1
                INFO = "[1.2] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
                If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                Break
              Endif
            Endif
            WNUMLIG += [F:ZZS]ZQTY
            If(WNUMLIG>=[F:ZTE]ZQTY)Then
              #On vient d'atteindre la qté à réparer, on sort de la boucle
              Break
            Endif
          Next
          #-------------------------------------
          #Description : Si la réparation à nécessité des palettes KC et/ou HS, on va récupérer les plus anciennes du stock et on va les transférer dans la table ZZSTOCKARCH
          If([F:ZTE]ZQTEKCUTIL>0)Then
            #On a utilisé des palettes KC pour réparer d'autres palettes
            Local Integer WNUMLIG : WNUMLIG = 0
            For[F:ZZS]ZZAT0 Where [F:ZZS]ZBPCORD=[F:ZTE]ZBPCORD and [F:ZZS]ZFCY=[F:ZTE]ZFCY and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF and [F:ZZS]ZTYPAL=2
              [F:ZZS]ZACTG      = [F:ZTE]ZACT
              [F:ZZS]ZDATVAL    = date$
              [F:ZZS]ZORIGIN    = [F:ZTE]ZACTNUM
              [F:ZZS]ZQTY       = 1
              Rewrite[F:ZZS]
              If(fstat<>0)Then
                WERRTRAIT = 1
                INFO = "[1.3] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZSTOCK"
                If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                Break
              Else
                #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
                #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
                #Les champs de la table sont les suivants :
                Raz[F:ZZHL]
                [F:ZZHL]          = [F:ZZS]
                [F:ZZHL]ZACTNUM   = [F:ZTE]ZACTNUM
                [F:ZZHL]ZDATACT   = date$
                [F:ZZHL]ZHEUACT   = time$
                Write[F:ZZHL]
                If(fstat<>0)Then
                  WERRTRAIT = 1
                  INFO = "[1.4] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
                  If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                  Break
                Endif
              Endif
              #On va maintenant archiver la palette dans la table ZZSTOCKARCH pour la sortir du stock
              Raz[F:ZZSA]
              [F:ZZSA] = [F:ZZS]
              Write[F:ZZSA]
              If(fstat<>0)Then
                WERRTRAIT = 1
                INFO = "[1.5] - Impossible d'archiver la ligne de stock(KC) : " + [F:ZZS]ZSEQ
                If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Endif
              #On supprime la ligne de la table ZZSTOCK
              Delete [F:ZZS] Where [F:ZZS]ZSEQ=[F:ZZHL]ZSEQ
              If(fstat<>0)Then
                WERRTRAIT = 1
                INFO = "[1.6] - ERREUR Suppression"
                If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Endif
              WNUMLIG +=1
              If(WNUMLIG>=[F:ZTE]ZQTEKCUTIL)Then
                #On vient d'atteindre la qté de palettes KC utilisée pour réparer, on sort de la boucle
                Break
              Endif
            Next
          Endif
          If([F:ZTE]ZQTEHS>0)Then
            #On a utilisé des palettes HS pour réparer d'autres palettes
            Local Integer WNUMLIG : WNUMLIG = 0
            For[F:ZZS]ZZAT0 Where [F:ZZS]ZBPCORD=[F:ZTE]ZBPCORD and [F:ZZS]ZFCY=[F:ZTE]ZFCY and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF and [F:ZZS]ZTYPAL=2
              [F:ZZS]ZACTG      = [F:ZTE]ZACT
              [F:ZZS]ZDATVAL    = date$
              [F:ZZS]ZORIGIN    = [F:ZTE]ZACTNUM
              [F:ZZS]ZQTY       = 1
              Rewrite[F:ZZS]
              If(fstat<>0)Then
                WERRTRAIT = 1
                INFO = "[1.7] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZSTOCK"
                If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                Break
              Else
                #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
                #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
                #Les champs de la table sont les suivants :
                Raz[F:ZZHL]
                [F:ZZHL]          = [F:ZZS]
                [F:ZZHL]ZACTNUM   = [F:ZTE]ZACTNUM
                [F:ZZHL]ZDATACT   = date$
                [F:ZZHL]ZHEUACT   = time$
                Write[F:ZZHL]
                If(fstat<>0)Then
                  WERRTRAIT = 1
                  INFO = "[1.8] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
                  If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                  Break
                Endif
              Endif
              #On va maintenant archiver la palette dans la table ZZSTOCKARCH pour la sortir du stock
              Raz[F:ZZSA]
              [F:ZZSA] = [F:ZZS]
              Write[F:ZZSA]
              If(fstat<>0)Then
                WERRTRAIT = 1
                INFO = "[1.9] - Impossible d'archiver la ligne de stock(KC) : " + [F:ZZS]ZSEQ
                If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Endif
              #On supprime la ligne de la table ZZSTOCK
              Delete [F:ZZS] Where [F:ZZS]ZSEQ=[F:ZZHL]ZSEQ
              If(fstat<>0)Then
                WERRTRAIT = 1
                INFO = "[1.10] - ERREUR Suppression"
                If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Endif
              WNUMLIG +=1
              If(WNUMLIG>=[F:ZTE]ZQTEHS)Then
                #On vient d'atteindre la qté de palettes HS utilisée pour réparer, on sort de la boucle
                Break
              Endif
            Next
          Endif
        Else
          #On est dans le cas d'une réparation sans tenir compte du stock (HP)
          For WNBPALTRAIT=1 To [F:ZTE]ZQTY
            Raz[F:ZZS]
            Call NUMERO("ZZSTO","",date$,"",WSEQ,WSTAT) From SUBANM
            If WSTAT=0
              [F:ZZS]ZACTG      = 1
              If([F:ZATV]ZCODCHARGSTO<>"")Then
                [F:ZZS]ZBPCORD  = [F:ZATV]ZCODCHARGSTO
              Else
                [F:ZZS]ZBPCORD  = [F:ZTE]ZBPCORD
              Endif
              [F:ZZS]ZBPCORDF   = [F:ZTE]ZBPCORD
              [F:ZZS]ZCHAUFFEUR = [F:ZTE]ZCHAUFFEUR
              [F:ZZS]ZCODCLT    = [F:ZTE]ZCODCLT
              [F:ZZS]ZDATTRI    = [F:ZTE]ZDATACT
              [F:ZZS]ZDATVAL    = date$
              [F:ZZS]ZFCY       = [F:ZTE]ZFCY
              [F:ZZS]ZGESTHS    = [F:ZATV]ZGESTHS
              [F:ZZS]ZGESTKC    = [F:ZATV]ZGESTKC
              [F:ZZS]ZGESTOK    = [F:ZATV]ZGESTOK
              [F:ZZS]ZITMREF    = [F:ZTE]ZITMREF
              [F:ZZS]ZORIGIN    = [F:ZTE]ZACTNUM
              [F:ZZS]ZPAYSISO   = "FR"
              [F:ZZS]ZQTY       = 1
              [F:ZZS]ZSEQ       = WSEQ
              [F:ZZS]ZTRPINT    = 1
              [F:ZZS]ZTYPAL     = 1
              If([F:ZTE]ZDEPNUM<>"")Then
                [F:ZZS]ZDEPNUM  = [F:ZTE]ZDEPNUM
              Elsif([F:ZTE]ZCODCLT<>"")Then
                Read[F:ZAI]ZAI0=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT
                If(fstat=0)Then
                  [F:ZZS]ZDEPNUM = [F:ZAI]ZDEPOTCLT
                Endif
              Endif
              Write[F:ZZS]
              If(fstat<>0)Then
                WERRTRAIT = 1
                INFO = "[1.11] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZSTOCK"
                If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                Break
              Else
                #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
                #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
                #Les champs de la table sont les suivants :
                Raz[F:ZZHL]
                [F:ZZHL]          = [F:ZZS]
                [F:ZZHL]ZACTNUM   = [F:ZTE]ZACTNUM
                [F:ZZHL]ZDATACT   = date$
                [F:ZZHL]ZHEUACT   = time$
                Write[F:ZZHL]
                If(fstat<>0)Then
                  WERRTRAIT = 1
                  INFO = "[1.12] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
                  If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                  Break
                Endif
              Endif
            Else
              WERRTRAIT = 1
              INFO = "[1.13] - Des erreurs se sont produites lors de la rcupération du compteur pour la table ZZSTOCK"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Break
            Endif
          Next WNBPALTRAIT
        Endif
      Else
        WERRTRAIT = 1
        INFO = "[1.14] - Impossible de récupérer les informations de l'article de tri du chargeur"
        If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
      Endif
      #-----------------ETAPE N°2--------------------
      #Description : On va regarder s'il y a des choses à facturer suite à cette réparation
      Local Integer WNB : WNB=0
      For[F:ZZS]ZZAT0 Where [F:ZZS]ZACTG=[F:ZTE]ZACT and [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF and [F:ZZS]ZTYPAL=1
        WPARAMSPE = 0
        #Pour chaque palette que l'on va traiter, on va récupérer les informations au niveau de la palette
        For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZZS]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZZS]ZCODCLT
          WPARAMSPE = 1
          Break
        Next
        If clalev([F:ZIE])<>0  : Close File [F:ZIE]  : Endif
        WCODCLT = ""
        WFILTRESUPP = "1=1"
        If(WPARAMSPE=0)Then
          If clalev([F:ZIE])=0  : Local File ZEPALIS    [F:ZIE]  : Endif
        Else
          If clalev([F:ZIE])=0  : Local File ZEPALIS3   [F:ZIE]  : Endif
          WCODCLT = [F:ZZS]ZCODCLT
          WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
        Endif
        WTRPINTENT = [F:ZZS]ZTRPINT
        WNB += 1
        Local Integer WPRESTAFACT : WPRESTAFACT = 0
        For [F:ZIE]ZIE0 Where [F:ZIE]CODE_CHARGEU=[F:ZZS]ZBPCORD and [F:ZIE]ART_TRI=[F:ZZS]ZITMREF and [F:ZIE]ZACTDEC="20041" and evalue(WFILTRESUPP)
          #On va regarder si l'article de prestation est à prendre en compte
          WARTPRESTOK = 0
          #On va regarder dans la table ZSPEREP (ZSREP) s'il y a des spécificités sur les articles de prestation dont l'action déclenchaante est Réparation
          If clalev([F:ZSREP])=0 : Local File ZSPEREP [ZSREP] : Endif
          #Première chose, on regarde s'il y a des spécificités
          Filter[F:ZSREP] Where [F:ZSREP]ZARNUM=[F:ZIE]ZARNUM and [F:ZSREP]ZCODCHARG=[F:ZIE]CODE_CHARGEU and [F:ZSREP]ZCODCLTCHARG=WCODCLT
          Local Integer WNBENRSPE : WNBENRSPE = 0
          WNBENRSPE = rowcount([F:ZSREP])
          Filter[F:ZSREP]
          #La table ZSPEREP [ZSREP] à les champs suivants :
          # ZCLTFOU : Client / Fournisseur
          # ZCODCHARG : Code chargeur
          # ZCODCLTCHARG : Code client chargeur
          # ZSITE : Site coll.
          # ZQTYMAX : Qté max
          # ZQTYMIN : Qté min
          Local Char WPARAM1(30)
          Local Char WPARAM2(30)
          Local Char WPARAM3(30)
          Local Char WPARAM4(30)
          Local Char WARTVEN(30)
          Local Char WARTACH(30)
          WPARAM1 = [F:ZIE]ZARNUM
          WPARAM2 = [F:ZIE]CODE_CHARGEU
          WPARAM3 = WCODCLT
          If(WNBENRSPE>0)Then
            #--------------------CAS N°1--------------------
            #On commence par regarder si on est dans le cas S1
            WPARAM4 = [F:ZTE]ZFCY
            Gosub SPE_TRAIT_REP From Z2WSEPALISC
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°2--------------------
              #On regarder si on est dans le cas ALL
              WPARAM4 = "ALL"
              Gosub SPE_TRAIT_REP From Z2WSEPALISC
            Endif
          Else
            #Il n'y a pas d'enregistrement spécifique donc l"article de prestation sur lequel on se trouve est valable
            WARTPRESTOK = 1
            WTIERSCF = [F:ZIE]CODE_PAYEUR
            WPRIX = [F:ZIE]PRIX
          Endif
          If clalev([F:ZSREP])<>0 : Close File [F:ZSREP] : Endif
          If(WARTPRESTOK=1)Then
            WCHARGACT = ""
            If([F:ZIE]ZTYPFLUX=2)Then
              WCHARGACT = [F:ZTE]ZBPCORD
            Endif
            Gosub SPE_ALIM_TAB_ACHVEN_FROM_ZZSTOCK From Z2WSEPALISC
          Endif
        Next
      Next
      #-----------------ETAPE N°3--------------------
      #Description : On va regarder s'il n'y a pas des palettes que l'on doit archiver.
      #Dans notre cas, on va regarder si les palettes que l'on a modifiée sont toujours gérée en stock
      For [F:ZZS]ZZAT0 Where [F:ZZS]ZACTG=[F:ZTE]ZACT and [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF
        #Seules les lignes suivantes nous interesse :
        # Les lignes dont le type st OK et dont la gestion des OK sont à faux
        If([F:ZZS]ZTYPAL=1 and ([F:ZZS]ZGESTOK<>2 or WALIMSTO=0))Then
          #On est sur une ligne qu'il faut archiver
          Raz[F:ZZSA]
          [F:ZZSA] = [F:ZZS]
          Write[F:ZZSA]
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[1.15] - Impossible d'archiver la ligne de stock(OK) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          Endif
        Endif
        # Les lignes dont le type st KC et dont la gestion des KC sont à faux
        If([F:ZZS]ZTYPAL=2 and ([F:ZZS]ZGESTKC<>2 or WALIMSTO=0))Then
          #On est sur une ligne qu'il faut archiver
          Raz[F:ZZSA]
          [F:ZZSA] = [F:ZZS]
          Write[F:ZZSA]
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[1.16] - Impossible d'archiver la ligne de stock(KC) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          Endif
        Endif
        # Les lignes dont le type st HS et dont la gestion des HS sont à faux
        If([F:ZZS]ZTYPAL=3 and ([F:ZZS]ZGESTHS<>2 or WALIMSTO=0))Then
          #On est sur une ligne qu'il faut archiver
          Raz[F:ZZSA]
          [F:ZZSA] = [F:ZZS]
          Write[F:ZZSA]
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[1.17] - Impossible d'archiver la ligne de stock(HS) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          Endif
        Endif
      Next
      If(WALIMSTO=1)Then
        #On est dans le cas où on gère le stock
        #On va maintenant supprimer toutes les lignes de stock modifié par l'action de collecte si les OK ne sont plus gérées
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZTYPAL=1 and [F:ZZS]ZGESTOK<>2
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[1.18] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
        #On va maintenant supprimer toutes les lignes de stock modifié par l'action de collecte si les KC ne sont plus gérées
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZTYPAL=2 and [F:ZZS]ZGESTKC<>2
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[1.19] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
        #On va maintenant supprimer toutes les lignes de stock modifié par l'action de collecte si les HS ne sont plus gérées
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZTYPAL=3 and [F:ZZS]ZGESTHS<>2
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[1.20] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
      Else
        #On est dans le cas où on ne gère pas le stock (cas du HP)
        #On va maintenant supprimer toutes les lignes de stock
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[1.21] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
      Endif
      #----------------------------------------------
    Elsif([F:ZTE]ZACT=2)Then
      #-------------------------------------------------------------------------------------------------------------------------------------------
      #TODO----------------------------------------------------RELOCALISATION---------------------------------------------------------------------
      #-------------------------------------------------------------------------------------------------------------------------------------------
      If WFICTRA : Call ECR_TRACE("Exécution d'une action : Relocalisation de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN : Endif
      Local Integer WNBPALTRAIT : WNBPALTRAIT = 0
      Local Char WFILTRESUPP(100) : WFILTRESUPP = "1=1"
      Local Char WCODCLT(30) : WCODCLT = ""
      Local Integer WPARAMSPE : WPARAMSPE = 0
      Local Char WTIERSCF(30)
      If clalev([F:ZT2])=0 : Local File ZARTTRICC [F:ZT2] : Endif
      For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZTE]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZTE]ZCODCLT
        WPARAMSPE = 1
        Break
      Next
      If clalev([F:ZATV])<>0 : Close File [F:ZATV] : Endif
      WCODCLT = ""
      If(WPARAMSPE=0)Then
        If clalev([F:ZATV])=0 : Local File ZARTTRIV   [F:ZATV] : Endif
        Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;"";[F:ZTE]ZITMREF
      Else
        If clalev([F:ZATV])=0 : Local File ZARTTRICCV [F:ZATV] : Endif
        WCODCLT = [F:ZTE]ZCODCLT
        WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
        Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT;[F:ZTE]ZITMREF
      Endif
      # On commence par récupérer les informations de l'article de réparation dans le paramétrage du chargeur ou du client chargeur
      #Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT;[F:ZTE]ZITMREF
      If(fstat=0)Then
        #-----------------ETAPE N°1--------------------
        #Description : Récupérer les n palettes les plus anciennes à relocaliser
        WNUMLIG = 0
        Local Char WZSAVZACTNUM(30)
        For[F:ZZS]ZZAT0 Where [F:ZZS]ZBPCORD=[F:ZTE]ZBPCORD and [F:ZZS]ZFCY=[F:ZTE]ZFCY and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF and [F:ZZS]ZTYPAL=[F:ZTE]ZTYPPAL
          [F:ZZS]ZACTG      = [F:ZTE]ZACT
          [F:ZZS]ZDATVAL    = date$
#          WZSAVZACTNUM      = [F:ZZS]ZORIGIN
          [F:ZZS]ZORIGIN    = [F:ZTE]ZACTNUM
          [F:ZZS]ZTYPAL     = [F:ZTE]ZTYPPAL
          Rewrite[F:ZZS]
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[2.1] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZSTOCK"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
            Break
          Else
            #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
            #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
            #Les champs de la table sont les suivants :
            Raz[F:ZZHL]
            [F:ZZHL]          = [F:ZZS]
#            [F:ZZHL]ZACTNUM   = WZSAVZACTNUM
            [F:ZZHL]ZACTNUM   = [F:ZTE]ZACTNUM
            [F:ZZHL]ZDATACT   = date$
            [F:ZZHL]ZHEUACT   = time$
            Write[F:ZZHL]
            If(fstat<>0)Then
              WERRTRAIT = 1
              INFO = "[2.2] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Break
            Endif
          Endif
          WNUMLIG += [F:ZZS]ZQTY
          If(WNUMLIG>=[F:ZTE]ZQTY)Then
            #On vient d'atteindre la qté à relocaliser, on sort de la boucle
            Break
          Endif
        Next
        #-----------------ETAPE N°2--------------------
        #Description : On va regarder s'il y a des choses à facturer suite à cette réparation
        WTRPINTSOR = 1
        Read[F:ZCE]ZCE0=[F:ZTE]ZBPCORD;[F:ZTE]ZCHAUFFEUR
        If(fstat=0)Then
          WTRPINTSOR = [F:ZCE]ZTRPINT
        Endif
        Local Integer WNB : WNB=0
        For[F:ZZS]ZZAT0 Where [F:ZZS]ZACTG=[F:ZTE]ZACT and [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF and [F:ZZS]ZTYPAL=[F:ZTE]ZTYPPAL
          WPARAMSPE = 0
          #Pour chaque palette que l'on va traiter, on va récupérer les informations au niveau de la palette
          For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZZS]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZZS]ZCODCLT
            WPARAMSPE = 1
            Break
          Next
          If clalev([F:ZIE])<>0  : Close File [F:ZIE]  : Endif
          WCODCLT = ""
          WFILTRESUPP = "1=1"
          If(WPARAMSPE=0)Then
            If clalev([F:ZIE])=0  : Local File ZEPALIS    [F:ZIE]  : Endif
          Else
            If clalev([F:ZIE])=0  : Local File ZEPALIS3   [F:ZIE]  : Endif
            WCODCLT = [F:ZZS]ZCODCLT
            WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
          Endif
          WTRPINTENT = [F:ZZS]ZTRPINT
          WNB += 1
          Local Integer WPRESTAFACT : WPRESTAFACT = 0
          For [F:ZIE]ZIE0 Where [F:ZIE]CODE_CHARGEU=[F:ZZS]ZBPCORD and [F:ZIE]ART_TRI=[F:ZZS]ZITMREF and ([F:ZIE]ZACTDEC="10061" or [F:ZIE]ZACTDEC="20061" or [F:ZIE]ZACTDEC="30061") and evalue(
& WFILTRESUPP)
            #On va regarder si l'article de prestation est à prendre en compte
            WARTPRESTOK = 0
            #On va regarder dans la table ZSPEREL (ZSREL) s'il y a des spécificités sur les articles de prestation dont l'action déclenchaante est Relocalisation
            If clalev([F:ZSREL])=0 : Local File ZSPEREL [ZSREL] : Endif
            #Première chose, on regarde s'il y a des spécificités
            Filter[F:ZSREL] Where [F:ZSREL]ZARNUM=[F:ZIE]ZARNUM and [F:ZSREL]ZCODCHARG=[F:ZIE]CODE_CHARGEU and [F:ZSREL]ZCODCLTCHARG=WCODCLT
            Local Integer WNBENRSPE : WNBENRSPE = 0
            WNBENRSPE = rowcount([F:ZSREL])
            Filter[F:ZSREL]
            Local Char WPARAM1(30)
            Local Char WPARAM2(30)
            Local Char WPARAM3(30)
            Local Char WPARAM4(30)
            Local Char WPARAM5(30)
            Local Char WPARAM6(30)
            Local Char WPARAM7(30)
            Local Char WPARAM8(30)
            Local Integer WPARAM9(30)
            Local Char WARTVEN(30)
            Local Char WARTACH(30)
            WPARAM1 = [F:ZIE]ZARNUM
            WPARAM2 = [F:ZIE]CODE_CHARGEU
            WPARAM3 = WCODCLT
            Local Integer WNUMCAS
            If(WNBENRSPE>0)Then
              #--------------------CAS N°1--------------------
              #On commence par regarder si on est dans le cas PC1, SC1, SR1, U1, AU1 et Q1
              WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
              WNUMCAS = 1 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°2--------------------
                #On commence par regarder si on est dans le cas PC1, SC1, SR1, U1, AU1 et ALL
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = 1
                WNUMCAS = 2 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°3--------------------
                #On commence par regarder si on est dans le cas PC1, SC1, SR1, U1, ALL et Q1
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = "" : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 3 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°4--------------------
                #On commence par regarder si on est dans le cas PC1, SC1, SR1, U1, ALL et ALL
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = "" : WPARAM9 = 1
                WNUMCAS = 4 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°5--------------------
                #On commence par regarder si on est dans le cas PC1, SC1, SR1, ALL, AU1 et Q1
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = "" : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 5 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°6--------------------
                #On commence par regarder si on est dans le cas PC1, SC1, SR1, ALL, AU1 et ALL
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = "" : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = 1
                WNUMCAS = 6 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°7--------------------
                #On commence par regarder si on est dans le cas PC1, SC1, SR1, ALL, ALL et Q1
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = "" : WPARAM8 = "" : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 7 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°8--------------------
                #On commence par regarder si on est dans le cas PC1, SC1, SR1, ALL, ALL et ALL
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = "" : WPARAM8 = "" : WPARAM9 = 1
                WNUMCAS = 8 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°9--------------------
                #On commence par regarder si on est dans le cas PC1, SC1, ALL, U1, AU1 et Q1
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = "ALL" : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 9 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°10-------------------
                #On commence par regarder si on est dans le cas PC1, SC1, ALL, U1, AU1 et ALL
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = "ALL" : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = 1
                WNUMCAS = 10 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°11-------------------
                #On commence par regarder si on est dans le cas PC1, SC1, ALL, U1, ALL et Q1
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = "ALL" : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = "" : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 11 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°12-------------------
                #On commence par regarder si on est dans le cas PC1, SC1, ALL, U1, ALL et ALL
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = "ALL" : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = "" : WPARAM9 = 1
                WNUMCAS = 12 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°13-------------------
                #On commence par regarder si on est dans le cas PC1, SC1, ALL, ALL, AU1 et Q1
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = "ALL" : WPARAM7 = "" : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 13 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°14-------------------
                #On commence par regarder si on est dans le cas PC1, SC1, ALL, ALL, AU1 et ALL
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = "ALL" : WPARAM7 = "" : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = 1
                WNUMCAS = 14 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°15-------------------
                #On commence par regarder si on est dans le cas PC1, SC1, ALL, ALL, ALL et Q1
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = "ALL" : WPARAM7 = "" : WPARAM8 = "" : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 15 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°16-------------------
                #On commence par regarder si on est dans le cas PC1, SC1, ALL, ALL, ALL et ALL
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = "ALL" : WPARAM7 = "" : WPARAM8 = "" : WPARAM9 = 1
                WNUMCAS = 16 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°17-------------------
                #On commence par regarder si on est dans le cas PC1, ALL, SR1, U1, AU1 et Q1
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = "ALL" : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 17 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°18-------------------
                #On commence par regarder si on est dans le cas PC1, ALL, SR1, U1, AU1 et ALL
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = "ALL" : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = 1
                WNUMCAS = 18 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°19-------------------
                #On commence par regarder si on est dans le cas PC1, ALL, SR1, U1, ALL et Q1
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = "ALL" : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = "" : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 19 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°20-------------------
                #On commence par regarder si on est dans le cas PC1, ALL, SR1, U1, ALL et ALL
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = "ALL" : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = "" : WPARAM9 = 1
                WNUMCAS = 20 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°21-------------------
                #On commence par regarder si on est dans le cas PC1, ALL, SR1, ALL, AU1 et Q1
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = "ALL" : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = "" : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 21 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°22-------------------
                #On commence par regarder si on est dans le cas PC1, ALL, SR1, ALL, AU1 et ALL
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = "ALL" : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = "" : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = 1
                WNUMCAS = 22 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°23-------------------
                #On commence par regarder si on est dans le cas PC1, ALL, SR1, ALL, ALL et Q1
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = "ALL" : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = "" : WPARAM8 = "" : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 23 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°24-------------------
                #On commence par regarder si on est dans le cas PC1, ALL, SR1, ALL, ALL et ALL
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = "ALL" : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = "" : WPARAM8 = "" : WPARAM9 = 1
                WNUMCAS = 24 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°25-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, SR1, U1, AU1 et Q1
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = "ALL" : WPARAM6 = "ALL" : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 25 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°26-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, SR1, U1, AU1 et ALL
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = "ALL" : WPARAM6 = "ALL" : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = 1
                WNUMCAS = 26 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°27-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, SR1, U1, ALL et Q1
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = "ALL" : WPARAM6 = "ALL" : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = "" : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 27 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°28-------------------
                #On commence par regarder si on est dans le cas PC1, ALL, ALL, U1, ALL et ALL
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = "ALL" : WPARAM6 = "ALL" : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = "" : WPARAM9 = 1
                WNUMCAS = 28 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°29-------------------
                #On commence par regarder si on est dans le cas PC1, ALL, ALL, ALL, AU1 et Q1
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = "ALL" : WPARAM6 = "ALL" : WPARAM7 = "" : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 29 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°30-------------------
                #On commence par regarder si on est dans le cas PC1, ALL, ALL, ALL, AU1 et ALL
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = "ALL" : WPARAM6 = "ALL" : WPARAM7 = "" : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = 1
                WNUMCAS = 30 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°31-------------------
                #On commence par regarder si on est dans le cas PC1, ALL, ALL, ALL, ALL et Q1
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = "ALL" : WPARAM6 = "ALL" : WPARAM7 = "" : WPARAM8 = "" : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 31 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°32-------------------
                #On commence par regarder si on est dans le cas PC1, ALL, ALL, ALL, ALL et ALL
                WPARAM4 = [F:ZZS]ZPAYSISO : WPARAM5 = "ALL" : WPARAM6 = "ALL" : WPARAM7 = "" : WPARAM8 = "" : WPARAM9 = 1
                WNUMCAS = 32 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°33-------------------
                #On commence par regarder si on est dans le cas ALL, SC1, SR1, U1, AU1 et Q1
                WPARAM4 = "ALL" : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 33 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°34-------------------
                #On commence par regarder si on est dans le cas ALL, SC1, SR1, U1, AU1 et ALL
                WPARAM4 = "ALL" : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = 1
                WNUMCAS = 34 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°35-------------------
                #On commence par regarder si on est dans le cas ALL, SC1, SR1, U1, ALL et Q1
                WPARAM4 = "ALL" : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = "" : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 35 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°36-------------------
                #On commence par regarder si on est dans le cas ALL, SC1, SR1, U1, ALL et ALL
                WPARAM4 = "ALL" : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = "" : WPARAM9 = 1
                WNUMCAS = 36 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°37-------------------
                #On commence par regarder si on est dans le cas ALL, SC1, SR1, ALL, AU1 et Q1
                WPARAM4 = "ALL" : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = "" : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 37 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°38-------------------
                #On commence par regarder si on est dans le cas ALL, SC1, SR1, ALL, AU1 et ALL
                WPARAM4 = "ALL" : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = "" : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = 1
                WNUMCAS = 38 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°39-------------------
                #On commence par regarder si on est dans le cas ALL, SC1, SR1, ALL, ALL et Q1
                WPARAM4 = "ALL" : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = "" : WPARAM8 = "" : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 39 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°40-------------------
                #On commence par regarder si on est dans le cas ALL, SC1, SR1, ALL, ALL et ALL
                WPARAM4 = "ALL" : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = "" : WPARAM8 = "" : WPARAM9 = 1
                WNUMCAS = 40 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°41-------------------
                #On commence par regarder si on est dans le cas ALL, SC1, ALL, U1, AU1 et Q1
                WPARAM4 = "ALL" : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = "ALL" : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 41 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°42-------------------
                #On commence par regarder si on est dans le cas ALL, SC1, ALL, U1, AU1 et ALL
                WPARAM4 = "ALL" : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = "ALL" : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = 1
                WNUMCAS = 42 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°43-------------------
                #On commence par regarder si on est dans le cas ALL, SC1, ALL, U1, ALL et Q1
                WPARAM4 = "ALL" : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = "ALL" : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = "" : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 43 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°44-------------------
                #On commence par regarder si on est dans le cas ALL, SC1, ALL, U1, ALL et ALL
                WPARAM4 = "ALL" : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = "ALL" : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = "" : WPARAM9 = 1
                WNUMCAS = 44 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°45-------------------
                #On commence par regarder si on est dans le cas ALL, SC1, ALL, ALL, AU1 et Q1
                WPARAM4 = "ALL" : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = "ALL" : WPARAM7 = "" : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 45 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°46-------------------
                #On commence par regarder si on est dans le cas ALL, SC1, ALL, ALL, AU1 et ALL
                WPARAM4 = "ALL" : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = "ALL" : WPARAM7 = "" : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = 1
                WNUMCAS = 46 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°47-------------------
                #On commence par regarder si on est dans le cas ALL, SC1, ALL, ALL, ALL et Q1
                WPARAM4 = "ALL" : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = "ALL" : WPARAM7 = "" : WPARAM8 = "" : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 47 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°48-------------------
                #On commence par regarder si on est dans le cas ALL, SC1, ALL, ALL, ALL et ALL
                WPARAM4 = "ALL" : WPARAM5 = [F:ZZS]ZFCY : WPARAM6 = "ALL" : WPARAM7 = "" : WPARAM8 = "" : WPARAM9 = 1
                WNUMCAS = 48 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°49-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, SR1, U1, AU1 et Q1
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 49 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°50-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, SR1, U1, AU1 et ALL
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = 1
                WNUMCAS = 50 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°51-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, SR1, U1, ALL et Q1
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = "" : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 51 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°52-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, SR1, U1, ALL et ALL
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = "" : WPARAM9 = 1
                WNUMCAS = 52 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°53-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, SR1, ALL, AU1 et Q1
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = "" : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 53 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°54-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, SR1, ALL, AU1 et ALL
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = "" : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = 1
                WNUMCAS = 54 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°55-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, SR1, ALL, ALL et Q1
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = "" : WPARAM8 = "" : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 55 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°56-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, SR1, ALL, ALL et ALL
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = [F:ZTE]ZFCYF : WPARAM7 = "" : WPARAM8 = "" : WPARAM9 = 1
                WNUMCAS = 56 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°57-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, ALL, U1, AU1 et Q1
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = "ALL" : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 57 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°58-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, ALL, U1, AU1 et ALL
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = "ALL" : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = 1
                WNUMCAS = 58 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°59-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, ALL, U1, ALL et Q1
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = "ALL" : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = "" : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 59 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°60-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, ALL, U1, ALL et ALL
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = "ALL" : WPARAM7 = [F:ZTE]ZBPCORDF : WPARAM8 = "" : WPARAM9 = 1
                WNUMCAS = 60 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°61-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, ALL, ALL, AU1 et Q1
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = "ALL" : WPARAM7 = "" : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 61 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°62-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, ALL, ALL, AU1 et ALL
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = "ALL" : WPARAM7 = "" : WPARAM8 = [F:ZTE]ZBPAADD : WPARAM9 = 1
                WNUMCAS = 62 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°63-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, ALL, ALL, ALL et Q1
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = "ALL" : WPARAM7 = "" : WPARAM8 = "" : WPARAM9 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 63 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°64-------------------
                #On commence par regarder si on est dans le cas ALL, ALL, ALL, ALL, ALL et ALL
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = "ALL" : WPARAM7 = "" : WPARAM8 = "" : WPARAM9 = 1
                WNUMCAS = 64 : Gosub SPE_TRAIT_REL From Z2WSEPALISC
              Endif
            Else
              #Il n'y a pas d'enregistrement spécifique donc l"article de prestation sur lequel on se trouve est valable
              WARTPRESTOK = 1
              #<----- MODIF JBS du 09/12/2019-----
              #WTIERSCF = [F:ZIE]CODE_PAYEUR
              WTIERSCF = [F:ZTE]ZBPCORDF
              #---------------------------------->
              WPRIX = [F:ZIE]PRIX
            Endif
            If clalev([F:ZSREL])<>0 : Close File [F:ZSREL] : Endif
            #Dans le cas d'une prestation on ne tiens pas compte du type de transport
            If(WARTPRESTOK=1)Then
              #Pour le moment l'article de prestation est à prendre en compte, il faut maintenant que l'on regarde s'il n'est pas soumis
              #à un type de transporteur
              # LEs types de transport sur les articles de prestation de type reloc sont les suivants :
              # 0 ou 1 - Pas soumis
              # 2 - Interne - Entrée
              # 3 - Externe - Entrée
              # 4 - Interne - Sortie
              # 5 - Externe - Sortie
              # Donc l'article de prestation est valable dans les cas suivants :
              # 1 - [F:ZIE]ZTYPTRSP=0
              # 2 - [F:ZIE]ZTYPTRSP=1
              # 3 - ([F:ZIE]ZTYPTRSP=2 and WTRPINTENT=2)
              # 4 - ([F:ZIE]ZTYPTRSP=3 and WTRPINTENT<>2)
              # 5 - ([F:ZIE]ZTYPTRSP=4 and WTRPINTSOR=2)
              # 6 - ([F:ZIE]ZTYPTRSP=5 and WTRPINTSOR<>2)
              If not(
& [F:ZIE]ZTYPTRSP=0
& or [F:ZIE]ZTYPTRSP=1
& or ([F:ZIE]ZTYPTRSP=2 and WTRPINTENT=2)
& or ([F:ZIE]ZTYPTRSP=3 and WTRPINTENT<>2)
& or ([F:ZIE]ZTYPTRSP=4 and WTRPINTSOR=2)
& or ([F:ZIE]ZTYPTRSP=5 and WTRPINTSOR<>2)
& )Then
                WARTPRESTOK = 0
              Endif
            Endif
            #Dans le cas où l'article de prestation est à prendre en compte, si [F:ZIE]ZACTDEC="20061" ou [F:ZIE]ZACTDEC="30061"
            #si l'article a été réparé ou transformé avant d'être relocalisé
            If(WARTPRESTOK=1)Then
              #remarques SLB du 26 et 27 septembre 2019 :
              # si une palette a été réparée puis transformée, on ne facture que la transformation
              # si une palette a été transformée 2 fois, on ne prends en compte qu'une transformation
              If([F:ZIE]ZACTDEC="30061")Then
                #On est sur un article de prestation qui se déclenche si la palette a été transformée
                #On va donc regarder si dans sa vie a palette a été transformée
                #La palette a été transformée si dans sa vie elle a eu un code palette différent de celui qu'elle possède aujourd'hui
                WARTPRESTOK = 0
                For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZSEQ=[F:ZZS]ZSEQ and [F:ZZHL]ZACTG=3
                  #La palette que l'on est en train de sortir est une palette qui a été réparée
                  WARTPRESTOK = 1
                  Break
                Next
              Endif
              If([F:ZIE]ZACTDEC="20061")Then
                #On est sur un article de prestation qui se déclenche si la palette a été réparée
                #On va donc regarder si dans sa vie la palette a été réparée
                WARTPRESTOK = 0
                For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZSEQ=[F:ZZS]ZSEQ and [F:ZZHL]ZACTG=1
                  #La palette que l'on est en train de sortir est une palette qui a été réparée
                  WARTPRESTOK = 1
                  Break
                Next
              Endif
            Endif
            If(WARTPRESTOK=1)Then
              WCHARGACT = ""
              If([F:ZIE]ZTYPFLUX=2)Then
                WCHARGACT = [F:ZTE]ZBPCORD
              Endif
              Gosub SPE_ALIM_TAB_ACHVEN_FROM_ZZSTOCK From Z2WSEPALISC
            Endif
          Next
        Next
        #-----------------ETAPE N°3--------------------
        #Description : On va archiver toutes les palettes que l'on vient de relocaliser
        For [F:ZZS]ZZAT0 Where [F:ZZS]ZACTG=[F:ZTE]ZACT and [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF
          #Seules les lignes suivantes nous interesse :
          # Les lignes dont le type st OK et dont la gestion des OK sont à faux
          If([F:ZZS]ZTYPAL=[F:ZTE]ZTYPPAL)Then
            #On est sur une ligne qu'il faut archiver
            Raz[F:ZZSA]
            [F:ZZSA] = [F:ZZS]
            Write[F:ZZSA]
            If(fstat<>0)Then
              WERRTRAIT = 1
              INFO = "[2.3] - Impossible d'archiver la ligne de stock(OK) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
            Endif
          Endif
        Next
        #On va maintenant supprimer toutes les lignes de stock modifié par l'action de relocalisation
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZTYPAL=[F:ZTE]ZTYPPAL
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[2.4] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
      Else
        WERRTRAIT = 1
        INFO = "[2.5] - Impossible de récupérer les informations de l'article de tri du chargeur"
        If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
      Endif
    Elsif([F:ZTE]ZACT=3)Then
      #-------------------------------------------------------------------------------------------------------------------------------------------
      #TODO----------------------------------------------------TRANSFORMATION---------------------------------------------------------------------
      #-------------------------------------------------------------------------------------------------------------------------------------------
      If WFICTRA : Call ECR_TRACE("Exécution d'une action : Transformation de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN : Endif
      Local Integer WNBPALTRAIT : WNBPALTRAIT = 0
      Local Char WFILTRESUPP(100) : WFILTRESUPP = "1=1"
      Local Char WCODCLT(30) : WCODCLT = ""
      Local Integer WPARAMSPE : WPARAMSPE = 0
      Local Char WTIERSCF(30)
      If clalev([F:ZT2])=0 : Local File ZARTTRICC [F:ZT2] : Endif
      For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZTE]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZTE]ZCODCLT
        WPARAMSPE = 1
        Break
      Next
      If clalev([F:ZATV])<>0 : Close File [F:ZATV] : Endif
      If(WPARAMSPE=0)Then
        If clalev([F:ZATV])=0 : Local File ZARTTRIV   [F:ZATV] : Endif
        Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;"";[F:ZTE]ZITMREF
      Else
        If clalev([F:ZATV])=0 : Local File ZARTTRICCV [F:ZATV] : Endif
        WCODCLT = [F:ZTE]ZCODCLT
        WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
        Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT;[F:ZTE]ZITMREF
      Endif
      # On commence par récupérer les informations de l'article de réparation dans le paramétrage du chargeur ou du client chargeur
      If(fstat=0)Then
        #-----------------ETAPE N°1--------------------
        #2 cas possibles dans cette première étape :
        # - Soit l'article de départ avec sa qualité n'est pas géré en stock
        # - Soit l'article de départ avec sa qualité est géré en stock, dans ce cas, on prend dans les palettes qui existe
        #Si on est dans le 1 er cas, on va donc créer artificiellement le stock sur lequel on s'appuiera ensuite
        Local Integer WGERESTOCK : WGERESTOCK = 0
        If([F:ZTE]ZTYPPAL=1 and [F:ZATV]ZGESTOK=2)Then
          WGERESTOCK = 1
        Elsif([F:ZTE]ZTYPPAL=2 and [F:ZATV]ZGESTKC=2)Then
          WGERESTOCK = 1
        Elsif([F:ZTE]ZTYPPAL=3 and [F:ZATV]ZGESTHS=2)Then
          WGERESTOCK = 1
        Endif
        If clalev([F:ZAAT])=0 : Local File ZARTTRANSFO [ZAAT] : Endif
        Local Integer WCOEFFFTRANS : WCOEFFFTRANS = 1
        Read[F:ZAAT]ZAAT0=[F:ZTE]ZBPCORD;[F:ZTE]ZITMREF;[F:ZTE]ZITMREFDEST
        If(fstat=0)Then
          WCOEFFFTRANS = [F:ZAAT]ZCOEFTRANS
        Endif
        If(WGERESTOCK=0)Then
          #L'article n'est pas géré en stock, on va donc augmenter le stock de la quantité nécessaire
          For WNUMLIG = 1 To [F:ZTE]ZQTY
            Call NUMERO("ZZSTO","",date$,"",WSEQ,WSTAT) From SUBANM
            If(WSTAT=0)Then
              Raz[F:ZZS]
              [F:ZZS]ZACTG      = 11
              If([F:ZATV]ZCODCHARGSTO<>"")Then
                [F:ZZS]ZBPCORD  = [F:ZATV]ZCODCHARGSTO
              Else
                [F:ZZS]ZBPCORD  = [F:ZTE]ZBPCORD
              Endif
              [F:ZZS]ZBPCORDF   = [F:ZTE]ZBPCORD
              [F:ZZS]ZCHAUFFEUR = [F:ZTE]ZCHAUFFEUR
              [F:ZZS]ZCODCLT    = [F:ZTE]ZCODCLT
              [F:ZZS]ZDATTRI    = date$
              [F:ZZS]ZDATVAL    = date$
              [F:ZZS]ZFCY       = [F:ZTE]ZFCY
              [F:ZZS]ZGESTHS    = [F:ZATV]ZGESTHS
              [F:ZZS]ZGESTKC    = [F:ZATV]ZGESTKC
              [F:ZZS]ZGESTOK    = [F:ZATV]ZGESTOK
              Local Char WSAVITMREF(30)
              WSAVITMREF        = [F:ZZS]ZITMREF
              [F:ZZS]ZITMREF    = [F:ZTE]ZITMREF
              [F:ZZS]ZORIGIN    = [F:ZTE]ZACTNUM
              [F:ZZS]ZPAYSISO   = "FR"
              [F:ZZS]ZQTY       = 1
              [F:ZZS]ZSEQ       = WSEQ
              [F:ZZS]ZTRPINT    = 1
              Local Integer WSAVTYPAL
              WSAVTYPAL         = [F:ZZS]ZTYPAL
              [F:ZZS]ZTYPAL     = [F:ZTE]ZTYPPAL
              [F:ZZS]ZDEPNUM    = ""
              Write[F:ZZS]
              If(fstat<>0)Then
                WERRTRAIT = 1
                INFO = "[3.1] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZSTOCK"
                If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                Break
              Else
                #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
                #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
                #Les champs de la table sont les suivants :
                Raz[F:ZZHL]
                [F:ZZHL]          = [F:ZZS]
                [F:ZZHL]ZACTNUM   = [F:ZTE]ZACTNUM
                [F:ZZHL]ZITMREF   = WSAVITMREF
                [F:ZZHL]ZTYPAL    = WSAVTYPAL
                [F:ZZHL]ZDATACT   = date$
                [F:ZZHL]ZHEUACT   = time$
                Write[F:ZZHL]
                If(fstat<>0)Then
                  WERRTRAIT = 1
                  INFO = "[3.2] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
                  If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                  Break
                Endif
              Endif
            Else
              WERRTRAIT = 1
              INFO = "[3.3] - Des erreurs se sont produites lors de la récupération du compteur ZZSTO"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Break
            Endif
          Next WNUMLIG
        Endif
        #A ce stade, nous allons pouvoir reprendre le cours du traitement normal comme si on gérait le stock
        #Description : Récupérer les n palettes les plus anciennes pour les transformer
        WNUMLIG = 0
        Local Integer WARTREPTRA : WARTREPTRA = 0
        Local Char WZSAVZACTNUM(30)
        For[F:ZZS]ZZAT0 Where [F:ZZS]ZBPCORD=[F:ZTE]ZBPCORD and [F:ZZS]ZFCY=[F:ZTE]ZFCY and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF and [F:ZZS]ZTYPAL=[F:ZTE]ZTYPPAL
          WARTREPTRA = 0
          #On commence par prendre des palettes qui n'on pas été déjà transformée ou réparée
          For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZSEQ=[F:ZZS]ZSEQ and [F:ZZHL]ZACTG=1
            #La palette que l'on est en train de traiter est une palette qui a été réparée
            WARTREPTRA = 1
            Break
          Next
          For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZSEQ=[F:ZZS]ZSEQ and [F:ZZHL]ZACTG=3
            #La palette que l'on est en train de traiter est une palette qui a été transformée
            WARTREPTRA = 1
            Break
          Next
          If(WARTREPTRA=0)Then
            #On traite la palette uniquement si elle n'a pas été réparée ou transformée
            [F:ZZS]ZACTG      = [F:ZTE]ZACT
            [F:ZZS]ZDATVAL    = date$
            WZSAVZACTNUM      = [F:ZZS]ZORIGIN
            [F:ZZS]ZORIGIN    = [F:ZTE]ZACTNUM
            [F:ZZS]ZTYPAL     = 1
            [F:ZZS]ZITMREF    = [F:ZTE]ZITMREFDEST
            #On va maintenant récupérer le mode de gestion de stock OK, KC et HS de la palette destination
            Local Integer WPARAMSPE2 : WPARAMSPE2 = 0
            If clalev([F:ZT2])=0 : Local File ZARTTRICC [F:ZT2] : Endif
            For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZZS]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZZS]ZCODCLT
              WPARAMSPE2 = 1
              Break
            Next
            If clalev([F:ZATV2])<>0 : Close File [F:ZATV2] : Endif
            If(WPARAMSPE2=0)Then
              If clalev([F:ZATV2])=0 : Local File ZARTTRIV   [F:ZATV2] : Endif
              Read[F:ZATV2]ZATV=[F:ZZS]ZBPCORD;"";[F:ZTE]ZITMREFDEST
            Else
              If clalev([F:ZATV2])=0 : Local File ZARTTRICCV [F:ZATV2] : Endif
              Read[F:ZATV2]ZATV=[F:ZZS]ZBPCORD;[F:ZZS]ZCODCLT;[F:ZTE]ZITMREFDEST
            Endif
            If(fstat=0)Then
              [F:ZZS]ZGESTOK = [F:ZATV2]ZGESTOK
              [F:ZZS]ZGESTKC = [F:ZATV2]ZGESTKC
              [F:ZZS]ZGESTHS = [F:ZATV2]ZGESTHS
            Endif
            Rewrite[F:ZZS]
            If(fstat<>0)Then
              WERRTRAIT = 1
              INFO = "[3.4] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZSTOCK"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Break
            Else
              #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
              #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
              #Les champs de la table sont les suivants :
              Raz[F:ZZHL]
              [F:ZZHL]          = [F:ZZS]
              [F:ZZHL]ZACTNUM   = WZSAVZACTNUM
              [F:ZZHL]ZDATACT   = date$
              [F:ZZHL]ZHEUACT   = time$
              Write[F:ZZHL]
              If(fstat<>0)Then
                WERRTRAIT = 1
                INFO = "[3.5] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
                If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                Break
              Endif
            Endif
            #On va maintenant regarder le coefficient de transformation. 3 cas possibles :
            # - Le coefficient de transformation est strictement inférieur à 1
            # - Le coefficient de transformation est égal à 1
            # - Le coefficient de transformation est strictement supérieur à 1
            WNUMLIG += [F:ZZS]ZQTY
            If(WCOEFFFTRANS=1)Then
              #On ne fait rien de particulier
            Elsif(WCOEFFFTRANS>1)Then
              #Dans ce cas, il faut que l'on dupplique l'enregistrement du stock que l'on vient de créer autant de fois que le coefficient
              #On considère que si le coefficient est supérieur à 1, c'est un entier
              Local Integer WNUMLIG2
              For WNUMLIG2=1 To (int(arr(WCOEFFFTRANS,1))-1)
                Call NUMERO("ZZSTO","",date$,"",WSEQ,WSTAT) From SUBANM
                If(WSTAT=0)Then
                  Raz[F:ZZS2]
                  [F:ZZS2] = [F:ZZS]
                  [F:ZZS2]ZSEQ = WSEQ
                  Write[F:ZZS2]
                  If(fstat<>0)Then
                    WERRTRAIT = 1
                    INFO = "[3.6] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZSTOCK"
                    If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                    Break
                  Else
                    #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
                    #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
                    #Les champs de la table sont les suivants :
                    Raz[F:ZZHL]
                    [F:ZZHL]          = [F:ZZS2]
                    [F:ZZHL]ZACTNUM   = [F:ZTE]ZACTNUM
                    [F:ZZHL]ZDATACT   = date$
                    [F:ZZHL]ZHEUACT   = time$
                    Write[F:ZZHL]
                    If(fstat<>0)Then
                      WERRTRAIT = 1
                      INFO = "[3.7] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
                      If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                      Break
                    Endif
                  Endif
                Else
                  WERRTRAIT = 1
                  INFO = "[3.8] - Des erreurs se sont produites lors de la récupération du compteur ZZSTO"
                  If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                  Break
                Endif
              Next
            Elsif(WCOEFFFTRANS<1)Then
              #Si le coefficient est strictement inférieur à 1, on considère que 1/WCOEFFFTRANS est un nombre entier
              #Ex si le coeff est 0.5, cela veut dire qu'il faut 2(1/0.5) palettes d'origine pour faire 1 palette de destination
              #Si le modulo de WNUMLIG par int(arr(1/WCOEFFFTRANS,1)) est égal à 1, on ne fait rien
              #sinon, on archive l'enregistrement qui ne nous servira plus
              If(mod(WNUMLIG,int(arr(1/WCOEFFFTRANS,1)))<>1)Then
                #On archive l'enregistrement et on le supprime ensuite des stocks
                Raz[F:ZZSA]
                [F:ZZSA] = [F:ZZS]
                Write[F:ZZSA]
                If(fstat<>0)Then
                  WERRTRAIT = 1
                  INFO = "[3.9] - Impossible d'archiver la ligne de stock(OK) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
                  If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                Else
                  #On va maintenant supprimer la ligne du stock
                  Delete [F:ZZS] Where [F:ZZS]ZSEQ=[F:ZZSA]ZSEQ
                  If(fstat<>0)Then
                    WERRTRAIT = 1
                    INFO = "[3.10] - ERREUR Suppression"
                    If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                  Endif
                Endif
              Endif
            Endif
          Endif
          If(WNUMLIG>=[F:ZTE]ZQTY)Then
            #On vient d'atteindre la qté à transformer, on sort de la boucle
            Break
          Endif
        Next
        #A la sortie de la boucle si WNUMLIG>=[F:ZTE]ZQTY, c'est qu'il n'y a pas assez de palette non réparées et non transformées
        #On va donc finir en utilisant des palettes réparées ou transformées
        If(WNUMLIG<[F:ZTE]ZQTY)Then
          For[F:ZZS]ZZAT0 Where [F:ZZS]ZBPCORD=[F:ZTE]ZBPCORD and [F:ZZS]ZFCY=[F:ZTE]ZFCY and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF and [F:ZZS]ZTYPAL=[F:ZTE]ZTYPPAL
            #On traite la palette uniquement si elle n'a pas été réparée ou transformée
            [F:ZZS]ZACTG      = [F:ZTE]ZACT
            [F:ZZS]ZDATVAL    = date$
            [F:ZZS]ZORIGIN    = [F:ZTE]ZACTNUM
            [F:ZZS]ZTYPAL     = [F:ZTE]ZTYPPAL
            [F:ZZS]ZITMREF    = [F:ZTE]ZITMREFDEST
            Rewrite[F:ZZS]
            If(fstat<>0)Then
              WERRTRAIT = 1
              INFO = "[3.11] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZSTOCK"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Break
            Else
              #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
              #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
              #Les champs de la table sont les suivants :
              Raz[F:ZZHL]
              [F:ZZHL]          = [F:ZZS]
              [F:ZZHL]ZACTNUM   = [F:ZTE]ZACTNUM
              [F:ZZHL]ZDATACT   = date$
              [F:ZZHL]ZHEUACT   = time$
              Write[F:ZZHL]
              If(fstat<>0)Then
                WERRTRAIT = 1
                INFO = "[3.12] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
                If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                Break
              Endif
            Endif
            #On va maintenant regarder le coefficient de transformation. 3 cas possibles :
            # - Le coefficient de transformation est strictement inférieur à 1
            # - Le coefficient de transformation est égal à 1
            # - Le coefficient de transformation est strictement supérieur à 1
            WNUMLIG += [F:ZZS]ZQTY
            If(WCOEFFFTRANS=1)Then
              #On ne fait rien de particulier
            Elsif(WCOEFFFTRANS>1)Then
              #Dans ce cas, il faut que l'on dupplique l'enregistrement du stock que l'on vient de créer autant de fois que le coefficient
              #On considère que si le coefficient est supérieur à 1, c'est un entier
              Local Integer WNUMLIG2
              For WNUMLIG2=1 To int(arr(WCOEFFFTRANS,1)-1)
                Call NUMERO("ZZSTO","",date$,"",WSEQ,WSTAT) From SUBANM
                If(WSTAT=0)Then
                  Raz[F:ZZS2]
                  [F:ZZS2] = [F:ZZS]
                  [F:ZZS2]ZSEQ = WSEQ
                  Write[F:ZZS2]
                  If(fstat<>0)Then
                    WERRTRAIT = 1
                    INFO = "[3.13] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZSTOCK"
                    If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                    Break
                  Else
                    #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
                    #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
                    #Les champs de la table sont les suivants :
                    Raz[F:ZZHL]
                    [F:ZZHL]          = [F:ZZS2]
                    [F:ZZHL]ZACTNUM   = [F:ZTE]ZACTNUM
                    [F:ZZHL]ZDATACT   = date$
                    [F:ZZHL]ZHEUACT   = time$
                    Write[F:ZZHL]
                    If(fstat<>0)Then
                      WERRTRAIT = 1
                      INFO = "[3.14] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
                      If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                      Break
                    Endif
                  Endif
                Else
                  WERRTRAIT = 1
                  INFO = "[3.15] - Des erreurs se sont produites lors de la récupération du compteur ZZSTO"
                  If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                  Break
                Endif
              Next
            Elsif(WCOEFFFTRANS<1)Then
              #Si le coefficient est strictement inférieur à 1, on considère que 1/WCOEFFFTRANS est un nombre entier
              #Ex si le coeff est 0.5, cela veut dire qu'il faut 2(1/0.5) palettes d'origine pour faire 1 palette de destination
              #Si le modulo de WNUMLIG par int(arr(1/WCOEFFFTRANS,1)) est égal à 1, on ne fait rien
              #sinon, on archive l'enregistrement qui ne nous servira plus
              If(mod(WNUMLIG,int(arr(1/WCOEFFFTRANS,1)))<>1)Then
                #On archive l'enregistrement et on le supprime ensuite des stocks
                Raz[F:ZZSA]
                [F:ZZSA] = [F:ZZS]
                Write[F:ZZSA]
                If(fstat<>0)Then
                  WERRTRAIT = 1
                  INFO = "[3.16] - Impossible d'archiver la ligne de stock(OK) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
                  If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                Else
                  #On va maintenant supprimer la ligne du stock
                  Delete [F:ZZS] Where [F:ZZS]ZSEQ=[F:ZZSA]ZSEQ
                  If(fstat<>0)Then
                    WERRTRAIT = 1
                    INFO = "[3.17] - ERREUR Suppression"
                    If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                  Endif
                Endif
              Endif
            Endif
            If(WNUMLIG>=[F:ZTE]ZQTY)Then
              #On vient d'atteindre la qté à transformer, on sort de la boucle
              Break
            Endif
          Next
        Endif
        #-----------------ETAPE N°2--------------------
        #Description : On va regarder s'il y a des choses à facturer suite à cette réparation
        Local Integer WNB : WNB=0
        For[F:ZZS]ZZAT0 Where [F:ZZS]ZACTG=[F:ZTE]ZACT and [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZITMREF=[F:ZTE]ZITMREFDEST and [F:ZZS]ZTYPAL=1
          WPARAMSPE = 0
          #Pour chaque palette que l'on va traiter, on va récupérer les informations au niveau de la palette
          For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZZS]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZZS]ZCODCLT
            WPARAMSPE = 1
            Break
          Next
          If clalev([F:ZIE])<>0  : Close File [F:ZIE]  : Endif
          WCODCLT = ""
          WFILTRESUPP = "1=1"
          If(WPARAMSPE=0)Then
            If clalev([F:ZIE])=0  : Local File ZEPALIS    [F:ZIE]  : Endif
          Else
            If clalev([F:ZIE])=0  : Local File ZEPALIS3   [F:ZIE]  : Endif
            WCODCLT = [F:ZZS]ZCODCLT
            WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
          Endif
          WTRPINTENT = [F:ZZS]ZTRPINT
          WNB += 1
          Local Integer WPRESTAFACT : WPRESTAFACT = 0
          For [F:ZIE]ZIE0 Where [F:ZIE]CODE_CHARGEU=[F:ZZS]ZBPCORD and [F:ZIE]ART_TRI=[F:ZZS]ZITMREF and [F:ZIE]ZACTDEC="30051" and evalue(WFILTRESUPP)
            #On va regarder si l'article de prestation est à prendre en compte
            WARTPRESTOK = 0
            #On va regarder dans la table ZSPETRA (ZSTRA) s'il y a des spécificités sur les articles de prestation dont l'action déclenchaante est transformation
            If clalev([F:ZSTRA])=0 : Local File ZSPETRA [ZSTRA] : Endif
            #Première chose, on regarde s'il y a des spécificités
            Filter[F:ZSTRA] Where [F:ZSTRA]ZARNUM=[F:ZIE]ZARNUM and [F:ZSTRA]ZCODCHARG=[F:ZIE]CODE_CHARGEU and [F:ZSTRA]ZCODCLTCHARG=WCODCLT
            Local Integer WNBENRSPE : WNBENRSPE = 0
            WNBENRSPE = rowcount([F:ZSTRA])
            Filter[F:ZSTRA]
            Local Char WPARAM1(30)
            Local Char WPARAM2(30)
            Local Char WPARAM3(30)
            Local Char WPARAM4(30)
            Local Char WARTVEN(30)
            Local Char WARTACH(30)
            WPARAM1 = [F:ZIE]ZARNUM
            WPARAM2 = [F:ZIE]CODE_CHARGEU
            WPARAM3 = WCODCLT
            If(WNBENRSPE>0)Then
              #--------------------CAS N°1--------------------
              #On commence par regarder si on est dans le cas S1
              WPARAM4 = [F:ZTE]ZITMREF
              Gosub SPE_TRAIT_TRA From Z2WSEPALISC
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°2--------------------
                #On regarder si on est dans le cas ALL
                WPARAM4 = "ALL"
                Gosub SPE_TRAIT_TRA From Z2WSEPALISC
              Endif
            Else
              #Il n'y a pas d'enregistrement spécifique donc l"article de prestation sur lequel on se trouve est valable
              WARTPRESTOK = 1
              WTIERSCF = [F:ZIE]CODE_PAYEUR
              WPRIX = [F:ZIE]PRIX
            Endif
            If clalev([F:ZSTRA])<>0 : Close File [F:ZSTRA] : Endif
            If(WARTPRESTOK=1)Then
              Gosub SPE_ALIM_TAB_ACHVEN_FROM_ZZSTOCK From Z2WSEPALISC
            Endif
          Next
        Next
        #-----------------ETAPE N°3--------------------
        #Description : On va regarder s'il n'y a pas des palettes que l'on doit archiver.
        #Dans notre cas, on va regarder si les palettes que l'on a modifiée sont toujours gérée en stock
        For [F:ZZS]ZZAT0 Where [F:ZZS]ZACTG=3 and [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZITMREF=[F:ZTE]ZITMREFDEST
          #Seules les lignes suivantes nous interesse :
          # Les lignes dont le type st OK et dont la gestion des OK sont à faux
          If([F:ZZS]ZTYPAL=1 and [F:ZZS]ZGESTOK<>2)Then
            #On est sur une ligne qu'il faut archiver
            Raz[F:ZZSA]
            [F:ZZSA] = [F:ZZS]
            Write[F:ZZSA]
            If(fstat<>0)Then
              WERRTRAIT = 1
              INFO = "[3.18] - Impossible d'archiver la ligne de stock(OK) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
            Endif
          Endif
          # Les lignes dont le type st KC et dont la gestion des KC sont à faux
          If([F:ZZS]ZTYPAL=2 and [F:ZZS]ZGESTKC<>2)Then
            #On est sur une ligne qu'il faut archiver
            Raz[F:ZZSA]
            [F:ZZSA] = [F:ZZS]
            Write[F:ZZSA]
            If(fstat<>0)Then
              WERRTRAIT = 1
              INFO = "[3.19] - Impossible d'archiver la ligne de stock(KC) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
            Endif
          Endif
          # Les lignes dont le type st HS et dont la gestion des HS sont à faux
          If([F:ZZS]ZTYPAL=3 and [F:ZZS]ZGESTHS<>2)Then
            #On est sur une ligne qu'il faut archiver
            Raz[F:ZZSA]
            [F:ZZSA] = [F:ZZS]
            Write[F:ZZSA]
            If(fstat<>0)Then
              WERRTRAIT = 1
              INFO = "[3.20] - Impossible d'archiver la ligne de stock(HS) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
            Endif
          Endif
        Next
        #On va maintenant supprimer toutes les lignes de stock modifié par l'action de collecte si les OK ne sont plus gérées
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZTYPAL=1 and [F:ZZS]ZGESTOK<>2
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[3.21] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
        #On va maintenant supprimer toutes les lignes de stock modifié par l'action de collecte si les KC ne sont plus gérées
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZTYPAL=2 and [F:ZZS]ZGESTKC<>2
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[3.22] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
        #On va maintenant supprimer toutes les lignes de stock modifié par l'action de collecte si les HS ne sont plus gérées
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZTYPAL=3 and [F:ZZS]ZGESTHS<>2
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[3.23] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
      Else
        WERRTRAIT = 1
        INFO = "[3.24] - Impossible de récupérer les informations de l'article de tri du chargeur"
        If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
      Endif
    Elsif([F:ZTE]ZACT=5)Then
      #-------------------------------------------------------------------------------------------------------------------------------------------
      #TODO---------------------------------------------------ENTREE DIVERSE----------------------------------------------------------------------
      #-------------------------------------------------------------------------------------------------------------------------------------------
      If WFICTRA : Call ECR_TRACE("Exécution d'une ligne d'action : Entrée diverse de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN : Endif
      #-----------------ETAPE N°1--------------------
      #Description : On va alimenter la table des stocks
      Local Integer WNBPALTRAIT : WNBPALTRAIT = 0
      #On récupère l'informaation pour savoir si c'est un transport interne
      Local Char WFILTRESUPP(100) : WFILTRESUPP = "1=1"
      Local Char WCODCLT(30) : WCODCLT = ""
      Local Integer WPARAMSPE : WPARAMSPE = 0
      Local Char WTIERSCF(30)
      #<----- MODIFICATION JBS du 12/12/2019-----
      # Dans le cas d'une entrée diverse, il faut affecter à chaque palette que l'on rentre un type de transport
      # Deux possibilités s'offre à nous :
      # - 1 - Soit on considère que les palettes que l'on entre en stock n'ont pas été collectées par nous  : WTRPINTENT = 1
      # - 2 - Soit on considère que les palettes que l'on entre en stock ont été collectées par nous        : WTRPINTENT = 2
      # Décision prise par Renaud CORNU le 12/12/2019 : Cas n° 2
      WTRPINTENT = 2
      #----------------------------------------->
      If([F:ZTE]ZCHAUFFEUR<>'')Then
        Read[F:ZCE]ZCE0=[F:ZTE]ZBPCORD;[F:ZTE]ZCHAUFFEUR
        If(fstat=0)Then
          WTRPINTENT = [F:ZCE]ZTRPINT
        Endif
      Endif
      If([F:ZTE]ZCODCLT<>"")Then
        If clalev([F:ZT2])=0 : Local File ZARTTRICC [F:ZT2] : Endif
        For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZTE]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZTE]ZCODCLT
          WPARAMSPE = 1
          Break
        Next
      Endif
      If clalev([F:ZATV])<>0 : Close File [F:ZATV] : Endif
      If(WPARAMSPE=0)Then
        If clalev([F:ZATV])=0 : Local File ZARTTRIV   [F:ZATV] : Endif
        Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;"";[F:ZTE]ZITMREF
     Else
        If clalev([F:ZATV])=0 : Local File ZARTTRICCV [F:ZATV] : Endif
        WCODCLT = [F:ZTE]ZCODCLT
        WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
        Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT;[F:ZTE]ZITMREF
      Endif
      #<----------------------------------------------------------------------------------------------------------
      # Dans une action de tri, il faut que l'on regarde si on mouvemente les stocks ou pas.
      # Dans le cas ou le chargeur et le client chargeur ont leur axe métier à HP alors il ne faut pas mouvementer
      # les stocks donc faire comme si on ne gérait rien en stock.
      # On va donc commencer par alimenter une variable pour savoir si on est dans ce cas là
      Local Integer WALIMSTO : WALIMSTO = 1 # 1 : on alimente les stocks, 0 : on n'alimente pas les stocks
      If([F:ZTE]ZCODCLT<>"")Then
        #Dans ce cas, on va récupérer l'axe metier du chargeur et du client chargeur
        Read[F:BPC]BPC0=[F:ZTE]ZBPCORD
        If(fstat=0)Then
          Read[F:ZAI]ZAI0=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT
          If(fstat=0)Then
            #If([F:BPC]ZAXEMETEPI="HP" and [F:ZAI]ZAXEMETEPI="HP")Then
            If([F:BPC]ZMODGESTEPI=3 and [F:ZAI]ZMODGESTEPI=3)Then
              #On est dans le cas où on ne gère pas de stock
              WALIMSTO = 0
            Endif
          Endif
        Endif
      Endif
      #---------------------------------------------------------------------------------------------------------->
      # On commence par récupérer les informations de l'article de tri dans le paramétrage du chargeur ou du client chargeur
      If(fstat=0)Then
        #On est dans le cas ou on alimente directement le stock ZZSTOCK
        For WNBPALTRAIT=1 To [F:ZTE]ZQTY
          Raz[F:ZZS]
          Call NUMERO("ZZSTO","",date$,"",WSEQ,WSTAT) From SUBANM
          If WSTAT=0
            [F:ZZS]ZACTG      = 5
            If([F:ZATV]ZCODCHARGSTO<>"")Then
              [F:ZZS]ZBPCORD  = [F:ZATV]ZCODCHARGSTO
            Else
              [F:ZZS]ZBPCORD  = [F:ZTE]ZBPCORD
            Endif
            [F:ZZS]ZBPCORDF   = [F:ZTE]ZBPCORD
            #[F:ZZS]ZCHAUFFEUR = [F:ZTE]ZCHAUFFEUR
            [F:ZZS]ZCHAUFFEUR = "EPALIA"
            [F:ZZS]ZCODCLT    = [F:ZTE]ZCODCLT
            [F:ZZS]ZDATTRI    = [F:ZTE]ZDATACT
            [F:ZZS]ZDATVAL    = date$
            [F:ZZS]ZFCY       = [F:ZTE]ZFCY
            [F:ZZS]ZGESTHS    = [F:ZATV]ZGESTHS
            [F:ZZS]ZGESTKC    = [F:ZATV]ZGESTKC
            [F:ZZS]ZGESTOK    = [F:ZATV]ZGESTOK
            [F:ZZS]ZITMREF    = [F:ZTE]ZITMREF
            [F:ZZS]ZORIGIN    = [F:ZTE]ZACTNUM
            [F:ZZS]ZPAYSISO   = [F:ZTE]ZPAYS
            [F:ZZS]ZQTY       = 1
            [F:ZZS]ZSEQ       = WSEQ
            [F:ZZS]ZTRPINT    = WTRPINTENT
            [F:ZZS]ZTYPAL     = [F:ZTE]ZTYPPAL
            [F:ZZS]ZDEPNUM    = [F:ZTE]ZDEPNUM
            Write[F:ZZS]
            If(fstat<>0)Then
              WERRTRAIT = 1
              INFO = "[5.1] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZSTOCK"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Break
            Else
              #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
              #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
              #Les champs de la table sont les suivants :
              Raz[F:ZZHL]
              [F:ZZHL]          = [F:ZZS]
              [F:ZZHL]ZACTNUM   = [F:ZTE]VCRNUM
              [F:ZZHL]ZDATACT   = date$
              [F:ZZHL]ZHEUACT   = time$
              Write[F:ZZHL]
              If(fstat<>0)Then
                WERRTRAIT = 1
                INFO = "[5.2] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
                If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                Break
              Endif
            Endif
          Else
            WERRTRAIT = 1
            INFO = "[5.3] - Des erreurs se sont produites lors de la rcupération du compteur pour la table ZZSTOCK"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
            Break
          Endif
        Next WNBPALTRAIT
      Else
        WERRTRAIT = 1
        INFO = "[5.4] - Impossible de récupérer les informations de l'article de tri du chargeur"
        If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
      Endif
      #-----------------ETAPE N°2--------------------
      #Description : On va regarder s'il y a des choses à facturer suite à ce tri
      Local Integer WNB : WNB=0
      For[F:ZZS]ZZAT0 Where [F:ZZS]ZACTG=[F:ZTE]ZACT and [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF and [F:ZZS]ZTYPAL=[F:ZTE]ZTYPPAL
        WPARAMSPE = 0
        #Pour chaque palette que l'on va traiter, on va récupérer les informations au niveau de la palette
        If([F:ZZS]ZCODCLT<>"")Then
          For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZZS]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZZS]ZCODCLT
            WPARAMSPE = 1
            Break
          Next
        Endif
        If clalev([F:ZIE])<>0  : Close File [F:ZIE]  : Endif
        WCODCLT = ""
        WFILTRESUPP = "1=1"
        If(WPARAMSPE=0)Then
          If clalev([F:ZIE])=0  : Local File ZEPALIS    [F:ZIE]  : Endif
        Else
          If clalev([F:ZIE])=0  : Local File ZEPALIS3   [F:ZIE]  : Endif
          WCODCLT = [F:ZZS]ZCODCLT
          WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
        Endif
        WTRPINTENT = [F:ZZS]ZTRPINT
        WNB += 1
        Local Integer WPRESTAFACT : WPRESTAFACT = 0
        For [F:ZIE]ZIE0 Where [F:ZIE]CODE_CHARGEU=[F:ZZS]ZBPCORD and [F:ZIE]ART_TRI=[F:ZZS]ZITMREF and [F:ZIE]ZACTDEC="10011" and evalue(WFILTRESUPP)
          #On va regarder si l'article de prestation est à prendre en compte
          WARTPRESTOK = 0
          #On va regarder dans la table ZSPEEDI (ZSEDI) s'il y a des spécificités sur les articles de prestation dont l'action déclenchaante est Entrée diverse
          If clalev([F:ZSEDI])=0 : Local File ZSPEEDI [ZSEDI] : Endif
          #Première chose, on regarde s'il y a des spécificités
          Filter[F:ZSEDI] Where [F:ZSEDI]ZARNUM=[F:ZIE]ZARNUM and [F:ZSEDI]ZCODCHARG=[F:ZIE]CODE_CHARGEU and [F:ZSEDI]ZCODCLTCHARG=WCODCLT
          Local Integer WNBENRSPE : WNBENRSPE = 0
          WNBENRSPE = rowcount([F:ZSEDI])
          Filter[F:ZSEDI]
          #La table F:ZSEDI [ZSEDI] à les champs suivants :
          # ZCLTFOU : Client / Fournisseur
          # ZCODCHARG : Code chargeur
          # ZCODCLTCHARG : Code client chargeur
          # ZPAYS : Pays
          # ZSITE : Site coll.
          # ZQTYMAX : Qté max
          # ZQTYMIN : Qté min
          # ZTYPPAL : Qualité emballage
          # ZARTVEN : Code article de vente
          # ZARTACH : Code article achat
          Local Char WPARAM1(30)
          Local Char WPARAM2(30)
          Local Char WPARAM3(30)
          Local Char WPARAM4(30)
          Local Char WPARAM5(30)
          Local Integer WPARAM6
          Local Char WARTVEN(30)
          Local Char WARTACH(30)
          WPARAM1 = [F:ZIE]ZARNUM
          WPARAM2 = [F:ZIE]CODE_CHARGEU
          WPARAM3 = WCODCLT
          If(WNBENRSPE>0)Then
            #--------------------CAS N°1--------------------
            #On commence par regarder si on est dans le cas P1, S1 et Q1
            WPARAM4 = [F:ZTE]ZPAYS : WPARAM5 = [F:ZTE]ZFCY : WPARAM6 = ([F:ZTE]ZTYPPAL+1)
            Gosub SPE_TRAIT_EDI From Z2WSEPALISC
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°2--------------------
              #On regarder si on est dans le cas ALL, S1 et Q1
              WPARAM4 = "ALL" : WPARAM5 = [F:ZTE]ZFCY : WPARAM6 = ([F:ZTE]ZTYPPAL+1)
              Gosub SPE_TRAIT_EDI From Z2WSEPALISC
            Endif
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°3--------------------
              #On regarder si on est dans le cas P1, ALL et Q1
              WPARAM4 = [F:ZTE]ZPAYS : WPARAM5 = "ALL" : WPARAM6 = ([F:ZTE]ZTYPPAL+1)
              Gosub SPE_TRAIT_EDI From Z2WSEPALISC
            Endif
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°4--------------------
              #On regarder si on est dans le cas ALL, ALL et Q1
              WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = ([F:ZTE]ZTYPPAL+1)
              Gosub SPE_TRAIT_EDI From Z2WSEPALISC
            Endif
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°5--------------------
              #On regarder si on est dans le cas P1, S1 et ALL
              WPARAM4 = [F:ZTE]ZPAYS : WPARAM5 = [F:ZTE]ZFCY : WPARAM6 = 1
              Gosub SPE_TRAIT_EDI From Z2WSEPALISC
            Endif
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°6--------------------
              #On regarder si on est dans le cas ALL, S1 et ALL
              WPARAM4 = "ALL" : WPARAM5 = [F:ZTE]ZFCY : WPARAM6 = 1
              Gosub SPE_TRAIT_EDI From Z2WSEPALISC
            Endif
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°7--------------------
              #On regarder si on est dans le cas P1, ALL et ALL
              WPARAM4 = [F:ZTE]ZPAYS : WPARAM5 = "ALL" : WPARAM6 = 1
              Gosub SPE_TRAIT_EDI From Z2WSEPALISC
            Endif
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°8--------------------
              #On regarder si on est dans le cas ALL, ALL et ALL
              WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = 1
              Gosub SPE_TRAIT_EDI From Z2WSEPALISC
            Endif
          Else
            #Il n'y a pas d'enregistrement spécifique donc l"article de prestation sur lequel on se trouve est valable
            WARTPRESTOK = 1
            WTIERSCF = [F:ZIE]CODE_PAYEUR
            WPRIX = [F:ZIE]PRIX
          Endif
          If clalev([F:ZSTRI])<>0 : Close File [F:ZSTRI] : Endif
          If(WARTPRESTOK=1)Then
            #Pour le moment l'article de prestation est à prendre en compte, il faut maintenant que l'on regarde s'il n'est pas soumis
            #à un type de transporteur
            If not([F:ZIE]ZTYPTRSP=0 or [F:ZIE]ZTYPTRSP=1 or ([F:ZIE]ZTYPTRSP=2 and WTRPINTENT=2) or ([F:ZIE]ZTYPTRSP=3 and WTRPINTENT<>2))Then
              WARTPRESTOK = 0
            Endif
          Endif
          If(WARTPRESTOK=1)Then
            WCHARGACT = ""
            If([F:ZIE]ZTYPFLUX=2)Then
              WCHARGACT = [F:ZTE]ZBPCORD
            Endif
            Gosub SPE_ALIM_TAB_ACHVEN_FROM_ZZSTOCK From Z2WSEPALISC
          Endif
        Next
      Next
      #-----------------ETAPE N°3--------------------
      #Description : On va regarder s'il n'y a pas des palettes que l'on doit archiver.
      #Dans notre cas, on va regarder si les palettes que l'on a modifiée sont toujours gérée en stock
      For [F:ZZS]ZZAT0 Where [F:ZZS]ZACTG=[F:ZTE]ZACT and [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF
        #Seules les lignes suivantes nous interesse :
        # Les lignes dont le type st OK et dont la gestion des OK sont à faux
        If([F:ZZS]ZTYPAL=1 and ([F:ZZS]ZGESTOK<>2 or WALIMSTO=0))Then
          #On est sur une ligne qu'il faut archiver
          Raz[F:ZZSA]
          [F:ZZSA] = [F:ZZS]
          Write[F:ZZSA]
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[5.5] - Impossible d'archiver la ligne de stock(OK) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          Endif
        Endif
        # Les lignes dont le type st KC et dont la gestion des KC sont à faux
        If([F:ZZS]ZTYPAL=2 and ([F:ZZS]ZGESTKC<>2 or WALIMSTO=0))Then
          #On est sur une ligne qu'il faut archiver
          Raz[F:ZZSA]
          [F:ZZSA] = [F:ZZS]
          Write[F:ZZSA]
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[5.6] - Impossible d'archiver la ligne de stock(KC) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          Endif
        Endif
        # Les lignes dont le type st HS et dont la gestion des HS sont à faux
        If([F:ZZS]ZTYPAL=3 and ([F:ZZS]ZGESTHS<>2 or WALIMSTO=0))Then
          #On est sur une ligne qu'il faut archiver
          Raz[F:ZZSA]
          [F:ZZSA] = [F:ZZS]
          Write[F:ZZSA]
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[5.7] - Impossible d'archiver la ligne de stock(HS) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          Endif
        Endif
      Next
      If(WALIMSTO=1)Then
        #On est dans le cas où on gère le stock
        #On va maintenant supprimer toutes les lignes de stock modifié par l'action de collecte si les OK ne sont plus gérées
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZTYPAL=1 and [F:ZZS]ZGESTOK<>2
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[5.8] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
        #On va maintenant supprimer toutes les lignes de stock modifié par l'action de collecte si les KC ne sont plus gérées
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZTYPAL=2 and [F:ZZS]ZGESTKC<>2
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[5.9] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
        #On va maintenant supprimer toutes les lignes de stock modifié par l'action de collecte si les HS ne sont plus gérées
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZTYPAL=3 and [F:ZZS]ZGESTHS<>2
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[5.10] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
      Else
        #On est dans le cas où on ne gère pas le stock (cas du HP)
        #On va maintenant supprimer toutes les lignes de stock
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[5.11] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
      Endif
      #----------------------------------------------
    Elsif([F:ZTE]ZACT=6)Then
      #-------------------------------------------------------------------------------------------------------------------------------------------
      #TODO---------------------------------------------------SORTIE DIVERSE----------------------------------------------------------------------
      #-------------------------------------------------------------------------------------------------------------------------------------------
      If WFICTRA : Call ECR_TRACE("Exécution d'une ligne d'action : Sortie diverse de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN : Endif
      Local Integer WNBPALTRAIT : WNBPALTRAIT = 0
      Local Char WFILTRESUPP(100) : WFILTRESUPP = "1=1"
      Local Char WCODCLT(30) : WCODCLT = ""
      Local Integer WPARAMSPE : WPARAMSPE = 0
      Local Char WTIERSCF(30)
      If clalev([F:ZT2])=0 : Local File ZARTTRICC [F:ZT2] : Endif
      For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZTE]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZTE]ZCODCLT
        WPARAMSPE = 1
        Break
      Next
      If clalev([F:ZATV])<>0 : Close File [F:ZATV] : Endif
      WCODCLT = ""
      If(WPARAMSPE=0)Then
        If clalev([F:ZATV])=0 : Local File ZARTTRIV   [F:ZATV] : Endif
        Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;"";[F:ZTE]ZITMREF
      Else
        If clalev([F:ZATV])=0 : Local File ZARTTRICCV [F:ZATV] : Endif
        WCODCLT = [F:ZTE]ZCODCLT
        WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
        Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT;[F:ZTE]ZITMREF
      Endif
      # On commence par récupérer les informations de l'article de réparation dans le paramétrage du chargeur ou du client chargeur
      #Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT;[F:ZTE]ZITMREF
      If(fstat=0)Then
        #-----------------ETAPE N°1--------------------
        #Description : Récupérer les n palettes les plus anciennes à sortir
        WNUMLIG = 0
        Local Char WZSAVZACTNUM(30)
        For[F:ZZS]ZZAT0 Where [F:ZZS]ZBPCORD=[F:ZTE]ZBPCORD and [F:ZZS]ZFCY=[F:ZTE]ZFCY and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF and [F:ZZS]ZTYPAL=[F:ZTE]ZTYPPAL
          [F:ZZS]ZACTG      = [F:ZTE]ZACT
          [F:ZZS]ZDATVAL    = date$
#          WZSAVZACTNUM      = [F:ZZS]ZORIGIN
          [F:ZZS]ZORIGIN    = [F:ZTE]ZACTNUM
          [F:ZZS]ZTYPAL     = [F:ZTE]ZTYPPAL
          Rewrite[F:ZZS]
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[6.1] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZSTOCK"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
            Break
          Else
            #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
            #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
            #Les champs de la table sont les suivants :
            Raz[F:ZZHL]
            [F:ZZHL]          = [F:ZZS]
#            [F:ZZHL]ZACTNUM   = WZSAVZACTNUM
            [F:ZZHL]ZACTNUM   = [F:ZTE]ZACTNUM
            [F:ZZHL]ZDATACT   = date$
            [F:ZZHL]ZHEUACT   = time$
            Write[F:ZZHL]
            If(fstat<>0)Then
              WERRTRAIT = 1
              INFO = "[6.2] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Break
            Endif
          Endif
          WNUMLIG += [F:ZZS]ZQTY
          If(WNUMLIG>=[F:ZTE]ZQTY)Then
            #On vient d'atteindre la qté à relocaliser, on sort de la boucle
            Break
          Endif
        Next
        #-----------------ETAPE N°2--------------------
        #Description : On va regarder s'il y a des choses à facturer suite à cette réparation
        WTRPINTSOR = 1
        Read[F:ZCE]ZCE0=[F:ZTE]ZBPCORD;[F:ZTE]ZCHAUFFEUR
        If(fstat=0)Then
          WTRPINTSOR = [F:ZCE]ZTRPINT
        Endif
        Local Integer WNB : WNB=0
        For[F:ZZS]ZZAT0 Where [F:ZZS]ZACTG=[F:ZTE]ZACT and [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF and [F:ZZS]ZTYPAL=[F:ZTE]ZTYPPAL
          WPARAMSPE = 0
          #Pour chaque palette que l'on va traiter, on va récupérer les informations au niveau de la palette
          For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZZS]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZZS]ZCODCLT
            WPARAMSPE = 1
            Break
          Next
          If clalev([F:ZIE])<>0  : Close File [F:ZIE]  : Endif
          WCODCLT = ""
          WFILTRESUPP = "1=1"
          If(WPARAMSPE=0)Then
            If clalev([F:ZIE])=0  : Local File ZEPALIS    [F:ZIE]  : Endif
          Else
            If clalev([F:ZIE])=0  : Local File ZEPALIS3   [F:ZIE]  : Endif
            WCODCLT = [F:ZZS]ZCODCLT
            WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
          Endif
          WTRPINTENT = [F:ZZS]ZTRPINT
          WNB += 1
          Local Integer WPRESTAFACT : WPRESTAFACT = 0
          For [F:ZIE]ZIE0 Where [F:ZIE]CODE_CHARGEU=[F:ZZS]ZBPCORD and [F:ZIE]ART_TRI=[F:ZZS]ZITMREF and ([F:ZIE]ZACTDEC="10071" or [F:ZIE]ZACTDEC="20071" or [F:ZIE]ZACTDEC="30071") and evalue(
& WFILTRESUPP)
            #On va regarder si l'article de prestation est à prendre en compte
            WARTPRESTOK = 0
            #On va regarder dans la table ZSPESDI (ZSSDI) s'il y a des spécificités sur les articles de prestation dont l'action déclenchaante est sortie diverse
            If clalev([F:ZSSDI])=0 : Local File ZSPESDI [ZSSDI] : Endif
            #Première chose, on regarde s'il y a des spécificités
            Filter[F:ZSSDI] Where [F:ZSSDI]ZARNUM=[F:ZIE]ZARNUM and [F:ZSSDI]ZCODCHARG=[F:ZIE]CODE_CHARGEU and [F:ZSSDI]ZCODCLTCHARG=WCODCLT
            Local Integer WNBENRSPE : WNBENRSPE = 0
            WNBENRSPE = rowcount([F:ZSSDI])
            Filter[F:ZSSDI]
            Local Char WPARAM1(30)
            Local Char WPARAM2(30)
            Local Char WPARAM3(30)
            Local Char WPARAM4(30)
            Local Integer WPARAM5(30)
            Local Char WARTVEN(30)
            Local Char WARTACH(30)
            WPARAM1 = [F:ZIE]ZARNUM
            WPARAM2 = [F:ZIE]CODE_CHARGEU
            WPARAM3 = WCODCLT
            Local Integer WNUMCAS
            If(WNBENRSPE>0)Then
              #--------------------CAS N°1--------------------
              #On commence par regarder si on est dans le cas S1 et Q1
              WPARAM4 = [F:ZZS]ZFCY : WPARAM5 = ([F:ZTE]ZTYPPAL+1)
              WNUMCAS = 1 : Gosub SPE_TRAIT_SDI From Z2WSEPALISC
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°2--------------------
                #On commence par regarder si on est dans le cas S1 et ALL
                WPARAM4 = [F:ZZS]ZFCY : WPARAM5 = 1
                WNUMCAS = 2 : Gosub SPE_TRAIT_SDI From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°3--------------------
                #On commence par regarder si on est dans le cas ALL et Q1
                WPARAM4 = "ALL" : WPARAM5 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 3 : Gosub SPE_TRAIT_SDI From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°4--------------------
                #On commence par regarder si on est dans le cas ALL et ALL
                WPARAM4 = "ALL" : WPARAM5 = 1
                WNUMCAS = 4 : Gosub SPE_TRAIT_SDI From Z2WSEPALISC
              Endif
            Else
              #Il n'y a pas d'enregistrement spécifique donc l"article de prestation sur lequel on se trouve est valable
              WARTPRESTOK = 1
              #<----- MODIF JBS du 09/12/2019-----
              #WTIERSCF = [F:ZIE]CODE_PAYEUR
              WTIERSCF = [F:ZTE]ZBPCORDF
              #---------------------------------->
              WPRIX = [F:ZIE]PRIX
            Endif
            If clalev([F:ZSSDI])<>0 : Close File [F:ZSSDI] : Endif
            #Dans le cas d'une prestation on ne tiens pas compte du type de transport
            If(WARTPRESTOK=1)Then
              #Pour le moment l'article de prestation est à prendre en compte, il faut maintenant que l'on regarde s'il n'est pas soumis
              #à un type de transporteur
              # LEs types de transport sur les articles de prestation de type reloc sont les suivants :
              # 0 ou 1 - Pas soumis
              # 2 - Interne - Entrée
              # 3 - Externe - Entrée
              # 4 - Interne - Sortie
              # 5 - Externe - Sortie
              # Donc l'article de prestation est valable dans les cas suivants :
              # 1 - [F:ZIE]ZTYPTRSP=0
              # 2 - [F:ZIE]ZTYPTRSP=1
              # 3 - ([F:ZIE]ZTYPTRSP=2 and WTRPINTENT=2)
              # 4 - ([F:ZIE]ZTYPTRSP=3 and WTRPINTENT<>2)
              # 5 - ([F:ZIE]ZTYPTRSP=4 and WTRPINTSOR=2)
              # 6 - ([F:ZIE]ZTYPTRSP=5 and WTRPINTSOR<>2)
              If not(
& [F:ZIE]ZTYPTRSP=0
& or [F:ZIE]ZTYPTRSP=1
& or ([F:ZIE]ZTYPTRSP=2 and WTRPINTENT=2)
& or ([F:ZIE]ZTYPTRSP=3 and WTRPINTENT<>2)
& or ([F:ZIE]ZTYPTRSP=4 and WTRPINTSOR=2)
& or ([F:ZIE]ZTYPTRSP=5 and WTRPINTSOR<>2)
& )Then
                WARTPRESTOK = 0
              Endif
            Endif
            #Dans le cas où l'article de prestation est à prendre en compte, si [F:ZIE]ZACTDEC="20061" ou [F:ZIE]ZACTDEC="30061"
            #si l'article a été réparé ou transformé avant d'être relocalisé
            If(WARTPRESTOK=1)Then
              #remarques SLB du 26 et 27 septembre 2019 :
              # si une palette a été réparée puis transformée, on ne facture que la transformation
              # si une palette a été transformée 2 fois, on ne prends en compte qu'une transformation
              If([F:ZIE]ZACTDEC="30071")Then
                #On est sur un article de prestation qui se déclenche si la palette a été transformée
                #On va donc regarder si dans sa vie a palette a été transformée
                #La palette a été transformée si dans sa vie elle a eu un code palette différent de celui qu'elle possède aujourd'hui
                WARTPRESTOK = 0
                For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZSEQ=[F:ZZS]ZSEQ and [F:ZZHL]ZACTG=3
                  #La palette que l'on est en train de sortir est une palette qui a été réparée
                  WARTPRESTOK = 1
                  Break
                Next
              Endif
              If([F:ZIE]ZACTDEC="20071")Then
                #On est sur un article de prestation qui se déclenche si la palette a été réparée
                #On va donc regarder si dans sa vie la palette a été réparée
                WARTPRESTOK = 0
                For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZSEQ=[F:ZZS]ZSEQ and [F:ZZHL]ZACTG=1
                  #La palette que l'on est en train de sortir est une palette qui a été réparée
                  WARTPRESTOK = 1
                  Break
                Next
              Endif
            Endif
            If(WARTPRESTOK=1)Then
              WCHARGACT = ""
              If([F:ZIE]ZTYPFLUX=2)Then
                WCHARGACT = [F:ZTE]ZBPCORD
              Endif
              Gosub SPE_ALIM_TAB_ACHVEN_FROM_ZZSTOCK From Z2WSEPALISC
            Endif
          Next
        Next
        #-----------------ETAPE N°3--------------------
        #Description : On va archiver toutes les palettes que l'on vient de relocaliser
        For [F:ZZS]ZZAT0 Where [F:ZZS]ZACTG=[F:ZTE]ZACT and [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF
          #Seules les lignes suivantes nous interesse :
          # Les lignes dont le type st OK et dont la gestion des OK sont à faux
          If([F:ZZS]ZTYPAL=[F:ZTE]ZTYPPAL)Then
            #On est sur une ligne qu'il faut archiver
            Raz[F:ZZSA]
            [F:ZZSA] = [F:ZZS]
            Write[F:ZZSA]
            If(fstat<>0)Then
              WERRTRAIT = 1
              INFO = "[6.3] - Impossible d'archiver la ligne de stock(OK) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
            Endif
          Endif
        Next
        #On va maintenant supprimer toutes les lignes de stock modifié par l'action de relocalisation
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZTYPAL=[F:ZTE]ZTYPPAL
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[6.4] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
      Else
        WERRTRAIT = 1
        INFO = "[6.5] - Impossible de récupérer les informations de l'article de tri du chargeur"
        If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
      Endif
    Elsif([F:ZTE]ZACT=14)Then
      #-------------------------------------------------------------------------------------------------------------------------------------------
      #TODO------------------------------------------ENTREE DIVERSE PALETTES A TRIER--------------------------------------------------------------
      #-------------------------------------------------------------------------------------------------------------------------------------------
      If WFICTRA : Call ECR_TRACE("Exécution d'une ligne d'action : Entrée diverse (palettes à trier) de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN : Endif
      #-----------------ETAPE N°1--------------------
      #Description : On va alimenter la table des stocks
      Local Integer WNBPALTRAIT : WNBPALTRAIT = 0
      #On récupère l'informaation pour savoir si c'est un transport interne
      Local Char WFILTRESUPP(100) : WFILTRESUPP = "1=1"
      Local Char WCODCLT(30) : WCODCLT = ""
      Local Integer WPARAMSPE : WPARAMSPE = 0
      Local Integer WNBPALTRAIT
      Local Char WTIERSCF(30)
      Local Char WZPALATRIER(30)
      WTRPINTENT = 1
      Read[F:ZCE]ZCE0=[F:ZTE]ZBPCORD;[F:ZTE]ZCHAUFFEUR
      If(fstat=0)Then
        WTRPINTENT = [F:ZCE]ZTRPINT
      Endif
      If clalev([F:ZT2])=0 : Local File ZARTTRICC [F:ZT2] : Endif
      For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZTE]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZTE]ZCODCLT
        WPARAMSPE = 1
        Break
      Next
      If clalev([F:ZARE])=0   : Local File ZARTRECEP   [F:ZARE] : Endif
      If(WPARAMSPE=1)Then
        WCODCLT = [F:ZTE]ZCODCLT
        WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
      Endif
      # On commence par récupérer les informations de l'article de tri représentant l'article de réception dans le paramétrage du chargeur ou du client chargeur
      Read[F:ZARE]ZARE0=[F:ZTE]ZBPCORD;[F:ZTE]ZITMREF
      If(fstat=0)Then
        For WNBPALTRAIT=1 To [F:ZTE]ZQTY
          Call NUMERO("ZZSTO","",date$,"",WSEQ,WSTAT) From SUBANM
          If(WSTAT=0)Then
            Raz [F:ZZAT]
            [F:ZZAT]ZSEQ       = WSEQ
            [F:ZZAT]ZBPCORD    = [F:ZTE]ZBPCORD
            [F:ZZAT]ZCHAUFFEUR = [F:ZTE]ZCHAUFFEUR
            If([F:ZZAT]ZCHAUFFEUR="")Then
              [F:ZZAT]ZCHAUFFEUR = "EPALIA"
            Endif
            [F:ZZAT]ZCODCLT    = [F:ZTE]ZCODCLT
            [F:ZZAT]ZDATTRI    = [0/0/0]
            [F:ZZAT]ZDATVAL    = [F:ZTE]ZDATACT
            [F:ZZAT]ZDEPCL     = [F:ZTE]ZDEPNUM
            [F:ZZAT]ZEPMNUM    = [F:ZTE]ZACTNUM
            [F:ZZAT]ZFCY       = [F:ZTE]ZFCY
            [F:ZZAT]ZITMREF    = [F:ZTE]ZITMREF
            If([F:ZARE]ZPALATRIER<>"")Then
              [F:ZZAT]ZITMREF  = [F:ZARE]ZPALATRIER
            Endif
            WZPALATRIER        = [F:ZZAT]ZITMREF
            [F:ZZAT]ZQTY       = 1
            [F:ZZAT]ZTRPINT    = 2
            [F:ZZAT]ZACTNUM    = [F:ZTE]ZACTNUM
            [F:ZZAT]ZBPCORDF   = [F:ZTE]ZBPCORD
            [F:ZZAT]ZPAYSISO   = [F:ZTE]ZPAYS
            Read[F:ZCE]ZCE0=[F:ZTE]ZBPCORD;[F:ZZAT]ZCHAUFFEUR
            If(fstat=0)Then
              [F:ZZAT]ZTRPINT  = [F:ZCE]ZTRPINT
            Endif
            [F:ZZAT]ZDEPNUM    = [F:ZTE]ZDEPNUM
            Write[F:ZZAT]
            If(fstat<>0)Then
              WERRTRAIT = 1
              INFO = "[14.1] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZATRIER"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Break
            Else
              #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZATRIER
              #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
              #Les champs de la table sont les suivants :
              Raz[F:ZZHL]
              [F:ZZHL]          = [F:ZZAT]
              [F:ZZHL]ZACTNUM   = [F:ZTE]ZACTNUM
              [F:ZZHL]ZDATACT   = date$
              [F:ZZHL]ZHEUACT   = time$
              [F:ZZHL]ZACTG     = [F:ZTE]ZACT
              Write[F:ZZHL]
              If(fstat<>0)Then
                WERRTRAIT = 1
                INFO = "[14.2] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
                If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                Break
              Endif
            Endif
          Else
            WERRTRAIT = 1
            INFO = "[14.3] - Des erreurs se sont produites lors de la rcupération du compteur pour la table ZZATRIER"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
            Break
          Endif
        Next WNBPALTRAIT
      Else
        WERRTRAIT = 1
        INFO = "[14.4] - Impossible de récupérer les informations de l'article de réception du chargeur"
        If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
      Endif
    Elsif([F:ZTE]ZACT=15)Then
      #-------------------------------------------------------------------------------------------------------------------------------------------
      #TODO------------------------------------------SORTIE DIVERSE PALETTES A TRIER--------------------------------------------------------------
      #-------------------------------------------------------------------------------------------------------------------------------------------
      If WFICTRA : Call ECR_TRACE("Exécution d'une ligne d'action : Sortie diverse (palettes à trier) de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN : Endif
      #-----------------ETAPE N°1--------------------
      #Description : On va alimenter la table des stocks
      Local Integer WNBPALTRAIT : WNBPALTRAIT = 0
      WNBPALTRAIT = 0
      #On prend dans le stock de palettes à trier du chargeur et du site jusqu'à arriver à la qté souhaitée
      For[F:ZZAT]ZZAT0 Where [F:ZZAT]ZBPCORD=[F:ZTE]ZBPCORD and [F:ZZAT]ZFCY=[F:ZTE]ZFCY
        #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
        #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
        #Les champs de la table sont les suivants :
        Raz[F:ZZHL]
        [F:ZZHL]ZACTG     = 15
        [F:ZZHL]ZACTNUM   = [F:ZTE]ZACTNUM
        [F:ZZHL]ZDEPNUM   = [F:ZZAT]ZDEPNUM
        [F:ZZHL]ZFCY      = [F:ZZAT]ZFCY
        [F:ZZHL]ZITMREF   = [F:ZZAT]ZITMREF
        [F:ZZHL]ZQTY      = [F:ZZAT]ZQTY
        [F:ZZHL]ZSEQ      = [F:ZZAT]ZSEQ
        [F:ZZHL]ZTYPAL    = 0
        [F:ZZHL]ZDATACT   = date$
        [F:ZZHL]ZHEUACT   = time$
        Write[F:ZZHL]
        WNBPALTRAIT += [F:ZZAT]ZQTY
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[15.1] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          Break
        Else
          #On va maintenant supprimer l'enregistrement de la table ZZATRIER
          Delete [F:ZZAT] Where [F:ZZAT]ZSEQ=[F:ZZHL]ZSEQ
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[15.2] - ERREUR Suppression"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          Endif
        Endif
        If(WNBPALTRAIT>=[F:ZTE]ZQTY)Then
          Break
        Endif
      Next
    Elsif([F:ZTE]ZACT=16)Then
      #-------------------------------------------------------------------------------------------------------------------------------------------
      #TODO---------------------------------------------Transfert PALETTES A TRIER----------------------------------------------------------------
      #-------------------------------------------------------------------------------------------------------------------------------------------
      If WFICTRA : Call ECR_TRACE("Exécution d'une ligne d'action : Transfert (palettes à trier) de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF + " du site " + [F:ZTE]ZFCY +
& " vers le site " + [F:ZTE]ZFCYREC,0) From GESECRAN : Endif
      #-----------------ETAPE N°1--------------------
      #Description : On va récupérer les palettes à traiter
      Local Integer WNBPALTRAIT : WNBPALTRAIT = 0
      WNBPALTRAIT = 0
      #On prend dans le stock de palettes à trier du chargeur et du site jusqu'à arriver à la qté souhaitée
      For[F:ZZAT]ZZAT0 Where [F:ZZAT]ZBPCORD=[F:ZTE]ZBPCORD and [F:ZZAT]ZFCY=[F:ZTE]ZFCY
        #Pour chaque enregistrement, on va modifier le site
        [F:ZZAT]ZFCY      = [F:ZTE]ZFCYREC
        Rewrite[F:ZZAT]
        If(fstat=0)Then
          #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
          #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
          #Les champs de la table sont les suivants :
          Raz[F:ZZHL]
          [F:ZZHL]ZACTG     = 16
          [F:ZZHL]ZACTNUM   = [F:ZTE]ZACTNUM
          [F:ZZHL]ZDEPNUM   = [F:ZZAT]ZDEPNUM
          [F:ZZHL]ZFCY      = [F:ZZAT]ZFCY
          [F:ZZHL]ZITMREF   = [F:ZZAT]ZITMREF
          [F:ZZHL]ZQTY      = [F:ZZAT]ZQTY
          [F:ZZHL]ZSEQ      = [F:ZZAT]ZSEQ
          [F:ZZHL]ZTYPAL    = 0
          [F:ZZHL]ZDATACT   = date$
          [F:ZZHL]ZHEUACT   = time$
          Write[F:ZZHL]
          WNBPALTRAIT += [F:ZZAT]ZQTY
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[16.1] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
            Break
          Endif
          If(WNBPALTRAIT>=[F:ZTE]ZQTY)Then
            Break
          Endif
        Else
          WERRTRAIT = 1
          INFO = "[16.2] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZAT"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          Break
        Endif
      Next
    Elsif([F:ZTE]ZACT=9)Then
      #-------------------------------------------------------------------------------------------------------------------------------------------
      #TODO------------------------------------------------ACHAT EXT. CHARGEUR--------------------------------------------------------------------
      #-------------------------------------------------------------------------------------------------------------------------------------------
      If WFICTRA : Call ECR_TRACE("Exécution d'une ligne d'action : Achat ext. chargeur de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN : Endif
      #-----------------ETAPE N°1--------------------
      #Description : On va alimenter la table des stocks
      Local Integer WNBPALTRAIT : WNBPALTRAIT = 0
      #On récupère l'informaation pour savoir si c'est un transport interne

      Local Char WFILTRESUPP(100) : WFILTRESUPP = "1=1"
      Local Char WCODCLT(30) : WCODCLT = ""
      Local Integer WPARAMSPE : WPARAMSPE = 0
      Local Char WTIERSCF(30)
      #<----- MODIFICATION JBS du 12/12/2019-----
      # Dans le cas d'un achat externe chargeur, on va positionner le type de transport à 1
      WTRPINTENT = 1
      #----------------------------------------->
      If([F:ZTE]ZCODCLT<>"")Then
        If clalev([F:ZT2])=0 : Local File ZARTTRICC [F:ZT2] : Endif
        For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZTE]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZTE]ZCODCLT
          WPARAMSPE = 1
          Break
        Next
      Endif
      If clalev([F:ZATV])<>0 : Close File [F:ZATV] : Endif
      If(WPARAMSPE=0)Then
        If clalev([F:ZATV])=0 : Local File ZARTTRIV   [F:ZATV] : Endif
        Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;"";[F:ZTE]ZITMREF
     Else
        If clalev([F:ZATV])=0 : Local File ZARTTRICCV [F:ZATV] : Endif
        WCODCLT = [F:ZTE]ZCODCLT
        WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
        Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT;[F:ZTE]ZITMREF
      Endif
      #<----------------------------------------------------------------------------------------------------------
      # Dans une action d'achat ext chargeur, il faut que l'on regarde si on mouvemente les stocks ou pas.
      # Dans le cas ou le chargeur et le client chargeur ont leur axe métier à HP alors il ne faut pas mouvementer
      # les stocks donc faire comme si on ne gérait rien en stock.
      # On va donc commencer par alimenter une variable pour savoir si on est dans ce cas là
      Local Integer WALIMSTO : WALIMSTO = 1 # 1 : on alimente les stocks, 0 : on n'alimente pas les stocks
      If([F:ZTE]ZCODCLT<>"")Then
        #Dans ce cas, on va récupérer l'axe metier du chargeur et du client chargeur
        Read[F:BPC]BPC0=[F:ZTE]ZBPCORD
        If(fstat=0)Then
          Read[F:ZAI]ZAI0=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT
          If(fstat=0)Then
            #If([F:BPC]ZAXEMETEPI="HP" and [F:ZAI]ZAXEMETEPI="HP")Then
            If([F:BPC]ZMODGESTEPI=3 and [F:ZAI]ZMODGESTEPI=3)Then
              #On est dans le cas où on ne gère pas de stock
              WALIMSTO = 0
            Endif
          Endif
        Endif
      Endif
      #---------------------------------------------------------------------------------------------------------->
      # On commence par récupérer les informations de l'article de tri dans le paramétrage du chargeur ou du client chargeur
      If(fstat=0)Then
        #On est dans le cas ou on alimente directement le stock ZZSTOCK
        For WNBPALTRAIT=1 To [F:ZTE]ZQTY
          Raz[F:ZZS]
          Call NUMERO("ZZSTO","",date$,"",WSEQ,WSTAT) From SUBANM
          If WSTAT=0
            [F:ZZS]ZACTG      = 9
            If([F:ZATV]ZCODCHARGSTO<>"")Then
              [F:ZZS]ZBPCORD  = [F:ZATV]ZCODCHARGSTO
            Else
              [F:ZZS]ZBPCORD  = [F:ZTE]ZBPCORD
            Endif
            [F:ZZS]ZBPCORDF   = [F:ZTE]ZBPCORD
            #[F:ZZS]ZCHAUFFEUR = [F:ZTE]ZCHAUFFEUR
            [F:ZZS]ZCHAUFFEUR = ""
            [F:ZZS]ZCODCLT    = [F:ZTE]ZCODCLT
            [F:ZZS]ZDATTRI    = [F:ZTE]ZDATACT
            [F:ZZS]ZDATVAL    = date$
            [F:ZZS]ZFCY       = [F:ZTE]ZFCY
            [F:ZZS]ZGESTHS    = [F:ZATV]ZGESTHS
            [F:ZZS]ZGESTKC    = [F:ZATV]ZGESTKC
            [F:ZZS]ZGESTOK    = [F:ZATV]ZGESTOK
            [F:ZZS]ZITMREF    = [F:ZTE]ZITMREF
            [F:ZZS]ZORIGIN    = [F:ZTE]ZACTNUM
            [F:ZZS]ZPAYSISO   = [F:ZTE]ZPAYS
            [F:ZZS]ZQTY       = 1
            [F:ZZS]ZSEQ       = WSEQ
            [F:ZZS]ZTRPINT    = WTRPINTENT
            [F:ZZS]ZTYPAL     = [F:ZTE]ZTYPPAL
            [F:ZZS]ZDEPNUM    = [F:ZTE]ZDEPNUM
            Write[F:ZZS]
            If(fstat<>0)Then
              WERRTRAIT = 1
              INFO = "[9.1] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZSTOCK"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Break
            Else
              #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
              #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
              #Les champs de la table sont les suivants :
              Raz[F:ZZHL]
              [F:ZZHL]          = [F:ZZS]
              [F:ZZHL]ZACTNUM   = [F:ZTE]VCRNUM
              [F:ZZHL]ZDATACT   = date$
              [F:ZZHL]ZHEUACT   = time$
              Write[F:ZZHL]
              If(fstat<>0)Then
                WERRTRAIT = 1
                INFO = "[9.2] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
                If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
                Break
              Endif
            Endif
          Else
            WERRTRAIT = 1
            INFO = "[9.3] - Des erreurs se sont produites lors de la rcupération du compteur pour la table ZZSTOCK"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
            Break
          Endif
        Next WNBPALTRAIT
      Else
        WERRTRAIT = 1
        INFO = "[9.4] - Impossible de récupérer les informations de l'article de tri du chargeur"
        If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
      Endif
      #-----------------ETAPE N°2--------------------
      #Description : On va regarder s'il y a des choses à facturer suite à ce tri
      Local Integer WNB : WNB=0
      For[F:ZZS]ZZAT0 Where [F:ZZS]ZACTG=[F:ZTE]ZACT and [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF and [F:ZZS]ZTYPAL=[F:ZTE]ZTYPPAL
        WPARAMSPE = 0
        #Pour chaque palette que l'on va traiter, on va récupérer les informations au niveau de la palette
        If([F:ZZS]ZCODCLT<>"")Then
          For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZZS]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZZS]ZCODCLT
            WPARAMSPE = 1
            Break
          Next
        Endif
        If clalev([F:ZIE])<>0  : Close File [F:ZIE]  : Endif
        WCODCLT = ""
        WFILTRESUPP = "1=1"
        If(WPARAMSPE=0)Then
          If clalev([F:ZIE])=0  : Local File ZEPALIS    [F:ZIE]  : Endif
        Else
          If clalev([F:ZIE])=0  : Local File ZEPALIS3   [F:ZIE]  : Endif
          WCODCLT = [F:ZZS]ZCODCLT
          WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
        Endif
        WTRPINTENT = [F:ZZS]ZTRPINT
        WNB += 1
        Local Integer WPRESTAFACT : WPRESTAFACT = 0
        For [F:ZIE]ZIE0 Where [F:ZIE]CODE_CHARGEU=[F:ZZS]ZBPCORD and [F:ZIE]ART_TRI=[F:ZZS]ZITMREF and [F:ZIE]ZACTDEC="10031" and evalue(WFILTRESUPP)
          #On va regarder si l'article de prestation est à prendre en compte
          WARTPRESTOK = 0
          #On va regarder dans la table ZSPEAEX (ZSAEX) s'il y a des spécificités sur les articles de prestation dont l'action déclenchaante est Entrée diverse
          If clalev([F:ZSAEX])=0 : Local File ZSPEAEX [ZSAEX] : Endif
          #Première chose, on regarde s'il y a des spécificités
          Filter[F:ZSAEX] Where [F:ZSAEX]ZARNUM=[F:ZIE]ZARNUM and [F:ZSAEX]ZCODCHARG=[F:ZIE]CODE_CHARGEU and [F:ZSAEX]ZCODCLTCHARG=WCODCLT
          Local Integer WNBENRSPE : WNBENRSPE = 0
          WNBENRSPE = rowcount([F:ZSAEX])
          Filter[F:ZSEDI]
          #La table ZSPEAEX [F:ZSAEX] à les champs suivants :
          # ZCLTFOU : Client / Fournisseur
          # ZCODCHARG : Code chargeur
          # ZCODCLTCHARG : Code client chargeur
          # ZPAYS : Pays
          # ZSITE : Site coll.
          # ZQTYMAX : Qté max
          # ZQTYMIN : Qté min
          # ZTYPPAL : Qualité emballage
          # ZARTVEN : Code article de vente
          # ZARTACH : Code article achat
          Local Char WPARAM1(30)
          Local Char WPARAM2(30)
          Local Char WPARAM3(30)
          Local Char WPARAM4(30)
          Local Integer WPARAM5
          Local Char WARTVEN(30)
          Local Char WARTACH(30)
          WPARAM1 = [F:ZIE]ZARNUM
          WPARAM2 = [F:ZIE]CODE_CHARGEU
          WPARAM3 = WCODCLT
          If(WNBENRSPE>0)Then
            #--------------------CAS N°1--------------------
            #On commence par regarder si on est dans le cas S1 et Q1
            WPARAM4 = [F:ZTE]ZFCY : WPARAM5 = ([F:ZTE]ZTYPPAL+1)
            Gosub SPE_TRAIT_AEX From Z2WSEPALISC
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°2--------------------
              #On regarder si on est dans le cas ALL et Q1
              WPARAM4 = "ALL" : WPARAM5 = ([F:ZTE]ZTYPPAL+1)
              Gosub SPE_TRAIT_AEX From Z2WSEPALISC
            Endif
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°3--------------------
              #On regarder si on est dans le cas S1 et ALL
              WPARAM4 = [F:ZTE]ZFCY : WPARAM5 = 1
              Gosub SPE_TRAIT_AEX From Z2WSEPALISC
            Endif
            If(WARTPRESTOK=0)Then
              #--------------------CAS N°4--------------------
              #On regarder si on est dans le cas ALL et ALL
              WPARAM4 = "ALL" : WPARAM5 = 1
              Gosub SPE_TRAIT_AEX From Z2WSEPALISC
            Endif
          Else
            #Il n'y a pas d'enregistrement spécifique donc l"article de prestation sur lequel on se trouve est valable
            WARTPRESTOK = 1
            WTIERSCF = [F:ZIE]CODE_PAYEUR
            WPRIX = [F:ZIE]PRIX
          Endif
          If clalev([F:ZSAEX])<>0 : Close File [F:ZSAEX] : Endif
          If(WARTPRESTOK=1)Then
            #Pour le moment l'article de prestation est à prendre en compte, il faut maintenant que l'on regarde s'il n'est pas soumis
            #à un type de transporteur
            If not([F:ZIE]ZTYPTRSP=0 or [F:ZIE]ZTYPTRSP=1 or ([F:ZIE]ZTYPTRSP=2 and WTRPINTENT=2) or ([F:ZIE]ZTYPTRSP=3 and WTRPINTENT<>2))Then
              WARTPRESTOK = 0
            Endif
          Endif
          If(WARTPRESTOK=1)Then
            WCHARGACT = ""
            If([F:ZIE]ZTYPFLUX=2)Then
              WCHARGACT = [F:ZTE]ZBPCORD
            Endif
            Gosub SPE_ALIM_TAB_ACHVEN_FROM_ZZSTOCK From Z2WSEPALISC
          Endif
        Next
      Next
      #-----------------ETAPE N°3--------------------
      #Description : On va regarder s'il n'y a pas des palettes que l'on doit archiver.
      #Dans notre cas, on va regarder si les palettes que l'on a modifiée sont toujours gérée en stock
      For [F:ZZS]ZZAT0 Where [F:ZZS]ZACTG=[F:ZTE]ZACT and [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF
        #Seules les lignes suivantes nous interesse :
        # Les lignes dont le type st OK et dont la gestion des OK sont à faux
        If([F:ZZS]ZTYPAL=1 and ([F:ZZS]ZGESTOK<>2 or WALIMSTO=0))Then
          #On est sur une ligne qu'il faut archiver
          Raz[F:ZZSA]
          [F:ZZSA] = [F:ZZS]
          Write[F:ZZSA]
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[9.5] - Impossible d'archiver la ligne de stock(OK) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          Endif
        Endif
        # Les lignes dont le type st KC et dont la gestion des KC sont à faux
        If([F:ZZS]ZTYPAL=2 and ([F:ZZS]ZGESTKC<>2 or WALIMSTO=0))Then
          #On est sur une ligne qu'il faut archiver
          Raz[F:ZZSA]
          [F:ZZSA] = [F:ZZS]
          Write[F:ZZSA]
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[9.6] - Impossible d'archiver la ligne de stock(KC) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          Endif
        Endif
        # Les lignes dont le type st HS et dont la gestion des HS sont à faux
        If([F:ZZS]ZTYPAL=3 and ([F:ZZS]ZGESTHS<>2 or WALIMSTO=0))Then
          #On est sur une ligne qu'il faut archiver
          Raz[F:ZZSA]
          [F:ZZSA] = [F:ZZS]
          Write[F:ZZSA]
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[9.7] - Impossible d'archiver la ligne de stock(HS) : " + [F:ZZS]ZSEQ + " [ERREUR n° " + num$(fstat) + "]"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          Endif
        Endif
      Next
      If(WALIMSTO=1)Then
        #On est dans le cas où on gère le stock
        #On va maintenant supprimer toutes les lignes de stock modifié par l'action de collecte si les OK ne sont plus gérées
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZTYPAL=1 and [F:ZZS]ZGESTOK<>2
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[9.8] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
        #On va maintenant supprimer toutes les lignes de stock modifié par l'action de collecte si les KC ne sont plus gérées
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZTYPAL=2 and [F:ZZS]ZGESTKC<>2
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[9.9] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
        #On va maintenant supprimer toutes les lignes de stock modifié par l'action de collecte si les HS ne sont plus gérées
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZTYPAL=3 and [F:ZZS]ZGESTHS<>2
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[9.10] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
      Else
        #On est dans le cas où on ne gère pas le stock (cas du HP)
        #On va maintenant supprimer toutes les lignes de stock
        Delete [F:ZZS] Where [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM
        If(fstat<>0)Then
          WERRTRAIT = 1
          INFO = "[9.11] - ERREUR Suppression"
          If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endif
      Endif
    Elsif([F:ZTE]ZACT=8)Then
      #-------------------------------------------------------------------------------------------------------------------------------------------
      #TODO-------------------------------------------------TRANSFERT DE STOCK--------------------------------------------------------------------
      #-------------------------------------------------------------------------------------------------------------------------------------------
      If WFICTRA : Call ECR_TRACE("Exécution d'une ligne d'action : Transfert de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF + " du site " + [F:ZTE]ZFCY +
& " vers le site " + [F:ZTE]ZFCYREC,0) From GESECRAN : Endif
      Local Integer WNBPALTRAIT : WNBPALTRAIT = 0
      Local Char WFILTRESUPP(100) : WFILTRESUPP = "1=1"
      Local Char WCODCLT(30) : WCODCLT = ""
      Local Integer WPARAMSPE : WPARAMSPE = 0
      Local Char WTIERSCF(30)
      If clalev([F:ZT2])=0 : Local File ZARTTRICC [F:ZT2] : Endif
      For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZTE]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZTE]ZCODCLT
        WPARAMSPE = 1
        Break
      Next
      If clalev([F:ZATV])<>0 : Close File [F:ZATV] : Endif
      WCODCLT = ""
      If(WPARAMSPE=0)Then
        If clalev([F:ZATV])=0 : Local File ZARTTRIV   [F:ZATV] : Endif
        Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;"";[F:ZTE]ZITMREF
      Else
        If clalev([F:ZATV])=0 : Local File ZARTTRICCV [F:ZATV] : Endif
        WCODCLT = [F:ZTE]ZCODCLT
        WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
        Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT;[F:ZTE]ZITMREF
      Endif
      # On commence par récupérer les informations de l'article de réparation dans le paramétrage du chargeur ou du client chargeur
      #Read[F:ZATV]ZATV=[F:ZTE]ZBPCORD;[F:ZTE]ZCODCLT;[F:ZTE]ZITMREF
      If(fstat=0)Then
        #-----------------ETAPE N°1--------------------
        #Description : Récupérer les n palettes les plus anciennes à transférer
        WNUMLIG = 0
        Local Char WZSAVZACTNUM(30)
        For[F:ZZS]ZZAT0 Where [F:ZZS]ZBPCORD=[F:ZTE]ZBPCORD and [F:ZZS]ZFCY=[F:ZTE]ZFCY and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF and [F:ZZS]ZTYPAL=[F:ZTE]ZTYPPAL
          [F:ZZS]ZACTG      = [F:ZTE]ZACT
          [F:ZZS]ZDATVAL    = date$
#          WZSAVZACTNUM      = [F:ZZS]ZORIGIN
          [F:ZZS]ZORIGIN    = [F:ZTE]ZACTNUM
          [F:ZZS]ZFCY       = [F:ZTE]ZFCYREC
          Rewrite[F:ZZS]
          If(fstat<>0)Then
            WERRTRAIT = 1
            INFO = "[8.1] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZSTOCK"
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
            Break
          Else
            #Chaque fois que je créé ou que je modifie un enregistrement de la table ZZSTOCK
            #Je crée un enregistrement ensuite dans la table ZZHISTOLIGNE
            #Les champs de la table sont les suivants :
            Raz[F:ZZHL]
            [F:ZZHL]          = [F:ZZS]
#            [F:ZZHL]ZACTNUM   = WZSAVZACTNUM
            [F:ZZHL]ZACTNUM   = [F:ZTE]ZACTNUM
            [F:ZZHL]ZDATACT   = date$
            [F:ZZHL]ZHEUACT   = time$
            Write[F:ZZHL]
            If(fstat<>0)Then
              WERRTRAIT = 1
              INFO = "[8.2] - Des erreurs se sont produites lors de la sauvegarde d'un enregistrement dans la table ZZHISTOLIGNE"
              If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
              Break
            Endif
          Endif
          WNUMLIG += [F:ZZS]ZQTY
          If(WNUMLIG>=[F:ZTE]ZQTY)Then
            #On vient d'atteindre la qté à relocaliser, on sort de la boucle
            Break
          Endif
        Next
        #-----------------ETAPE N°2--------------------
        #Description : On va regarder s'il y a des choses à facturer suite à ce transfert
        WTRPINTSOR = 1
        Read[F:ZCE]ZCE0=[F:ZTE]ZBPCORD;[F:ZTE]ZCHAUFFEUR
        If(fstat=0)Then
          WTRPINTSOR = [F:ZCE]ZTRPINT
        Endif
        Local Integer WNB : WNB=0
        For[F:ZZS]ZZAT0 Where [F:ZZS]ZACTG=[F:ZTE]ZACT and [F:ZZS]ZORIGIN=[F:ZTE]ZACTNUM and [F:ZZS]ZITMREF=[F:ZTE]ZITMREF and [F:ZZS]ZTYPAL=[F:ZTE]ZTYPPAL
          WPARAMSPE = 0
          #Pour chaque palette que l'on va traiter, on va récupérer les informations au niveau de la palette
          For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:ZZS]ZBPCORD and [F:ZT2]ZCODCLTCHARG=[F:ZZS]ZCODCLT
            WPARAMSPE = 1
            Break
          Next
          If clalev([F:ZIE])<>0  : Close File [F:ZIE]  : Endif
          WCODCLT = ""
          WFILTRESUPP = "1=1"
          If(WPARAMSPE=0)Then
            If clalev([F:ZIE])=0  : Local File ZEPALIS    [F:ZIE]  : Endif
          Else
            If clalev([F:ZIE])=0  : Local File ZEPALIS3   [F:ZIE]  : Endif
            WCODCLT = [F:ZZS]ZCODCLT
            WFILTRESUPP = " ZCODCLTCHARG='" + WCODCLT + "' & CODE_CLTCHG='" + WCODCLT + "'"
          Endif
          WTRPINTENT = [F:ZZS]ZTRPINT
          WNB += 1
          Local Integer WPRESTAFACT : WPRESTAFACT = 0
          For [F:ZIE]ZIE0 Where [F:ZIE]CODE_CHARGEU=[F:ZZS]ZBPCORD and [F:ZIE]ART_TRI=[F:ZZS]ZITMREF and ([F:ZIE]ZACTDEC="10021" or [F:ZIE]ZACTDEC="20021" or [F:ZIE]ZACTDEC="30021") and evalue(
& WFILTRESUPP)
            #On va regarder si l'article de prestation est à prendre en compte
            WARTPRESTOK = 0
            #On va regarder dans la table ZSPETDS (ZSTDS) s'il y a des spécificités sur les articles de prestation dont l'action déclenchaante est transfert de stock
            If clalev([F:ZSTDS])=0 : Local File ZSPETDS [F:ZSTDS] : Endif
            #Première chose, on regarde s'il y a des spécificités
            Filter[F:ZSTDS] Where [F:ZSTDS]ZARNUM=[F:ZIE]ZARNUM and [F:ZSTDS]ZCODCHARG=[F:ZIE]CODE_CHARGEU and [F:ZSTDS]ZCODCLTCHARG=WCODCLT
            Local Integer WNBENRSPE : WNBENRSPE = 0
            WNBENRSPE = rowcount([F:ZSTDS])
            Filter[F:ZSTDS]
            Local Char WPARAM1(30)
            Local Char WPARAM2(30)
            Local Char WPARAM3(30)
            Local Char WPARAM4(30) #Site de départ
            Local Char WPARAM5(30) #Site d'arrivée
            Local Integer WPARAM6  #Type d'emballage
            Local Char WARTVEN(30)
            Local Char WARTACH(30)
            WPARAM1 = [F:ZIE]ZARNUM
            WPARAM2 = [F:ZIE]CODE_CHARGEU
            WPARAM3 = WCODCLT
            Local Integer WNUMCAS
            If(WNBENRSPE>0)Then
              #--------------------CAS N°1--------------------
              #On commence par regarder si on est dans le cas SD1, SA1 et Q1
              WPARAM4 = [F:ZTE]ZFCY : WPARAM5 = [F:ZTE]ZFCYREC : WPARAM6 = ([F:ZTE]ZTYPPAL+1)
              WNUMCAS = 1 : Gosub SPE_TRAIT_TDS From Z2WSEPALISC
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°2--------------------
                #On commence par regarder si on est dans le cas SD1, SA1 et ALL
                WPARAM4 = [F:ZTE]ZFCY : WPARAM5 = [F:ZTE]ZFCYREC : WPARAM6 = 1
                WNUMCAS = 2 : Gosub SPE_TRAIT_TDS From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°3--------------------
                #On commence par regarder si on est dans le cas SD1, ALL et Q1
                WPARAM4 = [F:ZTE]ZFCY : WPARAM5 = "ALL" : WPARAM6 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 3 : Gosub SPE_TRAIT_TDS From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°4--------------------
                #On commence par regarder si on est dans le cas SD1, ALL et ALL
                WPARAM4 = [F:ZTE]ZFCY : WPARAM5 = "ALL" : WPARAM6 = 1
                WNUMCAS = 4 : Gosub SPE_TRAIT_TDS From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°5--------------------
                #On commence par regarder si on est dans le cas ALL, SA1 et Q1
                WPARAM4 = "ALL" : WPARAM5 = [F:ZTE]ZFCYREC : WPARAM6 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 5 : Gosub SPE_TRAIT_TDS From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°6--------------------
                #On commence par regarder si on est dans le cas ALL, SA1 et ALL
                WPARAM4 = "ALL" : WPARAM5 = [F:ZTE]ZFCYREC : WPARAM6 = 1
                WNUMCAS = 6 : Gosub SPE_TRAIT_TDS From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°7--------------------
                #On commence par regarder si on est dans le cas ALL, ALL et Q1
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = ([F:ZTE]ZTYPPAL+1)
                WNUMCAS = 7 : Gosub SPE_TRAIT_TDS From Z2WSEPALISC
              Endif
              If(WARTPRESTOK=0)Then
                #--------------------CAS N°8--------------------
                #On commence par regarder si on est dans le cas ALL, ALL et ALL
                WPARAM4 = "ALL" : WPARAM5 = "ALL" : WPARAM6 = 1
                WNUMCAS = 8 : Gosub SPE_TRAIT_TDS From Z2WSEPALISC
              Endif
            Else
              #Il n'y a pas d'enregistrement spécifique donc l"article de prestation sur lequel on se trouve est valable
              WARTPRESTOK = 1
              #<----- MODIF JBS du 09/12/2019-----
              #WTIERSCF = [F:ZIE]CODE_PAYEUR
              WTIERSCF = [F:ZTE]ZBPCORDF
              #---------------------------------->
              WPRIX = [F:ZIE]PRIX
            Endif
            If clalev([F:ZSTDS])<>0 : Close File [F:ZSTDS] : Endif
            #Dans le cas d'une prestation on ne tiens pas compte du type de transport
            If(WARTPRESTOK=1)Then
              #Pour le moment l'article de prestation est à prendre en compte, il faut maintenant que l'on regarde s'il n'est pas soumis
              #à un type de transporteur
              # LEs types de transport sur les articles de prestation de type reloc sont les suivants :
              # 0 ou 1 - Pas soumis
              # 2 - Interne - Entrée
              # 3 - Externe - Entrée
              # 4 - Interne - Sortie
              # 5 - Externe - Sortie
              # Donc l'article de prestation est valable dans les cas suivants :
              # 1 - [F:ZIE]ZTYPTRSP=0
              # 2 - [F:ZIE]ZTYPTRSP=1
              # 3 - ([F:ZIE]ZTYPTRSP=2 and WTRPINTENT=2)
              # 4 - ([F:ZIE]ZTYPTRSP=3 and WTRPINTENT<>2)
              # 5 - ([F:ZIE]ZTYPTRSP=4 and WTRPINTSOR=2)
              # 6 - ([F:ZIE]ZTYPTRSP=5 and WTRPINTSOR<>2)
              If not(
& [F:ZIE]ZTYPTRSP=0
& or [F:ZIE]ZTYPTRSP=1
& or ([F:ZIE]ZTYPTRSP=2 and WTRPINTENT=2)
& or ([F:ZIE]ZTYPTRSP=3 and WTRPINTENT<>2)
& or ([F:ZIE]ZTYPTRSP=4 and WTRPINTSOR=2)
& or ([F:ZIE]ZTYPTRSP=5 and WTRPINTSOR<>2)
& )Then
                WARTPRESTOK = 0
              Endif
            Endif
            #Dans le cas où l'article de prestation est à prendre en compte, si [F:ZIE]ZACTDEC="20021" ou [F:ZIE]ZACTDEC="30021"
            #si l'article a été réparé ou transformé avant d'être transféré
            If(WARTPRESTOK=1)Then
              #remarques SLB du 26 et 27 septembre 2019 :
              # si une palette a été réparée puis transformée, on ne facture que la transformation
              # si une palette a été transformée 2 fois, on ne prends en compte qu'une transformation
              If([F:ZIE]ZACTDEC="30021")Then
                #On est sur un article de prestation qui se déclenche si la palette a été transformée
                #On va donc regarder si dans sa vie a palette a été transformée
                #La palette a été transformée si dans sa vie elle a eu un code palette différent de celui qu'elle possède aujourd'hui
                WARTPRESTOK = 0
                For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZSEQ=[F:ZZS]ZSEQ and [F:ZZHL]ZACTG=3
                  #La palette que l'on est en train de sortir est une palette qui a été réparée
                  WARTPRESTOK = 1
                  Break
                Next
              Endif
              If([F:ZIE]ZACTDEC="20021")Then
                #On est sur un article de prestation qui se déclenche si la palette a été réparée
                #On va donc regarder si dans sa vie la palette a été réparée
                WARTPRESTOK = 0
                For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZSEQ=[F:ZZS]ZSEQ and [F:ZZHL]ZACTG=1
                  #La palette que l'on est en train de sortir est une palette qui a été réparée
                  WARTPRESTOK = 1
                  Break
                Next
              Endif
            Endif
            If(WARTPRESTOK=1)Then
              WCHARGACT = ""
              If([F:ZIE]ZTYPFLUX=2)Then
                WCHARGACT = [F:ZTE]ZBPCORD
              Endif
              Gosub SPE_ALIM_TAB_ACHVEN_FROM_ZZSTOCK From Z2WSEPALISC
            Endif
          Next
        Next
      Else
        WERRTRAIT = 1
        INFO = "[8.3] - Impossible de récupérer les informations de l'article de tri du chargeur"
        If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
      Endif
      #----------------------------------------------
    Endif
    #---------------------------------------------------------------------------------------------------------------------------------------------
    If(WERRTRAIT=0)Then
      Local Char WACTION(30) : WACTION = ""
      Local Char WLIBTYP(30) : WLIBTYP = ""
      Case [F:ZTE]ZACT
        When 1  : WACTION = "Réparation"
        When 2  : WACTION = "Relocalisation"
        When 3  : WACTION = "Transformation"
        When 5  : WACTION = "Entrée diverse"
        When 6  : WACTION = "Sortie diverse"
        When 7  : WACTION = "Destruction / Rachat"
        When 8  : WACTION = "Trasnfert de stock"
        When 9  : WACTION = "Achat ext. chargeur"
        When 11 : WACTION = "Trier de palette"
        When 12 : WACTION = "Réception de palette"
        When 14 : WACTION = "Entrée diverse Palettes à trier"
        When 15 : WACTION = "Sortie diverse Palettes à trier"
        When 16 : WACTION = "Transfert Palettes à trier"
      Endcase
      Case [F:ZTE]ZTYPPAL
        When 1  : WLIBTYP = "OK"
        When 2  : WLIBTYP = "KC"
        When 3  : WLIBTYP = "HS"
      Endcase
      If WFICTRA : Call ECR_TRACE("     -----> Action : " + WACTION + " de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF + " --" + WLIBTYP + "--",0) From GESECRAN : Endif
      #On va mettre à jour l'enregistrement pour dire que la ligne d'action a été effectuée
      [F:ZTE]ZACTOK = 2
      [F:ZTE]ZEXEACT=date$
      [F:ZTE]ZEXEACTH=time$
      Rewrite [F:ZTE]
      If(fstat<>0)Then
        WERRTRAIT = 1
        INFO = "[0.1] - ERREUR Mise à jour table [F:ZTE]"
        If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
      Endif
    Endif
  Next
  #On va lancer le traitement permattant la
  #création de la conterpartie du transfert
  Call SPE_CREATE_CTRSF() From ZCREATETRSFENT
  #-----------------------------------------------------------------------------------------------------------------------------------------------
  #-------------------------------------------------FIN DU TRAITEMENT DE L'ACTION-----------------------------------------------------------------
  #-----------------------------------------------------------------------------------------------------------------------------------------------
  Local Char ZNOMFIC(250), WMESS(250), ZPREFIXFIC(250)
  ZPREFIXFIC = "DEPALIA_" + WZACTNUM + "_" + num$([L]WZACT) + "_"
  Local Integer WERR
  # Définition complète du nom du fichier
  ZNOMFIC=GZREPLIV
  If right$(GZREPLIV,len(GZREPLIV))<>"\"
      ZNOMFIC += "\"
  Endif
  #-----------------------------------------------------------------------------------------------------------------------------------------------
  #TODO------------------------------------- GESTION DE LA CREATION DES BONS DE LIVRAISONS -------------------------------------------------------
  #-----------------------------------------------------------------------------------------------------------------------------------------------
  Local Integer WNBSDH : WNBSDH = 0
  Local Char WTIERSSDH(250) : WTIERSSDH = ""
  If(WCRESDH=2)Then
    If WFICTRA : Call ECR_TRACE("Il y a des bons de livraisons à créer",0) From GESECRAN : Endif
    #On va devoir créer autant de BLs que de clients à facturer
    #On va commencer par constituer une chaine contenant tous les clients à facturer
    #On va parcourir une première fois le tableau
    For I=0 To WNEXTLIG-1
      If(WTYPIMP(I)=1 and instr(1,";" + WTIERSSDH + ";",";" + WTIERS(I) + ";")=0)Then
        #On n'a pas encore recontré ce client
        If(WTIERSSDH="")Then
          WTIERSSDH += WTIERS(I)
        Else
          WTIERSSDH += ";" + WTIERS(I)
        Endif
        WNBSDH += 1
      Endif
    Next
    Local Integer WNUMEXP : WNUMEXP = 0
    #A ce stade, on sait combien de BLs, on va devoir créer
    While(WTIERSSDH<>"")
      WNUMEXP += 1
      #On va récupérer le premier client
      Local Char WCLIENT(50)
      If(instr(1,WTIERSSDH,";")>0)Then
        WCLIENT = left$(WTIERSSDH,instr(1,WTIERSSDH,";")-1)
        WTIERSSDH = mid$(WTIERSSDH,instr(1,WTIERSSDH,";")+1,100)
      Else
        WCLIENT = WTIERSSDH
        WTIERSSDH = ""
      Endif
      Local Char WFICHIER(250)
      WFICHIER = ZNOMFIC + ZPREFIXFIC + "BLS_" + WCLIENT + "_" + WCOMPTEUR + ".TXT"
      Onerrgo PBCREATFICTXT
      Openo WFICHIER,0
      Onerrgo
      If WERR>0
        Case WERR
          When 20
            WERRTRAIT = 1
            INFO = "[0.2] - Répertoire inexistant. Arrêt du traitement."
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          When 27
            WERRTRAIT = 1
            INFO = "[0.3] - Accès impossible (permission refusée) au répertoire. Arrêt du traitement."
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          When 44
            WERRTRAIT = 1
            INFO = "[0.4] - Problème de place disque sur le répertoire. Arrêt du traitement."
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          When Default
            WERRTRAIT = 1
            INFO = "[0.5] - Problème système rencontré lors de la création du fichier ("+errmes$(WERR)+"). Arrêt du traitement."
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endcase
      Endif
      adxirs = chr$(13)+chr$(10)
      adxifs = ";"
      #Depuis les actions, nous allons utiliser le modèle d'import ZSDHEPI pour la création des BLs
      Local Mask SOH0
      Local Char WAXE1(10)
      Local Char WAXE2(10)
      Local Char WSECTION(30)
      Local Char WBPAADD(10)
      Local Char WCUR(10)
      Local Char WSITEBL(10)
      WSITEBL = WSITE
      [M:SOH0]SALFCY=WSITE
      Call INISEC(WAXE1,"SOH","AX1") From SUBCDE
      WCHARGACT = ""
      For I=0 To WNEXTLIG-1
        If(WTYPIMP(I)=1 and WTIERS(I)=WCLIENT and WCHARGEUR(I)<>"")Then
          #On est dans le cas d'un tri usine, il va donc falloir récupérer l'axe métier du chargeur de l'usine et non du client facturé
          WCHARGACT = WCHARGEUR(I)
        Endif
      Next
      If clalev([F:ZBPC])=0 : Local File BPCUSTOMER [F:ZBPC] : Endif
      #Lecture de l'enregistrement
#      If(WCHARGACT="")Then
#        Read [F:ZBPC]BPC0=WCLIENT
#      Else
#        Read [F:ZBPC]BPC0=WCHARGACT
#      Endif
#      If(fstat=0)Then
#        WAXE2   = [F:ZBPC]ZAXEMETEPI
#      Endif
      Local Char WCHGRAT(30) : WCHGRAT = ""
      Read [F:ZBPC]BPC0=WCLIENT
      If(fstat=0)Then
        WCHGRAT = [F:ZBPC]ZCLTRAT
        WBPAADD = [F:ZBPC]BPDADD
        WCUR    = [F:ZBPC]CUR
      Endif
      WDATEFFET = func Z2WSEPALISB.SPE_GET_DATEFFET(WDATACT,1)
      If(WDATEFFET=[0/0/0])Then
        WDATEFFET = WDATACT
      Endif
      #On va maintenant récupérer les informations du chargeur de rattachement
      Read [F:ZBPC]BPC0=WCHGRAT
      If(fstat=0)Then
        If([F:ZBPC]ZFACTURATION=2)Then
          WSITEBL = "E"    #Facturation globale
        Endif
        If(WZACT<>12 and WCODCLTACT<>"")Then
          #Dans le cas où on n'est pas sur une action de réception et que l'action se fait sur un client chargeur
          #dans le cas d'un HP par exemple, alors on va récupérer l'axe métier au niveau du client chargeur
          Read[F:ZAI]ZAI0=WCHGRAT;WCODCLTACT
          If(fstat=0)Then
            WAXE2   = [F:ZAI]ZAXEMETEPI
            If(WAXE2="")Then
              WAXE2 = [F:ZBPC]ZAXEMETEPI
            Endif
          Else
            WAXE2   = [F:ZBPC]ZAXEMETEPI
          Endif
        Else
          WAXE2     = [F:ZBPC]ZAXEMETEPI
        Endif
      Endif
      #Nous avons à disposition les variables suivantes :
      # WZACTNUM
      # WDATACT
      #Entête de la livraison
      #E,No livraison,Site vente,Site expédition,Client commande,Adresse livraison,Devise,Date expédition,Date livraison,Code chauffeur,N° commande EPALIS,N° export EPALIS,Section,Section,Date action
      Wrseq "E","",WSITE,WSITEBL,WCLIENT,WBPAADD,WCUR,WDATEFFET,WDATEFFET,"00001",WZACTNUM,WNUMEXP,WAXE1,WAXE2,WDATACT
      For I=0 To WNEXTLIG-1
        If(WTYPIMP(I)=1 and WTIERS(I)=WCLIENT)Then
#          Infbox "L" + "---" + WITMREF(I) + "---" + num$(WQTY(I)) + "---" + num$(WTABPRIX(I)) + "---" + WARTTRI(I) + "---" + num$(WTYPPAL(I)) + "---" + WAXE1 + "---" + WAXE2
          #Ligne de la livraison
          #L,Article,Quantité livrée,Prix brut,Art tri EPALIS,Qualité art. EPALIS,Axe analytique,Axe métier
          #Wrseq WTYPIMP(I),WTIERS(I),WITMREF(I),WTYPPAL(I),WARTTRI(I),WQTY(I),WTABPRIX(I),WCLIENT + "_" + WCOMPTEUR
          Wrseq "L",WITMREF(I),WQTY(I),WTABPRIX(I),WARTTRI(I),WTYPPAL(I),WAXE1,WAXE2
        Endif
      Next
      Openo
      #On va maintenant importer le fichier pour créer un BL
      # Import du fichier
      If WFICTRA : Call ECR_TRACE("Début de l'importation du fichier : |" + WFICHIER + "|",0) From GESECRAN : Endif
      Gosub OUVRE From GIMPOBJ
      [M:IMP2]MODIMP="ZSDHEPI"
      [M:IMP2]TYPEXP=2
      [M:IMP2]NOMIMP=WFICHIER
      GSERVEUR=1
      Gosub EXEC From GIMPOBJ
      GSERVEUR=0
      If WFICTRA : Call ECR_TRACE("Fin de l'importation du fichier",0) From GESECRAN : Endif
      # On va maintenant rechercher la livraison pour savoir si tout c'est bien passé
      If clalev([F:SDH2])=0 : Local File SDELIVERY [F:SDH2] : Endif
      If clalev([F:SDD2])=0 : Local File SDELIVERYD [F:SDD2] : Endif
      Local Char WSDHNUM(30) : WSDHNUM = ""
      Filter [F:SDH2] Where [F:SDH2]ZSOHNUMEPI=WZACTNUM and [F:SDH2]ZNUMEPI=WNUMEXP
      Read [F:SDH2]SDH0 First
      If(fstat<>0)Then
        WERRTRAIT = 1
        INFO = "[0.6] - Erreur lors de la création de la livraison."
        If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
      Else
        INFO = "Livraison numéro "+[F:SDH2]SDHNUM+" correctement créé."
        If WFICTRA : Call ECR_TRACE(INFO,0) From GESECRAN : Endif
        Call MESSAGE(INFO) From GESECRAN
        WSDHNUM = [F:SDH2]SDHNUM
        # On va maintenant alimenter la table ZZHISTOFAC
        For I=0 To WNEXTLIG-1
          #AFFICHAGE DU TABLEAU DES PRESTATIONS A FACTURER
          #Infbox num$(I) + "--" + num$(WTYPIMP(I)) + "--" + WTIERS(I) + "--" + WITMREF(I) + "--" + num$(WTYPPAL(I)) + "--" + WARTTRI(I) + "--" + num$(WQTY(I)) + "--" + num$(WTABPRIX(I))
          If(WTYPIMP(I)=1 and WTIERS(I)=WCLIENT)Then
            If(WVCRNUM<>"")Then
              #On est dans le cas d'un tri ou une réception via une collecte multichargeur
              If(WZACT=11)Then
                #On est dans le cas d'un tri depuis une collecte multi-chargeur
                For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZACTNUM=WVCRNUM and [F:ZZHL]ZITMREF=WARTTRI(I) and [F:ZZHL]ZTYPAL=WTYPPAL(I)
                  Raz[F:ZZHF]
                  [F:ZZHF]ZACTG     = WZACT
                  [F:ZZHF]ZNUMPIECE = WSDHNUM
                  [F:ZZHF]ZSEQ      = [F:ZZHL]ZSEQ
                  [F:ZZHF]ZTYPPIECE = 4
                  [F:ZZHF]ZDATACT   = date$
                  [F:ZZHF]ZHEUACT   = time$
                  [F:ZZHF]ZACTNUM   = WZACTNUM
                  Write[F:ZZHF]
                Next
              Elsif(WZACT=12)Then
                #On est dans le cas d'une réception depuis une collecte multi-chargeur
                For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZACTNUM=WVCRNUM and [F:ZZHL]ZITMREF=WARTTRI(I)
                  Raz[F:ZZHF]
                  [F:ZZHF]ZACTG     = WZACT
                  [F:ZZHF]ZNUMPIECE = WSDHNUM
                  [F:ZZHF]ZSEQ      = [F:ZZHL]ZSEQ
                  [F:ZZHF]ZTYPPIECE = 4
                  [F:ZZHF]ZDATACT   = date$
                  [F:ZZHF]ZHEUACT   = time$
                  [F:ZZHF]ZACTNUM   = WZACTNUM
                  Write[F:ZZHF]
                Next
              Endif
            Else
              If(WZACT=11 or WZACT=5 or WZACT=3)Then
                #Si c'est un tri par action
                For[F:ZZS]ZZAT0 Where [F:ZZS]ZORIGIN=WZACTNUM
                  For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZSEQ=[F:ZZS]ZSEQ
                    Raz[F:ZZHF]
                    [F:ZZHF]ZACTG     = WZACT
                    [F:ZZHF]ZNUMPIECE = WSDHNUM
                    [F:ZZHF]ZSEQ      = [F:ZZHL]ZSEQ
                    [F:ZZHF]ZTYPPIECE = 4
                    [F:ZZHF]ZDATACT   = date$
                    [F:ZZHF]ZHEUACT   = time$
                    [F:ZZHF]ZACTNUM   = WZACTNUM
                    Write[F:ZZHF]
                  Next
                Next
                #Dans le cas ou la palette à été archivée directement, on regarde dans la table des archive du stock
                For[F:ZZSA]ZZAT0 Where [F:ZZSA]ZORIGIN=WZACTNUM
                  For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZSEQ=[F:ZZSA]ZSEQ
                    Raz[F:ZZHF]
                    [F:ZZHF]ZACTG     = WZACT
                    [F:ZZHF]ZNUMPIECE = WSDHNUM
                    [F:ZZHF]ZSEQ      = [F:ZZHL]ZSEQ
                    [F:ZZHF]ZTYPPIECE = 4
                    [F:ZZHF]ZDATACT   = date$
                    [F:ZZHF]ZHEUACT   = time$
                    [F:ZZHF]ZACTNUM   = WZACTNUM
                    Write[F:ZZHF]
                  Next
                Next
              Else
                For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZACTNUM=WZACTNUM
                  Raz[F:ZZHF]
                  [F:ZZHF]ZACTG     = WZACT
                  [F:ZZHF]ZNUMPIECE = WSDHNUM
                  [F:ZZHF]ZSEQ      = [F:ZZHL]ZSEQ
                  [F:ZZHF]ZTYPPIECE = 4
                  [F:ZZHF]ZDATACT   = date$
                  [F:ZZHF]ZHEUACT   = time$
                  [F:ZZHF]ZACTNUM   = WZACTNUM
                  Write[F:ZZHF]
                Next
              Endif
            Endif
          Endif
        Next
      Endif
      Filter [F:SDH2]
    Wend
  Endif
  #-----------------------------------------------------------------------------------------------------------------------------------------------
  #TODO------------------------------------- GESTION DE LA CREATION DES BONS DE RECEPTIONS -------------------------------------------------------
  #-----------------------------------------------------------------------------------------------------------------------------------------------
  Local Integer WNBPTH : WNBPTH = 0
  Local Char WTIERSPTH(250) : WTIERSPTH = ""
  If(WCREPTH=2)Then
    If WFICTRA : Call ECR_TRACE("Il y a des bons de réceptions à créer",0) From GESECRAN : Endif
    #On va devoir créer autant de BRs que de fournisseurs différents
    #On va commencer par constituer une chaine contenant tous les fournisseurs
    #On va parcourir une première fois le tableau
    For I=0 To WNEXTLIG-1
      #Wrseq WTYPIMP(I),WTIERS(I),WITMREF(I),WTYPPAL(I),WARTTRI(I),WQTY(I),WTABPRIX(I)
      If(WTYPIMP(I)=2 and instr(1,";" + WTIERSPTH + ";",";" + WTIERS(I) + ";")=0)Then
        #On n'a pas encore recontré ce fournisseur
        If(WTIERSPTH="")Then
          WTIERSPTH += WTIERS(I)
        Else
          WTIERSPTH += ";" + WTIERS(I)
        Endif
        WNBPTH += 1
      Endif
    Next
    Local Integer WNUMEXP : WNUMEXP = 0
    #A ce stade, on sait combien de BLs, on va devoir créer
    While(WTIERSPTH<>"")
      WNUMEXP += 1
      #On va récupérer le premier client
      Local Char WFOURN(50)
      If(instr(1,WTIERSPTH,";")>0)Then
        WFOURN = left$(WTIERSPTH,instr(1,WTIERSPTH,";")-1)
        WTIERSPTH = mid$(WTIERSPTH,instr(1,WTIERSPTH,";")+1,100)
      Else
        WFOURN = WTIERSPTH
        WTIERSPTH = ""
      Endif
      Local Char WFICHIER(250)
      WFICHIER = ZNOMFIC + ZPREFIXFIC + "BRS_" + WFOURN + "_" + WCOMPTEUR + ".TXT"
      Onerrgo PBCREATFICTXT
      Openo WFICHIER,0
      Onerrgo
      If WERR>0
        Case WERR
          When 20
            WERRTRAIT = 1
            INFO = "[0.7] - Répertoire inexistant. Arrêt du traitement."
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          When 27
            WERRTRAIT = 1
            INFO = "[0.8] - Accès impossible (permission refusée) au répertoire. Arrêt du traitement."
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          When 44
            WERRTRAIT = 1
            INFO = "[0.9] - Problème de place disque sur le répertoire. Arrêt du traitement."
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
          When Default
            WERRTRAIT = 1
            INFO = "[0.10] - Problème système rencontré lors de la création du fichier ("+errmes$(WERR)+"). Arrêt du traitement."
            If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
        Endcase
      Endif
      adxirs = chr$(13)+chr$(10)
      adxifs = ";"
      #Depuis les actions, nous allons utiliser le modèle d'import ZSDHEPI pour la création des BLs
      Local Char WBPAADD(10)
      Local Char WREFERENCE(40) : WREFERENCE = ""
      Local Integer WNBPALETOT : WNBPALETOT = 0
      If clalev([F:ZBPS])=0 : Local File BPSUPPLIER [F:ZBPS] : Endif
      If clalev([F:ZBPC])=0 : Local File BPCUSTOMER [F:ZBPC] : Endif
      #Lecture de l'enregistrement
      Read [F:ZBPS]BPS0=WFOURN
      If(fstat=0)Then
        WBPAADD = [F:ZBPS]BPAADD
      Endif
      WDATEFFET = func Z2WSEPALISB.SPE_GET_DATEFFET(WDATACT,2)
      If(WDATEFFET=[0/0/0])Then
        WDATEFFET = WDATACT
      Endif
      #Nous allons récupérer l'axe métier pour le rachat au niveau de la fiche EPALIS du chargeur
      #--------------Modification JBS du 18/09/2017-------------------------
      #si WFOURN=WCODCHARG alors le bon de réception est attaché au chargeur
      #dans ce cas, l'axe métier achat est à prendre dans la fiche chargeur, champ ZAXEMETEPIA
      #par contre si WFOURN<>WCODCHARG alors le bon de réception est attaché à un autre fournisseur
      #dans ce cas, il faut récupérer les champ ZAXEMETST de la fiche fournisseur WFOURN
      Local Char WZAXEMETEPIA(5) : WZAXEMETEPIA = "P"
      Local Char WAXEANAACH(5)
      #---------------------------------------------------------------------
      #Nous avons à disposition les variables suivantes :
      # WZACTNUM
      # WDATACT
      #Entête de la réception
      #E,Site réception,No réception,Date réception,Fournisseur,Adresse,Code chauffeur,N° export EPALIS,No Bl fournisseur,Nb Pal. entrées,Validée,N° de commande
      Wrseq "E",WSITE,"",WDATEFFET,WFOURN,WBPAADD,"00001",WNUMEXP,WREFERENCE,WNBPALETOT,1,WZACTNUM
      For I=0 To WNEXTLIG-1
        If(WTYPIMP(I)=2 and WTIERS(I)=WFOURN)Then
          #Ligne de la réception
          #L,Article,Type de Palettes,Quantité UOM,Prix brut,Section analytique,Section analytique
          #Wrseq WTYPIMP(I),WTIERS(I),WITMREF(I),WTYPPAL(I),WARTTRI(I),WQTY(I),WTABPRIX(I),WCLIENT + "_" + WCOMPTEUR
          Read[F:ZBPC]BPC0=WCHARGEUR(I)
          If(fstat=0)Then
#            WAXEANAACH = [F:ZBPC]ZAXEANAEPIA
            WZAXEMETEPIA = [F:ZBPC]ZAXEMETEPIA
          Endif
          If(WFOURN<>WCHARGEUR(I))Then
            Read[F:ZBPS]BPS0=WFOURN
            If(fstat=0)Then
              WZAXEMETEPIA = [F:ZBPS]ZAXEMETST
            Endif
          Endif
          If clalev([F:FCY2])=0 : Local File FACILITY [FCY2] : Endif
          Read[F:FCY2]FCY0=WSITE
          If(fstat=0)Then
            WAXEANAACH = [FCY2]CCE(0)
          Endif
          Wrseq "L",WARTTRI(I),WTYPPAL(I),WQTY(I),WTABPRIX(I),WAXEANAACH,WZAXEMETEPIA
        Endif
      Next
      Openo
      #On va maintenant importer le fichier pour créer un BL
      # Import du fichier
      If WFICTRA : Call ECR_TRACE("Début de l'importation du fichier : |" + WFICHIER + "|",0) From GESECRAN : Endif
      Gosub OUVRE From GIMPOBJ
      [M:IMP2]MODIMP="ZPTHEPI"
      [M:IMP2]TYPEXP=2
      [M:IMP2]NOMIMP=WFICHIER
      GSERVEUR=1
      Gosub EXEC From GIMPOBJ
      GSERVEUR=0
      If WFICTRA : Call ECR_TRACE("Fin de l'importation du fichier",0) From GESECRAN : Endif
      # On va maintenant rechercher la livraison pour savoir si tout c'est bien passé
      If clalev([F:PTH2])=0 : Local File PRECEIPT [F:PTH2] : Endif
      If clalev([F:PTD2])=0 : Local File PRECEIPTD [F:PTD2] : Endif
      Local Char WPTHNUM(30) : WPTHNUM = ""
      Filter [F:PTH2] Where [F:PTH2]ZACTNUM=WZACTNUM and [F:PTH2]ZNUMEPI=num$(WNUMEXP)
      Read [F:PTH2]PTH0 First
      If(fstat<>0)Then
        WERRTRAIT = 1
        INFO = "[0.11] - Erreur lors de la création de la réception."
        If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
      Else
        INFO = "Réception numéro "+[F:PTH2]PTHNUM+" correctement créé."
        If WFICTRA : Call ECR_TRACE(INFO,0) From GESECRAN : Endif
        Call MESSAGE(INFO) From GESECRAN
        WPTHNUM = [F:PTH2]PTHNUM
        # On va maintenant alimenter la table ZZHISTOFAC
        For I=0 To WNEXTLIG-1
          #AFFICHAGE DU TABLEAU DES PRESTATIONS A FACTURER
          #Infbox num$(I) + "--" + num$(WTYPIMP(I)) + "--" + WTIERS(I) + "--" + WITMREF(I) + "--" + num$(WTYPPAL(I)) + "--" + WARTTRI(I) + "--" + num$(WQTY(I)) + "--" + num$(WTABPRIX(I))
          If(WTYPIMP(I)=2 and WTIERS(I)=WFOURN)Then
            If(WVCRNUM<>"")Then
              #On est dans le cas d'un tri ou une réception via une collecte multichargeur
              If(WZACT=11)Then
                #On est dans le cas d'un tri depuis une collecte multi-chargeur
                For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZACTNUM=WVCRNUM and [F:ZZHL]ZITMREF=WARTTRI(I) and [F:ZZHL]ZTYPAL=WTYPPAL(I)
                  Raz[F:ZZHF]
                  [F:ZZHF]ZACTG     = WZACT
                  [F:ZZHF]ZNUMPIECE = WPTHNUM
                  [F:ZZHF]ZSEQ      = [F:ZZHL]ZSEQ
                  [F:ZZHF]ZTYPPIECE = 27
                  [F:ZZHF]ZDATACT   = date$
                  [F:ZZHF]ZHEUACT   = time$
                  [F:ZZHF]ZACTNUM   = WZACTNUM
                  Write[F:ZZHF]
                Next
              Elsif(WZACT=12)Then
                #On est dans le cas d'une réception depuis une collecte multi-chargeur
                For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZACTNUM=WVCRNUM and [F:ZZHL]ZITMREF=WARTTRI(I)
                  Raz[F:ZZHF]
                  [F:ZZHF]ZACTG     = WZACT
                  [F:ZZHF]ZNUMPIECE = WPTHNUM
                  [F:ZZHF]ZSEQ      = [F:ZZHL]ZSEQ
                  [F:ZZHF]ZTYPPIECE = 27
                  [F:ZZHF]ZDATACT   = date$
                  [F:ZZHF]ZHEUACT   = time$
                  [F:ZZHF]ZACTNUM   = WZACTNUM
                  Write[F:ZZHF]
                Next
              Endif
            Else
              If(WZACT=11 or WZACT=5 or WZACT=3)Then
                #Si c'est un tri par action
                For[F:ZZS]ZZAT0 Where [F:ZZS]ZORIGIN=WZACTNUM
                  For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZSEQ=[F:ZZS]ZSEQ
                    Raz[F:ZZHF]
                    [F:ZZHF]ZACTG     = WZACT
                    [F:ZZHF]ZNUMPIECE = WPTHNUM
                    [F:ZZHF]ZSEQ      = [F:ZZHL]ZSEQ
                    [F:ZZHF]ZTYPPIECE = 27
                    [F:ZZHF]ZDATACT   = date$
                    [F:ZZHF]ZHEUACT   = time$
                    [F:ZZHF]ZACTNUM   = WZACTNUM
                    Write[F:ZZHF]
                  Next
                Next
                #Dans le cas ou la palette à été archivée directement, on regarde dans la table des archive du stock
                For[F:ZZSA]ZZAT0 Where [F:ZZSA]ZORIGIN=WZACTNUM
                  For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZSEQ=[F:ZZSA]ZSEQ
                    Raz[F:ZZHF]
                    [F:ZZHF]ZACTG     = WZACT
                    [F:ZZHF]ZNUMPIECE = WPTHNUM
                    [F:ZZHF]ZSEQ      = [F:ZZHL]ZSEQ
                    [F:ZZHF]ZTYPPIECE = 27
                    [F:ZZHF]ZDATACT   = date$
                    [F:ZZHF]ZHEUACT   = time$
                    [F:ZZHF]ZACTNUM   = WZACTNUM
                    Write[F:ZZHF]
                  Next
                Next
              Else
                For[F:ZZHL]ZZHL0 Where [F:ZZHL]ZACTNUM=WZACTNUM
                  Raz[F:ZZHF]
                  [F:ZZHF]ZACTG     = WZACT
                  [F:ZZHF]ZNUMPIECE = WPTHNUM
                  [F:ZZHF]ZSEQ      = [F:ZZHL]ZSEQ
                  [F:ZZHF]ZTYPPIECE = 27
                  [F:ZZHF]ZDATACT   = date$
                  [F:ZZHF]ZHEUACT   = time$
                  [F:ZZHF]ZACTNUM   = WZACTNUM
                  Write[F:ZZHF]
                Next
              Endif
            Endif
          Endif
        Next
      Endif
      Filter [F:PTH2]
    Wend
  Endif
  #-----------------------------------------------------------------------------------------------------------------------------------------------
  #TODO---------------------------------------------- APPLICATION OU PAS DES MODIFICATIONS -------------------------------------------------------
  #-----------------------------------------------------------------------------------------------------------------------------------------------
#  WERRTRAIT = 1
#  If(GUSER="JBS")Then
#    WERRTRAIT = 1
#  Endif
  If(WERRTRAIT=0)Then
    Commit
    INFO = "Validation de l'ensemble des modifications apportées par l'exécution de l'action"
    If WFICTRA : Call ECR_TRACE(INFO,0) From GESECRAN : Endif
  Else
    Rollback
    INFO = "[0.12] - Des problèmes sont survenus pendant l'exécution de l'action. Veuillez contactez l'administrateur système en lui joignant une copie d'écran des erreurs."
    If WFICTRA : Call ECR_TRACE(INFO,1) From GESECRAN : Endif
  Endif
  RESULT = WERRTRAIT
  If WFICTRA :Call FERME_TRACE From LECFIC : Endif
  TRA=1
  If(WFICTRA and GERRTRACE>0)Then
    Call LEC_TRACE From LECFIC
  Else
    Call MESSAGE(INFO) From GESECRAN
  Endif
End

Funprog GET_CODCLTCHG(WSOHNUM)
  Value Char WSOHNUM
  Local Char RESULT(30)
  # Ouverture des tables
  If clalev([F:SOH3])=0 : Local File SORDER [F:SOH3]: Endif
  RESULT = ""
  Read [F:SOH3]SOH0=WSOHNUM
  If(fstat=0)Then
    RESULT = [F:SOH3]ZCODCLT
  Endif
End RESULT

Funprog CONT_ART_ACTION(WFCY,WBPCORD,WBPAADD,WITMREF)
  Value Char WFCY
  Value Char WBPCORD
  Value Char WBPAADD
  Value Char WITMREF
  Local Integer RESULT
  Local Integer WPARAMOK : WPARAMOK = 0
  Local Integer WRELOCAUT : WRELOCAUT = 2 #On initialise la variable à "Refuser"
  If clalev([F:BPC])=0 : Local File BPCUSTOMER [F:BPC]: Endif
  If clalev([F:ZLA])=0 : Local File ZARTRELOC [F:ZLA]: Endif
  #Dans cette fonction on va regarder si le site WFCY, le client WBPCORD et l'adresse WBPAADD
  #peut relocaliser l'aticle WITMREF
  #On commence par regarder si le client à le droit de relocaliser tous les articles
  Read[F:BPC]BPC0=WBPCORD
  If(fstat=0)Then
    If([F:BPC]ZAUTHALLITM=2)Then
      #Tous les articles sont relocalisables
      RESULT = 1
    Else
      #Il existe un paramtrage spécifique pour les articles à relocaliser
      #On commence par regarder si les 4 critères sont remplis
      For[F:ZLA]ZLA0 Where [F:ZLA]ZLABPCNUM=WBPCORD and [F:ZLA]ZLAFCY=WFCY and [F:ZLA]ZLABPAADD=WBPAADD and [F:ZLA]ZLAITMREF=WITMREF
        WPARAMOK = 1
        WRELOCAUT = [F:ZLA]ZLATYPE
      Next
      If(WPARAMOK=0)Then
        For[F:ZLA]ZLA0 Where [F:ZLA]ZLABPCNUM=WBPCORD and [F:ZLA]ZLAFCY=WFCY and [F:ZLA]ZLABPAADD="" and [F:ZLA]ZLAITMREF=WITMREF
          WPARAMOK = 1
          WRELOCAUT = [F:ZLA]ZLATYPE
        Next
        If(WPARAMOK=0)Then
          For[F:ZLA]ZLA0 Where [F:ZLA]ZLABPCNUM=WBPCORD and [F:ZLA]ZLAFCY="" and [F:ZLA]ZLABPAADD=WBPAADD and [F:ZLA]ZLAITMREF=WITMREF
            WPARAMOK = 1
            WRELOCAUT = [F:ZLA]ZLATYPE
          Next
          If(WPARAMOK=0)Then
            For[F:ZLA]ZLA0 Where [F:ZLA]ZLABPCNUM=WBPCORD and [F:ZLA]ZLAFCY="" and [F:ZLA]ZLABPAADD="" and [F:ZLA]ZLAITMREF=WITMREF
              WPARAMOK = 1
              WRELOCAUT = [F:ZLA]ZLATYPE
            Next
          Endif
        Endif
      Endif
      RESULT = WRELOCAUT
    Endif
  Else
    RESULT = 2
  Endif
End RESULT

Funprog SPE_GET_COMPTEUR()
  Local Char RESULT(17)
  #Cette fonction permet de récupérer un compteur unique du type : 20171013153657177
  For (Char MA_DATE) From "5" Sql "select substring(replace(replace(replace(replace(cast(SYSDATETIME() as nvarchar(50)),'-',''),' ',''),'.',''),':',''),1,17)" As [XXX]
    RESULT = [F:XXX]MA_DATE
  Next
End RESULT

######################################################################### CLOSE_LECFIC
$CLOSE_LECFIC
If !GSERVEUR :Call FERME_TRACE From LECFIC : Endif
TRA=1
  If(GWEBSERV=0)Then
    Call LEC_TRACE From LECFIC
  Endif
Return

######################################################################### PBCREATFICTXT
$PBCREATFICTXT
WERR=errn
Resume

